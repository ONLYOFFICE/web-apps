{
	"DATE": {
		"a": "(year; month; day)",
		"d": "Vrátí číslo, které představuje datum v kódu pro datum a čas.",
		"ad": "je číslo od 1900 nebo 1904 (v závislosti na kalendářním systému sešitu) do 9999.!je číslo od 1 do 12, které představuje měsíc v roce.!je číslo od 1 do 31, které představuje den v měsíci."
	},
	"DATEDIF": {
		"a": "(počáteční_datum; konncové_datum; jednotka)",
		"d": "Vypočítá počet dnů, měsíců nebo roků mezi dvěma daty",
		"ad": "Datum, které představuje první nebo počáteční datum daného období!Datum, které představuje poslední nebo koncové datum období!Typ informací, které chcete vrátit"
	},
	"DATEVALUE": {
		"a": "(datum)",
		"d": "Převede datum ve formátu textu na číslo, které představuje datum v kódu pro datum a čas.",
		"ad": "je text, který představuje datum ve formátu data aplikace Spreadsheet Editor v rozsahu od 1/1/1900 nebo 1/1/1904 (v závislosti na kalendářním systému sešitu) do 12/31/9999."
	},
	"DAY": {
		"a": "(pořadové_číslo)",
		"d": "Vrátí den v měsíci, číslo od 1 do 31.",
		"ad": "je číslo v kódu aplikace Spreadsheet Editor pro datum a čas."
	},
	"DAYS": {
		"a": "(konec; začátek)",
		"d": "Vrátí počet dní mezi dvěma daty.",
		"ad": "začátek a konec jsou dvě kaledářní data, mezi kterými chcete zjistit počet dní!začátek a konec jsou dvě kalendářní data, mezi kterými chcete zjistit počet dní"
	},
	"DAYS360": {
		"a": "(start; konec; [metoda])",
		"d": "Vrátí počet dnů mezi dvěma daty na základě roku s 360 dny (dvanáct měsíců s 30 dny).",
		"ad": "Argumenty Start a Konec jsou data vymezující interval, jehož délku chcete určit.!Argumenty Start a Konec jsou data vymezující interval, jehož délku chcete určit.!je logická hodnota určující metodu výpočtu: US (NASD) = NEPRAVDA nebo bez zadání, evropská = PRAVDA."
	},
	"EDATE": {
		"a": "(začátek; měsíce)",
		"d": "Vrátí pořadové číslo data, což je určený počet měsíců před nebo po počátečním datu.",
		"ad": "je pořadové číslo, které představuje počáteční datum.!je počet měsíců před nebo po počátečním datu zadaném v argumentu Začátek."
	},
	"EOMONTH": {
		"a": "(začátek; měsíce)",
		"d": "Vrátí pořadové číslo posledního dne měsíce před nebo po určeném počtu měsíců.",
		"ad": "je pořadové číslo, které představuje počáteční datum.!je počet měsíců před nebo po počátečním datu zadaném v argumentu Začátek."
	},
	"HOUR": {
		"a": "(pořadové_číslo)",
		"d": "Vrátí hodiny jako číslo od 0 (12:00 dop.) do 23 (11:00 odp.).",
		"ad": "je číslo v kódu aplikace Spreadsheet Editor pro datum a čas nebo text ve formátu času, například 16:48:00 nebo 4:48:00 odp."
	},
	"ISOWEEKNUM": {
		"a": "(datum)",
		"d": "Vrátí číslo týdne ISO v roce pro dané datum.",
		"ad": "je kód pro datum a čas, který Spreadsheet Editor používá pro výpočet data a času."
	},
	"MINUTE": {
		"a": "(pořadové_číslo)",
		"d": "Vrátí minuty, číslo od 0 do 59.",
		"ad": "je číslo v kódu aplikace Spreadsheet Editor pro datum a čas nebo text ve formátu času, například 16:48:00 nebo 4:48:00 odp."
	},
	"MONTH": {
		"a": "(pořadové_číslo)",
		"d": "Vrátí měsíc, číslo od 1 (leden) do 12 (prosinec).",
		"ad": "je číslo v kódu aplikace Spreadsheet Editor pro datum a čas."
	},
	"NETWORKDAYS": {
		"a": "(začátek; konec; [svátky])",
		"d": "Vrátí počet celých pracovních dnů mezi dvěma zadanými daty.",
		"ad": "je pořadové číslo, které představuje počáteční datum.!je pořadové číslo, které představuje koncové datum.!je volitelná množina jednoho nebo více pořadových čísel dat, která chcete vyloučit z kalendáře pracovních dnů, například státní nebo pohyblivé svátky."
	},
	"NETWORKDAYS.INTL": {
		"a": "(začátek; konec; [víkend]; [svátky])",
		"d": "Vrátí počet celých pracovních dní mezi dvěma daty s vlastními parametry víkendu.",
		"ad": "je pořadové číslo, které představuje počáteční datum.!je pořadové číslo představující koncové datum.!je číslo nebo řetězec určující, které dny jsou považovány za víkendové.!je volitelná sada jednoho nebo více pořadových čísel dat, která chcete vyloučit z kalendáře pracovních dnů, například státní nebo pohyblivé svátky."
	},
	"NOW": {
		"a": "()",
		"d": "Vrátí aktuální datum a čas formátované jako datum a čas.",
		"ad": ""
	},
	"SECOND": {
		"a": "(pořadové_číslo)",
		"d": "Vrátí sekundy, číslo od 0 do 59.",
		"ad": "je číslo v kódu aplikace Spreadsheet Editor pro datum a čas nebo text ve formátu času, například 16:48:23 nebo 4:48:47 odp."
	},
	"TIME": {
		"a": "(hodina; minuta; sekunda)",
		"d": "Převede hodiny, minuty a sekundy zadané jako čísla na pořadové číslo formátované pomocí formátu času.",
		"ad": "je číslo od 0 do 23, které představuje hodiny.!je číslo od 0 do 59, které představuje minuty.!je číslo od 0 do 59, které představuje sekundy."
	},
	"TIMEVALUE": {
		"a": "(čas)",
		"d": "Převede čas ve formě textového řetězce na pořadové číslo vyjadřující čas, číslo od 0 (12:00:00 dop.) do 0,999988426 (11:59:59 odp.). Po zadání vzorce číslo zformátujte pomocí formátu času.",
		"ad": "je textový řetězec, který představuje čas v libovolném formátu času aplikace Spreadsheet Editor (informace o datech v řetězci jsou přeskočeny)."
	},
	"TODAY": {
		"a": "()",
		"d": "Vrátí aktuální datum formátované jako datum.",
		"ad": ""
	},
	"WEEKDAY": {
		"a": "(pořadové; [typ])",
		"d": "Vrátí číslo od 1 do 7 určující den v týdnu kalendářního data.",
		"ad": "je číslo, které představuje datum!je číslo: pro týden od neděle = 1 do soboty = 7 použijte číslo 1, pro týden od pondělka = 1 do neděle = 7 použijte číslo 2, pro týden od pondělka = 0 do neděle = 6 použijte číslo 3"
	},
	"WEEKNUM": {
		"a": "(pořad_číslo; [typ])",
		"d": "Vrátí číslo týdne v roce.",
		"ad": "je kód aplikace Spreadsheet Editor pro datum a čas používaný k výpočtu data a času.!je číslo (1 nebo 2) určující typ návratové hodnoty."
	},
	"WORKDAY": {
		"a": "(začátek; dny; [svátky])",
		"d": "Vrátí pořadové číslo data před nebo po zadaném počtu pracovních dnů.",
		"ad": "je pořadové číslo, které představuje počáteční datum.!je počet pracovních dnů před nebo po datu zadaném v argumentu Začátek.!je volitelná řada jednoho nebo více pořadových čísel dat, která chcete vyloučit z kalendáře pracovních dnů, například státní nebo pohyblivé svátky."
	},
	"WORKDAY.INTL": {
		"a": "(začátek; dny; [víkend]; [svátky])",
		"d": "Vrátí pořadové číslo data před nebo po zadaném počtu pracovních dnů s vlastními parametry víkendu.",
		"ad": "je pořadové číslo, které představuje počáteční datum.!je počet dnů kromě víkendu a svátků před nebo po datu zadaném v argumentu začátek.!je číslo nebo řetězec určující víkendy!je volitelná matice jednoho nebo více pořadových čísel dat, která chcete vyloučit z kalendáře pracovních dnů, například státní nebo pohyblivé svátky."
	},
	"YEAR": {
		"a": "(pořadové_číslo)",
		"d": "Vrátí rok kalendářního data, celé číslo v rozsahu od 1900 do 9999.",
		"ad": "je číslo v kódu aplikace Spreadsheet Editor pro datum a čas."
	},
	"YEARFRAC": {
		"a": "(začátek; konec; [základna])",
		"d": "Vrátí část roku vyjádřenou zlomkem a představující počet celých dnů mezi počátečním a koncovým datem.",
		"ad": "je pořadové číslo, které představuje počáteční datum.!je pořadové číslo, které představuje koncové datum.!je typ výpočtu určující počet dnů v měsíci, který chcete použít."
	},
	"BESSELI": {
		"a": "(x; n)",
		"d": "Vrátí modifikovanou Besselovu funkci In(x).",
		"ad": "je hodnota, pro kterou chcete funkci vyhodnotit.!je řád Besselovy funkce."
	},
	"BESSELJ": {
		"a": "(x; n)",
		"d": "Vrátí Besselovu funkci Jn(x).",
		"ad": "je hodnota, pro kterou chcete funkci vyhodnotit.!je řád Besselovy funkce."
	},
	"BESSELK": {
		"a": "(x; n)",
		"d": "Vrátí modifikovanou Besselovu funkci Kn(x).",
		"ad": "je hodnota, pro kterou chcete funkci vyhodnotit.!je řád funkce."
	},
	"BESSELY": {
		"a": "(x; n)",
		"d": "Vrátí Besselovu funkci Yn(x).",
		"ad": "je hodnota, pro kterou chcete funkci vyhodnotit.!je řád funkce."
	},
	"BIN2DEC": {
		"a": "(číslo)",
		"d": "Převede binární číslo na dekadické.",
		"ad": "je binární číslo, které chcete převést."
	},
	"BIN2HEX": {
		"a": "(číslo; [místa])",
		"d": "Převede binární číslo na hexadecimální.",
		"ad": "je binární číslo, které chcete převést.!je počet znaků, které chcete použít u výsledku."
	},
	"BIN2OCT": {
		"a": "(číslo; [místa])",
		"d": "Převede binární číslo na osmičkové.",
		"ad": "je binární číslo, které chcete převést.!je počet znaků, které chcete použít u výsledku."
	},
	"BITAND": {
		"a": "(číslo1; číslo2)",
		"d": "Vrátí bitové „A“ dvou čísel",
		"ad": "je desítkové vyjádření binárního čísla, které chcete vyhodnotit!je desítkové vyjádření binárního čísla, které chcete vyhodnotit"
	},
	"BITLSHIFT": {
		"a": "(číslo; velikost_posunu)",
		"d": "Vrátí číslo posunuté doleva o hodnotu velikost_posunu v bitech",
		"ad": "je desítkové vyjádření binárního čísla, které chcete vyhodnotit!je počet bitů, o které chcete číslo posunout doleva"
	},
	"BITOR": {
		"a": "(číslo1; číslo2)",
		"d": "Vrátí bitové „nebo“ ze dvou čísel",
		"ad": "je desítkové vyjádření binárního čísla, které chcete vyhodnotit!je desítkové vyjádření binárního čísla, které chcete vyhodnotit"
	},
	"BITRSHIFT": {
		"a": "(číslo; velikost_posunu)",
		"d": "Vrátí číslo posunuté doprava o hodnotu velikost_posunu v bitech",
		"ad": "je desítkové vyjádření binárního čísla, které chcete vyhodnotit!je počet bitů, o které chcete číslo posunout doprava"
	},
	"BITXOR": {
		"a": "(číslo1; číslo2)",
		"d": "Vrátí bitové „výhradní nebo“ ze dvou čísel",
		"ad": "je desítkové vyjádření binárního čísla, které chcete vyhodnotit!je desítkové vyjádření binárního čísla, které chcete vyhodnotit"
	},
	"COMPLEX": {
		"a": "(reál; imag; [přípona])",
		"d": "Převede reálnou a imaginární část na komplexní číslo",
		"ad": "je reálná část komplexního čísla.!je imaginární část komplexního čísla.!je označení imaginární části komplexního čísla."
	},
	"CONVERT": {
		"a": "(číslo; z; do)",
		"d": "Převede číslo do jiného jednotkového měrného systému.",
		"ad": "je hodnota v jednotkách argumentu z, kterou chcete převést.!jsou jednotky čísla.!jsou jednotky výsledku."
	},
	"DEC2BIN": {
		"a": "(číslo; [místa])",
		"d": "Převede dekadické číslo na binární.",
		"ad": "je dekadické celé číslo, které chcete převést.!je počet znaků, které chcete použít u výsledku."
	},
	"DEC2HEX": {
		"a": "(číslo; [místa])",
		"d": "Převede dekadické číslo na hexadecimální.",
		"ad": "je dekadické celé číslo, které chcete převést.!je počet znaků, které chcete použít u výsledku."
	},
	"DEC2OCT": {
		"a": "(číslo; [místa])",
		"d": "Převede dekadické číslo na osmičkové.",
		"ad": "je dekadické celé číslo, které chcete převést.!je počet znaků, které chcete použít u výsledku."
	},
	"DELTA": {
		"a": "(číslo1; [číslo2])",
		"d": "Testuje rovnost dvou čísel.",
		"ad": "je první číslo.!je druhé číslo."
	},
	"ERF": {
		"a": "(dolní_limit; [horní_limit])",
		"d": "Vrátí chybovou funkci.",
		"ad": "je dolní mez pro integraci funkce ERF.!je horní mez pro integraci funkce ERF."
	},
	"ERF.PRECISE": {
		"a": "(x)",
		"d": "Vrátí chybovou funkci.",
		"ad": "je dolní mez pro integraci funkce ERF.PRECISE"
	},
	"ERFC": {
		"a": "(x)",
		"d": "Vrátí doplňkovou chybovou funkci.",
		"ad": "je dolní mez pro integraci funkce ERF."
	},
	"ERFC.PRECISE": {
		"a": "(x)",
		"d": "Vrátí doplňkovou chybovou funkci.",
		"ad": "je dolní mez pro integraci funkce ERFC.PRECISE"
	},
	"GESTEP": {
		"a": "(číslo; [co])",
		"d": "Testuje, zda je číslo větší než mezní hodnota.",
		"ad": "je testovaná hodnota.!je mezní hodnota."
	},
	"HEX2BIN": {
		"a": "(číslo; [místa])",
		"d": "Převede hexadecimální číslo na binární.",
		"ad": "je hexadecimální číslo, které chcete převést.!je počet znaků, které chcete použít u výsledku."
	},
	"HEX2DEC": {
		"a": "(číslo)",
		"d": "Převede hexadecimální číslo na dekadické.",
		"ad": "je hexadecimální číslo, které chcete převést."
	},
	"HEX2OCT": {
		"a": "(číslo; [místa])",
		"d": "Převede hexadecimální číslo na osmičkové.",
		"ad": "je hexadecimální číslo, které chcete převést.!je počet znaků, které chcete použít u výsledku."
	},
	"IMABS": {
		"a": "(ičíslo)",
		"d": "Vrátí absolutní hodnotu komplexního čísla.",
		"ad": "je komplexní číslo, jehož absolutní hodnotu chcete zjistit."
	},
	"IMAGINARY": {
		"a": "(ičíslo)",
		"d": "Vrátí imaginární část komplexního čísla.",
		"ad": "je komplexní číslo, jehož imaginární část chcete nalézt."
	},
	"IMARGUMENT": {
		"a": "(ičíslo)",
		"d": "Vrátí argument q (úhel v radiánech).",
		"ad": "je komplexní číslo, pro které chcete nalézt argument."
	},
	"IMCONJUGATE": {
		"a": "(ičíslo)",
		"d": "Vrátí komplexně sdružené číslo ke komplexnímu číslu.",
		"ad": "je komplexní číslo, ke kterému chcete nalézt komplexně sdružené číslo."
	},
	"IMCOS": {
		"a": "(ičíslo)",
		"d": "Vrátí kosinus komplexního čísla.",
		"ad": "je komplexní číslo, jehož kosinus chcete nalézt."
	},
	"IMCOSH": {
		"a": "(Ičíslo)",
		"d": "Vrátí hyperbolický kosinus komplexního čísla",
		"ad": "je komplexní číslo, jehož hyperbolický kosinus chcete získat"
	},
	"IMCOT": {
		"a": "(Ičíslo)",
		"d": "Vrátí kotangens komplexního čísla",
		"ad": "je komplexní číslo, pro které chcete získat kotangens"
	},
	"IMCSC": {
		"a": "(Ičíslo)",
		"d": "Vrátí kosekans komplexního čísla",
		"ad": "je komplexní číslo, pro které chcete získat kosekans"
	},
	"IMCSCH": {
		"a": "(Ičíslo)",
		"d": "Vrátí hyperbolický kosekans komplexního čísla",
		"ad": "je komplexní číslo, pro které chcete získat hyperbolický kosekans"
	},
	"IMDIV": {
		"a": "(ičíslo1; ičíslo2)",
		"d": "Vrátí podíl dvou komplexních čísel.",
		"ad": "je komplexní čitatel nebo dělenec.!je komplexní jmenovatel nebo dělitel."
	},
	"IMEXP": {
		"a": "(ičíslo)",
		"d": "Vrátí exponenciální tvar komplexního čísla.",
		"ad": "je komplexní číslo, jehož exponenciální tvar chcete nalézt."
	},
	"IMLN": {
		"a": "(ičíslo)",
		"d": "Vrátí přirozený logaritmus komplexního čísla.",
		"ad": "je komplexní číslo, jehož přirozený logaritmus chcete nalézt."
	},
	"IMLOG10": {
		"a": "(ičíslo)",
		"d": "Vrátí dekadický logaritmus komplexního čísla.",
		"ad": "je komplexní číslo, jehož dekadický logaritmus chcete nalézt."
	},
	"IMLOG2": {
		"a": "(ičíslo)",
		"d": "Vrátí logaritmus komplexního čísla při základu 2.",
		"ad": "je komplexní číslo, jehož logaritmus při základu 2 chcete nalézt."
	},
	"IMPOWER": {
		"a": "(ičíslo; číslo)",
		"d": "Vrátí komplexní číslo umocněné na celé číslo.",
		"ad": "je komplexní číslo, které chcete umocnit.!je mocnina, na kterou chcete komplexní číslo umocnit."
	},
	"IMPRODUCT": {
		"a": "(ičíslo1; [ičíslo2]; ...)",
		"d": "Vrátí součin 1 až 255 komplexních čísel.",
		"ad": "Hodnoty ičíslo1, ičíslo2,... představují 1 až 255 komplexních čísel, která chcete násobit."
	},
	"IMREAL": {
		"a": "(ičíslo)",
		"d": "Vrátí reálnou část komplexního čísla.",
		"ad": "je komplexní číslo, jehož reálnou část chcete nalézt."
	},
	"IMSEC": {
		"a": "(Ičíslo)",
		"d": "Vrátí sekans komplexního čísla",
		"ad": "je komplexní číslo, pro které chcete získat sekans"
	},
	"IMSECH": {
		"a": "(Ičíslo)",
		"d": "Vrátí hyperbolický sekans komplexního čísla",
		"ad": "je komplexní číslo, pro které chcete získat hyperbolický sekans"
	},
	"IMSIN": {
		"a": "(ičíslo)",
		"d": "Vrátí sinus komplexního čísla.",
		"ad": "je komplexní číslo, jehož sinus chcete nalézt."
	},
	"IMSINH": {
		"a": "(Ičíslo)",
		"d": "Vrátí hyperbolický sinus komplexního čísla",
		"ad": "je komplexní číslo, jehož hyperbolický sinus chcete získat"
	},
	"IMSQRT": {
		"a": "(ičíslo)",
		"d": "Vrátí druhou odmocninu komplexního čísla.",
		"ad": "je komplexní číslo, jehož druhou odmocninu chcete nalézt."
	},
	"IMSUB": {
		"a": "(ičíslo1; ičíslo2)",
		"d": "Vrátí rozdíl dvou komplexních čísel.",
		"ad": "je komplexní číslo, od kterého chcete odečíst argument ičíslo2.!je komplexní číslo, které chcete odečíst od argumentu ičíslo1."
	},
	"IMSUM": {
		"a": "(ičíslo1; [ičíslo2]; ...)",
		"d": "Vrátí součet komplexních čísel.",
		"ad": "představují 1 až 255 komplexních čísel, která chcete sečíst."
	},
	"IMTAN": {
		"a": "(Ičíslo)",
		"d": "Vrátí tangens komplexního čísla",
		"ad": "je komplexní číslo, jehož tangens chcete získat"
	},
	"OCT2BIN": {
		"a": "(číslo; [místa])",
		"d": "Převede osmičkové číslo na binární.",
		"ad": "je osmičkové číslo, které chcete převést.!je počet znaků, které chcete použít u výsledku."
	},
	"OCT2DEC": {
		"a": "(číslo)",
		"d": "Převede osmičkové číslo na dekadické.",
		"ad": "je osmičkové číslo, které chcete převést."
	},
	"OCT2HEX": {
		"a": "(číslo; [místa])",
		"d": "Převede osmičkové číslo na hexadecimální.",
		"ad": "je osmičkové číslo, které chcete převést.!je počet znaků, které chcete použít u výsledku."
	},
	"DAVERAGE": {
		"a": "(databáze; pole; kritéria)",
		"d": "Vrátí průměr hodnot ve sloupci seznamu nebo databáze, které splňují zadaná kritéria.",
		"ad": "je oblast buněk, která tvoří seznam nebo databázi. Databáze je seznam vzájemně propojených dat.!je popisek sloupce v uvozovkách nebo číslo, které představuje umístění sloupce v seznamu.!je oblast buněk, která obsahuje zadaná kritéria. Oblast zahrnuje popisek sloupce a jednu buňku pod popiskem pro kritérium."
	},
	"DCOUNT": {
		"a": "(databáze; pole; kritéria)",
		"d": "Vrátí počet buněk obsahujících čísla v poli (sloupci) záznamů databáze, které splňují zadaná kritéria.",
		"ad": "je oblast buněk, která tvoří seznam nebo databázi. Databáze je seznam vzájemně propojených dat.!je popisek sloupce v uvozovkách nebo číslo, které představuje umístění sloupce v seznamu.!je oblast buněk, která obsahuje zadaná kritéria. Oblast zahrnuje popisek sloupce a jednu buňku pod popiskem pro kritérium."
	},
	"DCOUNTA": {
		"a": "(databáze; pole; kritéria)",
		"d": "Vrátí počet neprázdných buněk v poli (sloupci) záznamů databáze, které splňují zadaná kritéria.",
		"ad": "je oblast buněk, která tvoří seznam nebo databázi. Databáze je seznam vzájemně propojených dat.!je popisek sloupce v uvozovkách nebo číslo, které představuje umístění sloupce v seznamu.!je oblast buněk, která obsahuje zadaná kritéria. Oblast zahrnuje popisek sloupce a jednu buňku pod popiskem pro kritérium."
	},
	"DGET": {
		"a": "(databáze; pole; kritéria)",
		"d": "Vybere z databáze jeden záznam, který splňuje zadaná kritéria.",
		"ad": "je oblast buněk, která tvoří seznam nebo databázi. Databáze je seznam vzájemně propojených dat.!je popisek sloupce v uvozovkách nebo číslo, které představuje umístění sloupce v seznamu.!je oblast buněk, která obsahuje zadaná kritéria. Oblast zahrnuje popisek sloupce a jednu buňku pod popiskem pro kritérium."
	},
	"DMAX": {
		"a": "(databáze; pole; kritéria)",
		"d": "Vrátí maximální hodnotu v poli (sloupci) záznamů databáze, která splňuje zadaná kritéria.",
		"ad": "je oblast buněk, která tvoří seznam nebo databázi. Databáze je seznam vzájemně propojených dat.!je popisek sloupce v uvozovkách nebo číslo, které představuje umístění sloupce v seznamu.!je oblast buněk, která obsahuje zadaná kritéria. Oblast zahrnuje popisek sloupce a jednu buňku pod popiskem pro kritérium."
	},
	"DMIN": {
		"a": "(databáze; pole; kritéria)",
		"d": "Vrátí minimální hodnotu v poli (sloupci) záznamů databáze, která splňuje zadaná kritéria.",
		"ad": "je oblast buněk, která tvoří seznam nebo databázi. Databáze je seznam vzájemně propojených dat.!je popisek sloupce v uvozovkách nebo číslo, které představuje umístění sloupce v seznamu.!je oblast buněk, která obsahuje zadaná kritéria. Oblast zahrnuje popisek sloupce a jednu buňku pod popiskem pro kritérium."
	},
	"DPRODUCT": {
		"a": "(databáze; pole; kritéria)",
		"d": "Vynásobí hodnoty v poli (sloupci) záznamů databáze, které splňují zadaná kritéria.",
		"ad": "je oblast buněk, která tvoří seznam nebo databázi. Databáze je seznam vzájemně propojených dat.!je popisek sloupce v uvozovkách nebo číslo, které představuje umístění sloupce v seznamu.!je oblast buněk, která obsahuje zadaná kritéria. Oblast zahrnuje popisek sloupce a jednu buňku pod popiskem pro kritérium."
	},
	"DSTDEV": {
		"a": "(databáze; pole; kritéria)",
		"d": "Odhadne směrodatnou odchylku výběru vybraných položek databáze.",
		"ad": "je oblast buněk, která tvoří seznam nebo databázi. Databáze je seznam vzájemně propojených dat.!je popisek sloupce v uvozovkách nebo číslo, které představuje umístění sloupce v seznamu.!je oblast buněk, která obsahuje zadaná kritéria. Oblast zahrnuje popisek sloupce a jednu buňku pod popiskem pro kritérium."
	},
	"DSTDEVP": {
		"a": "(databáze; pole; kritéria)",
		"d": "Vrátí směrodatnou odchylku základního souboru vybraných položek databáze.",
		"ad": "je oblast buněk, která tvoří seznam nebo databázi. Databáze je seznam vzájemně propojených dat.!je popisek sloupce v uvozovkách nebo číslo, které představuje umístění sloupce v seznamu.!je oblast buněk, která obsahuje zadaná kritéria. Oblast zahrnuje popisek sloupce a jednu buňku pod popiskem pro kritérium."
	},
	"DSUM": {
		"a": "(databáze; pole; kritéria)",
		"d": "Sečte čísla v poli (sloupci) záznamů databáze, které splňují zadaná kritéria.",
		"ad": "je oblast buněk, která tvoří seznam nebo databázi. Databáze je seznam vzájemně propojených dat.!je popisek sloupce v uvozovkách nebo číslo, které představuje umístění sloupce v seznamu.!je oblast buněk, která obsahuje zadaná kritéria. Oblast zahrnuje popisek sloupce a jednu buňku pod popiskem pro kritérium."
	},
	"DVAR": {
		"a": "(databáze; pole; kritéria)",
		"d": "Odhadne rozptyl výběru vybraných položek databáze.",
		"ad": "je oblast buněk, která tvoří seznam nebo databázi. Databáze je seznam vzájemně propojených dat.!je popisek sloupce v uvozovkách nebo číslo, které představuje umístění sloupce v seznamu.!je oblast buněk, která obsahuje zadaná kritéria. Oblast zahrnuje popisek sloupce a jednu buňku pod popiskem pro kritérium."
	},
	"DVARP": {
		"a": "(databáze; pole; kritéria)",
		"d": "Vrátí rozptyl základního souboru vybraných položek databáze.",
		"ad": "je oblast buněk, která tvoří seznam nebo databázi. Databáze je seznam vzájemně propojených dat.!je popisek sloupce v uvozovkách nebo číslo, které představuje umístění sloupce v seznamu.!je oblast buněk, která obsahuje zadaná kritéria. Oblast zahrnuje popisek sloupce a jednu buňku pod popiskem pro kritérium."
	},
	"CHAR": {
		"a": "(kód)",
		"d": "Vrátí znak určený číslem kódu ze znakové sady definované v používaném počítači.",
		"ad": "je číslo od 1 do 255, které určuje požadovaný znak."
	},
	"CLEAN": {
		"a": "(text)",
		"d": "Odstraní z textu všechny netisknutelné znaky.",
		"ad": "je libovolná informace na listu, ze které chcete odstranit netisknutelné znaky."
	},
	"CODE": {
		"a": "(text)",
		"d": "Vrátí číselný kód prvního znaku textového řetězce ze znakové sady definované v používaném počítači.",
		"ad": "je textový řetězec, pro který chcete najít kód prvního znaku."
	},
	"CONCATENATE": {
		"a": "(text1; [text2]; ...)",
		"d": "Sloučí několik textových řetězců do jednoho.",
		"ad": "je 1 až 255 textových řetězců, které chcete sloučit do jediného textového řetězce. Mohou to být textové řetězce, čísla nebo odkazy na jedinou buňku."
	},
	"CONCAT": {
		"a": "(text1; ...)",
		"d": "Zřetězí seznam nebo oblast textových řetězců.",
		"ad": "je 1 až 254 textových řetězců nebo oblastí, které chcete sloučit do jednoho textového řetězce."
	},
	"DOLLAR": {
		"a": "(číslo; [desetiny])",
		"d": "Převede číslo na text ve formátu měny.",
		"ad": "je číslo, odkaz na buňku s číslem nebo vzorec, jehož výsledkem je číslo.!je počet desetinných míst vpravo od desetinné čárky. Číslo je podle potřeby zaokrouhleno. Jestliže argument Desetiny nezadáte, bude jeho hodnota 2."
	},
	"EXACT": {
		"a": "(text1; text2)",
		"d": "Ověří, zda jsou dva textové řetězce stejné a vrátí hodnotu PRAVDA nebo NEPRAVDA. Tato funkce rozlišuje malá a velká písmena.",
		"ad": "je první textový řetězec.!je druhý textový řetězec."
	},
	"FIND": {
		"a": "(co; kde; [start])",
		"d": "Vrátí počáteční pozici jednoho textového řetězce v jiném textovém řetězci. Tato funkce rozlišuje malá a velká písmena.",
		"ad": "je text, který chcete nalézt. Použijte uvozovky (prázdný text) k vyhledání prvního odpovídajícího znaku argumentu Kde. Zástupné znaky nejsou povoleny.!je text obsahující hledaný text.!určuje znak, ve kterém začne vyhledávání. První znak argumentu Kde je znak číslo 1. Jestliže argument Start nezadáte, bude jeho hodnota 1. "
	},
	"FINDB": {
		"a": "(co; kde; [start])",
		"d": "Vyhledají jeden textový řetězec v druhém textovém řetězci a vrátí číslo počáteční pozice prvního textového řetězce od prvního znaku druhého textového řetězce, je určena pro jazyky používající dvoubajtovou znakovou sadu (DBCS) - japonština, čínština a korejština",
		"ad": "je text, který chcete nalézt. Použijte uvozovky (prázdný text) k vyhledání prvního odpovídajícího znaku argumentu Kde. Zástupné znaky nejsou povoleny.!je text obsahující hledaný text.!určuje znak, ve kterém začne vyhledávání. První znak argumentu Kde je znak číslo 1. Jestliže argument Start nezadáte, bude jeho hodnota 1. "
	},
	"FIXED": {
		"a": "(číslo; [desetiny]; [bez_čárky])",
		"d": "Zaokrouhlí číslo na zadaný počet desetinných míst a vrátí výsledek ve formátu textu s čárkami nebo bez čárek.",
		"ad": "je číslo, které chcete zaokrouhlit a převést na text.!je počet desetinných míst vpravo od desetinné čárky. Jestliže argument Desetiny nezadáte, bude jeho hodnota 2.!je logická hodnota: nezobrazovat čárky ve vráceném textu = PRAVDA, zobrazit čárky ve vráceném textu = NEPRAVDA nebo bez zadání."
	},
	"LEFT": {
		"a": "(text; [znaky])",
		"d": "Vrátí zadaný počet znaků od počátku textového řetězce.",
		"ad": "je textový řetězec obsahující znaky, které chcete extrahovat.!určuje počet znaků, které budou pomocí funkce ZLEVA extrahovány. Jestliže tento argument nezadáte, bude jeho hodnota 1."
	},
	"LEFTB": {
		"a": "(text; [znaky])",
		"d": "Vrátí první znak nebo znaky v textovém řetězci na základě zadaného počtu bajtů, je určena pro jazyky používající dvoubajtovou znakovou sadu (DBCS) - japonština, čínština a korejština",
		"ad": "je textový řetězec obsahující znaky, které chcete extrahovat.!určuje počet znaků, které budou pomocí funkce ZLEVA extrahovány. Jestliže tento argument nezadáte, bude jeho hodnota 1."
	},
	"LEN": {
		"a": "(text)",
		"d": "Vrátí počet znaků textového řetězce.",
		"ad": "je text, jehož délku chcete zjistit. Mezery jsou počítány jako znaky."
	},
	"LENB": {
		"a": "(text)",
		"d": "Vrátí počet bajtů, které představují znaky v textovém řetězci, je určena pro jazyky používající dvoubajtovou znakovou sadu (DBCS) - japonština, čínština a korejština",
		"ad": "je text, jehož délku chcete zjistit. Mezery jsou počítány jako znaky."
	},
	"LOWER": {
		"a": "(text)",
		"d": "Převede všechna písmena textového řetězce na malá.",
		"ad": "je text, který chcete převést na malá písmena. Znaky v argumentu Text, které nejsou písmena, se nezmění."
	},
	"MID": {
		"a": "(text; start; počet_znaků)",
		"d": "Vrátí znaky z textového řetězce, je-li zadána počáteční pozice a počet znaků.",
		"ad": "je textový řetězec, ze kterého chcete extrahovat požadované znaky.!je pozice prvního znaku, který chcete extrahovat. První znak argumentu Text je číslo 1.!určí počet znaků argumentu Text, které mají být extrahovány."
	},
	"MIDB": {
		"a": "(text; start; počet_znaků)",
		"d": "Vrátí určitý počet znaků (na základě zadaného počtu bajtů) z textového řetězce od zadané pozice, je určena pro jazyky používající dvoubajtovou znakovou sadu (DBCS) - japonština, čínština a korejština",
		"ad": "je textový řetězec, ze kterého chcete extrahovat požadované znaky.!je pozice prvního znaku, který chcete extrahovat. První znak argumentu Text je číslo 1.!určí počet znaků argumentu Text, které mají být extrahovány."
	},
	"NUMBERVALUE": {
		"a": "(text; [oddělovač_desetin]; [oddělovač_skupin])",
		"d": "Převede text na číslo nezávisle na prostředí",
		"ad": "je řetězec představující číslo, které chcete převést!je znak použitý jako oddělovač desetinných míst v řetězci!je znak použitý jako oddělovač skupin v řetězci"
	},
	"PROPER": {
		"a": "(text)",
		"d": "Převede textový řetězec na formát, kdy jsou první písmena všech slov velká a ostatní písmena malá.",
		"ad": "je text v uvozovkách, vzorec, jehož výsledkem je text, nebo odkaz na buňku s textem, ve kterém chcete převést první písmena slov na velká."
	},
	"REPLACE": {
		"a": "(starý; start; znaky; nový)",
		"d": "Nahradí část textového řetězce jiným textovým řetězcem.",
		"ad": "je text, ve kterém chcete zaměnit některé znaky.!je pozice znaku v textu argumentu Starý, který chcete nahradit textem argumentu Nový.!je počet znaků textu argumentu Starý, které chcete nahradit.!je nový text , kterým nahradíte text argumentu Starý."
	},
	"REPLACEB": {
		"a": "(starý; start; znaky; nový)",
		"d": "Nahradí na základě zadaného počtu bajtů část textového řetězce jiným textovým řetězcem, je určena pro jazyky používající dvoubajtovou znakovou sadu (DBCS) - japonština, čínština a korejština",
		"ad": "je text, ve kterém chcete zaměnit některé znaky.!je pozice znaku v textu argumentu Starý, který chcete nahradit textem argumentu Nový.!je počet znaků textu argumentu Starý, které chcete nahradit.!je nový text , kterým nahradíte text argumentu Starý."
	},
	"REPT": {
		"a": "(text; počet)",
		"d": "Několikrát zopakuje zadaný text. Použijte funkci OPAKOVAT, chcete-li vyplnit buňku určitým počtem výskytů textového řetězce.",
		"ad": "je text, který chcete opakovat.!je kladné číslo určující, kolikrát chcete text opakovat."
	},
	"RIGHT": {
		"a": "(text; [znaky])",
		"d": "Vrátí zadaný počet znaků od konce textového řetězce.",
		"ad": "je textový řetězec obsahující znaky, které chcete extrahovat.!určuje počet znaků, které chcete extrahovat. Jestliže tento argument nezadáte, bude jeho hodnota 1."
	},
	"RIGHTB": {
		"a": "(text; [znaky])",
		"d": "Vrátí zadaný počet bajtů od konce textového řetězce, je určena pro jazyky používající dvoubajtovou znakovou sadu (DBCS) - japonština, čínština a korejština",
		"ad": "je textový řetězec obsahující znaky, které chcete extrahovat.!určuje počet znaků, které chcete extrahovat. Jestliže tento argument nezadáte, bude jeho hodnota 1."
	},
	"SEARCH": {
		"a": "(co; kde; [start])",
		"d": "Vrátí číslo prvního nalezeného výskytu znaku nebo textového řetězce. Směr hledání je zleva doprava. Velká a malá písmena nejsou rozlišována.",
		"ad": "je text, který chcete nalézt. Můžete použít zástupné znaky * a ?. Znaky * a ? naleznete pomocí řetězců ~? a ~* .!je text, ve kterém chcete hledat znak nebo textový řetězec argumentu Co.!je číslo znaku v argumentu Kde (počítáno zleva), ve kterém chcete začít vyhledávání. Jestliže tento argument nezadáte, bude jeho hodnota 1."
	},
	"SEARCHB": {
		"a": "(co; kde; [start])",
		"d": "Vyhledají jeden textový řetězec v rámci druhého textového řetězce a vrátí číslo počáteční pozice prvního textového řetězce od prvního znaku druhého textového řetězce, je určena pro jazyky používající dvoubajtovou znakovou sadu (DBCS) - japonština, čínština a korejština",
		"ad": "je text, který chcete nalézt. Můžete použít zástupné znaky * a ?. Znaky * a ? naleznete pomocí řetězců ~? a ~* .!je text, ve kterém chcete hledat znak nebo textový řetězec argumentu Co.!je číslo znaku v argumentu Kde (počítáno zleva), ve kterém chcete začít vyhledávání. Jestliže tento argument nezadáte, bude jeho hodnota 1."
	},
	"SUBSTITUTE": {
		"a": "(text; starý; nový; [instance])",
		"d": "Nahradí existující text novým textem v textovém řetězci.",
		"ad": "je text nebo odkaz na buňku obsahující text, ve kterém chcete zaměnit znaky.!je existující text, který chcete zaměnit. Jestliže malá a velká písmena v textu argumentu Starý nejsou shodná s malými a velkými písmeny v textu argumentu Text, funkce DOSADIT text nezamění.!je text, kterým chcete nahradit text argumentu Starý.!určuje, který výskyt textu argumentu Starý chcete nahradit. Jestliže tento argument nezadáte, bude nahrazen každý výskyt textu argumentu Starý."
	},
	"T": {
		"a": "(hodnota)",
		"d": "Ověří, zda je argument Hodnota text. Jestliže ano, vrátí text, jestliže ne, vrátí uvozovky (prázdný text).",
		"ad": "je testovaná hodnota."
	},
	"TEXT": {
		"a": "(hodnota; formát)",
		"d": "Převede hodnotu na text v určitém formátu.",
		"ad": "je číslo, vzorec, jehož výsledek je číselná hodnota, nebo odkaz na buňku obsahující číselnou hodnotu.!je číselný formát ve formě textu vybraný v seznamu Druh na kartě Číslo dialogového okna Formát buněk"
	},
	"TEXTJOIN": {
		"a": "(oddělovač; ignorovat_prázdné; text1; ...)",
		"d": "Zřetězí seznam nebo oblast textových řetězců pomocí oddělovače.",
		"ad": "Znak nebo řetězec, který se vloží mezi jednotlivé položky textu!pokud má hodnotu PRAVDA (výchozí), ignoruje prázdné buňky.!1 až 252 textových řetězců nebo oblastí, které chcete sloučit"
	},
	"TRIM": {
		"a": "(text)",
		"d": "Odstraní všechny mezery z textového řetězce kromě jednotlivých mezer mezi slovy.",
		"ad": "je text, ze kterého chcete odstranit mezery."
	},
	"UNICHAR": {
		"a": "(číslo)",
		"d": "Vrátí znak Unicode vztažený k dané číselné hodnotě",
		"ad": "je číslo Unicode představující znak"
	},
	"UNICODE": {
		"a": "(text)",
		"d": "Vrátí číslo (bod kódu) odpovídající prvnímu znaku textu",
		"ad": "je znak, pro který chcete zjistit hodnotu kódu Unicode"
	},
	"UPPER": {
		"a": "(text)",
		"d": "Převede všechna písmena textového řetězce na velká.",
		"ad": "je text, který chcete převést na velká písmena. Může to být odkaz nebo textový řetězec."
	},
	"VALUE": {
		"a": "(text)",
		"d": "Převede textový řetězec představující číslo na číslo.",
		"ad": "je text v uvozovkách nebo odkaz na buňku obsahující text, který chcete převést."
	},
	"AVEDEV": {
		"a": "(číslo1; [číslo2]; ...)",
		"d": "Vrátí průměrnou hodnotu absolutních odchylek datových bodů od jejich střední hodnoty. Argumenty mohou být čísla či názvy, matice nebo odkazy obsahující čísla.",
		"ad": "je 1 až 255 argumentů, pro které chcete zjistit průměrnou hodnotu absolutních odchylek."
	},
	"AVERAGE": {
		"a": "(číslo1; [číslo2]; ...)",
		"d": "Vrátí průměrnou hodnotu (aritmetický průměr) argumentů. Argumenty mohou být čísla či názvy, matice nebo odkazy, které obsahují čísla.",
		"ad": "je 1 až 255 číselných argumentů, jejichž průměrnou hodnotu chcete zjistit."
	},
	"AVERAGEA": {
		"a": "(hodnota1; [hodnota2]; ...)",
		"d": "Vrátí průměrnou hodnotu (aritmetický průměr) argumentů. Text a logická hodnota NEPRAVDA mají hodnotu 0, logická hodnota PRAVDA má hodnotu 1. Argumenty mohou být čísla, názvy, matice nebo odkazy.",
		"ad": "je 1 až 255 argumentů, jejichž průměr chcete zjistit."
	},
	"AVERAGEIF": {
		"a": "(oblast; kritérium; [oblast_pro_průměr])",
		"d": "Zjistí průměrnou hodnotu (aritmetický průměr) buněk určených danou podmínkou nebo kritériem.",
		"ad": "představuje oblast buněk, které chcete vyhodnotit.!je podmínka nebo kritérium v podobě čísla, výrazu nebo textu definujících buňky, jejichž průměr chcete zjistit.!jsou vlastní buňky, jejichž průměr bude zjištěn. Pokud parametr vynecháte, budou použity buňky v dané oblasti"
	},
	"AVERAGEIFS": {
		"a": "(oblast_pro_průměr; oblast_kritérií; kritérium; ...)",
		"d": "Zjistí průměrnou hodnotu (aritmetický průměr) buněk určených danou sadou podmínek nebo kritérií.",
		"ad": "jsou vlastní buňky, jejichž průměr bude zjištěn.!představuje oblast buněk, které chcete vyhodnotit na základě určené podmínky.!je podmínka nebo kritérium v podobě čísla, výrazu nebo textu definujících buňky, jejichž průměr bude zjištěn."
	},
	"BETADIST": {
		"a": "(x; alfa; beta; [A]; [B])",
		"d": "Vrátí hodnotu kumulativní funkce hustoty pravděpodobnosti beta rozdělení.",
		"ad": "je hodnota mezi hodnotami argumentů A a B, pro kterou chcete zjistit hodnotu funkce.!je parametr rozdělení, který musí být větší než 0.!je parametr rozdělení, který musí být větší než 0.!je volitelná dolní mez intervalu hodnot x. Jestliže argument A nezadáte, bude jeho hodnota 0.!je volitelná horní mez intervalu hodnot x. Jestliže argument B nezadáte, bude jeho hodnota 1."
	},
	"BETAINV": {
		"a": "(pravděpodobnost; alfa; beta; [A]; [B])",
		"d": "Vrátí inverzní hodnotu kumulativní funkce hustoty pravděpodobnosti beta rozdělení (inverzní funkce k funkci BETADIST).",
		"ad": "je pravděpodobnost beta rozdělení.!je parametr rozdělení, který musí být větší než 0.!je parametr rozdělení, který musí být větší než 0.!je volitelná dolní mez intervalu hodnot x. Jestliže argument A nezadáte, bude jeho hodnota 0.!je volitelná horní mez intervalu hodnot x. Jestliže argument B nezadáte, bude jeho hodnota 1."
	},
	"BETA.DIST": {
		"a": "(x; alfa; beta; kumulativní; [A]; [B])",
		"d": "Vrátí funkci rozdělení pravděpodobnosti beta.",
		"ad": "je hodnota mezi hodnotami argumentů A a B, pro kterou chcete zjistit hodnotu funkce.!je parametr rozdělení, který musí být větší než 0.!je parametr rozdělení, který musí být větší než 0.!je logická hodnota: kumulativní distribuční funkce = PRAVDA; funkce hustoty pravděpodobnosti = NEPRAVDA.!je nepovinná dolní mez intervalu hodnot x. Jestliže argument A nezadáte, bude jeho hodnota 0.!je nepovinná horní mez intervalu hodnot x. Jestliže argument B nezadáte, bude jeho hodnota 1."
	},
	"BETA.INV": {
		"a": "(pravděpodobnost; alfa; beta; [A]; [B])",
		"d": "Vrátí inverzní hodnotu kumulativní funkce hustoty pravděpodobnosti beta rozdělení (BETA.DIST).",
		"ad": "je pravděpodobnost rozdělení beta.!je parametr rozdělení, který musí být větší než 0.!je parametr rozdělení, který musí být větší než 0.!je nepovinná dolní mez intervalu hodnot x. Jestliže argument A nezadáte, bude jeho hodnota 0.!je nepovinná horní mez intervalu hodnot x. Jestliže argument B nezadáte, bude jeho hodnota 1."
	},
	"BINOMDIST": {
		"a": "(počet_úspěchů; pokusy; pravděpodobnost_úspěchu; kumulativní)",
		"d": "Vrátí hodnotu binomického rozdělení pravděpodobnosti jednotlivých veličin.",
		"ad": "je počet úspěšných pokusů.!je počet nezávislých pokusů.!je pravděpodobnost každého úspěšného pokusu.!je logická hodnota: kumulativní distribuční funkce = PRAVDA, hromadná pravděpodobnostní funkce = NEPRAVDA."
	},
	"BINOM.DIST": {
		"a": "(počet_úspěchů; pokusy; pravděpodobnost_úspěchu; kumulativní)",
		"d": "Vrátí hodnotu binomického rozdělení pravděpodobnosti jednotlivých veličin.",
		"ad": "je počet úspěšných pokusů.!je počet nezávislých pokusů.!je pravděpodobnost každého úspěšného pokusu.!je logická hodnota: kumulativní distribuční funkce = PRAVDA, hromadná pravděpodobnostní funkce = NEPRAVDA."
	},
	"BINOM.DIST.RANGE": {
		"a": "(pokusy; pravděpodobnost_úspěchu; počet_úspěchů; [počet_úspěchů2])",
		"d": "Vrátí pravděpodobnost výsledku pokusu pomocí binomického rozdělení",
		"ad": "je počet nezávislých pokusů!je pravděpodobnost úspěchu v každém pokusu!je počet úspěchů v pokusech!pokud je zadaná, vrátí tato funkce pravděpodobnost, že počet úspěšných pokusů bude ležet mezi hodnotami počet_úspěchů a počet_úspěchů2"
	},
	"BINOM.INV": {
		"a": "(pokusy; pravděpodobnost_úspěchu; alfa)",
		"d": "Vrátí nejmenší hodnotu, pro kterou má kumulativní binomické rozdělení hodnotu větší nebo rovnu hodnotě kritéria.",
		"ad": "je počet Bernoulliho pokusů.!je pravděpodobnost každého úspěšného pokusu. Argument je číslo mezi 0 a 1 včetně.!je hodnota kritéria, číslo mezi 0 a 1 včetně."
	},
	"CHIDIST": {
		"a": "(x; volnost)",
		"d": "Vrátí pravděpodobnost (pravý chvost) chí-kvadrát rozdělení.",
		"ad": "je hodnota (nezáporné číslo), pro kterou chcete zjistit pravděpodobnost rozdělení.!je počet stupňů volnosti. Argument je číslo mezi 1 a 10^10 kromě čísla 10^10."
	},
	"CHIINV": {
		"a": "(pravděpodobnost; volnost)",
		"d": "Vrátí inverzní hodnotu pravděpodobnosti (pravý chvost) chí-kvadrát rozdělení.",
		"ad": "je pravděpodobnost chí-kvadrát rozdělení. Argument je číslo mezi 0 a 1 (včetně).!je počet stupňů volnosti. Argument je číslo mezi 1 a 10^10 kromě čísla 10^10."
	},
	"CHITEST": {
		"a": "(aktuální; očekávané)",
		"d": "Vrátí test nezávislosti: hodnota chí-kvadrát rozdělení pro statistické jednotky a příslušné stupně volnosti.",
		"ad": "je oblast dat obsahující pozorování, která chcete testovat a srovnávat s předpokládanými hodnotami.!je oblast dat obsahující podíl součinu součtů řádků a sloupců a celkového součtu."
	},
	"CHISQ.DIST": {
		"a": "(x; volnost; kumulativní)",
		"d": "Vrátí levostrannou pravděpodobnost rozdělení chí-kvadrát.",
		"ad": "je hodnota, pro kterou chcete zjistit pravděpodobnost rozdělení. Argument musí být nezáporné číslo.!je počet stupňů volnosti. Argument je číslo mezi 1 a 10^10 kromě čísla 10^10.!je logická hodnota, kterou funkce vrátí: kumulativní distribuční funkce = PRAVDA, funkce hustoty pravděpodobnosti = NEPRAVDA."
	},
	"CHISQ.DIST.RT": {
		"a": "(x; volnost)",
		"d": "Vrátí pravostrannou pravděpodobnost rozdělení chí-kvadrát.",
		"ad": "je hodnota, pro kterou chcete zjistit pravděpodobnost rozdělení. Argument musí být nezáporné číslo.!je počet stupňů volnosti. Argument je číslo mezi 1 a 10^10 kromě čísla 10^10."
	},
	"CHISQ.INV": {
		"a": "(pravděpodobnost; volnost)",
		"d": "Vrátí hodnotu funkce inverzní k distribuční funkci levostranné pravděpodobnosti rozdělení chí-kvadrát.",
		"ad": "je pravděpodobnost rozdělení chí-kvadrát. Argument je hodnota z uzavřeného intervalu 0 až 1.!je počet stupňů volnosti. Argument je číslo mezi 1 a 10^10 kromě čísla 10^10."
	},
	"CHISQ.INV.RT": {
		"a": "(pravděpodobnost; volnost)",
		"d": "Vrátí hodnotu funkce inverzní k distribuční funkci pravostranné pravděpodobnosti rozdělení chí-kvadrát.",
		"ad": "je pravděpodobnost rozdělení chí-kvadrát. Argument je hodnota z uzavřeného intervalu 0 až 1.!je počet stupňů volnosti. Argument je číslo mezi 1 a 10^10 kromě čísla 10^10."
	},
	"CHISQ.TEST": {
		"a": "(aktuální; očekávané)",
		"d": "Vrátí test nezávislosti: hodnota ze statistického rozdělení chí-kvadrát a příslušné stupně volnosti.",
		"ad": "je oblast dat obsahující pozorování, které chcete testovat a srovnávat s předpokládanými hodnotami.!je oblast dat obsahující podíl součinu součtů řádků a sloupců a celkového součtu."
	},
	"CONFIDENCE": {
		"a": "(alfa; sm_odch; velikost)",
		"d": "Vrátí interval spolehlivosti pro střední hodnotu základního souboru pomocí normálního rozdělení.",
		"ad": "je hladina významnosti, pomocí které je vypočítána hladina spolehlivosti. Argument je číslo větší než 0 a menší než 1.!je známá směrodatná odchylka základního souboru pro oblast dat. Argument sm_odch musí být větší než 0.!je velikost výběru."
	},
	"CONFIDENCE.NORM": {
		"a": "(alfa; sm_odch; velikost)",
		"d": "Vrátí interval spolehlivosti pro střední hodnotu základního souboru pomocí normálního rozdělení.",
		"ad": "je hladina významnosti, pomocí které je vypočítána hladina spolehlivosti. Argument je číslo větší než 0 a menší než 1.!je známá směrodatná odchylka základního souboru pro oblast dat. Argument sm_odch musí být větší než 0.!je velikost výběru."
	},
	"CONFIDENCE.T": {
		"a": "(alfa; sm_odch; velikost)",
		"d": "Vrátí interval spolehlivosti pro střední hodnotu základního souboru pomocí Studentova t-rozdělení.",
		"ad": "je hladina významnosti, pomocí které je vypočítána hladina spolehlivosti. Argument je číslo větší než 0 a menší než 1.!je známá směrodatná odchylka základního souboru pro oblast dat. Argument sm_odch musí být větší než 0.!je velikost výběru."
	},
	"CORREL": {
		"a": "(matice1; matice2)",
		"d": "Vrátí korelační koeficient mezi dvěma množinami dat.",
		"ad": "je oblast buněk s hodnotami. Hodnoty mohou být čísla, názvy, matice nebo odkazy obsahující čísla.!je druhá oblast buněk s hodnotami. Hodnoty mohou být čísla, názvy, matice nebo odkazy obsahující čísla."
	},
	"COUNT": {
		"a": "(hodnota1; [hodnota2]; ...)",
		"d": "Vrátí počet buněk v oblasti obsahujících čísla.",
		"ad": "je 1 až 255 argumentů, které obsahují nebo odkazují na různé typy dat, spočítána budou však pouze čísla."
	},
	"COUNTA": {
		"a": "(hodnota1; [hodnota2]; ...)",
		"d": "Vrátí počet buněk v oblasti, které nejsou prázdné.",
		"ad": "je 1 až 255 argumentů představujících hodnoty a buňky, které chcete spočítat. Hodnoty mohou představovat jakýkoli typ informací."
	},
	"COUNTBLANK": {
		"a": "(oblast)",
		"d": "Vrátí počet prázdných buněk v zadané oblasti buněk.",
		"ad": "je oblast buněk, ve které chcete spočítat prázdné buňky."
	},
	"COUNTIF": {
		"a": "(oblast; kritérium)",
		"d": "Vrátí počet buněk v zadané oblasti, které splňují požadované kritérium.",
		"ad": "je oblast buněk, ve které chcete spočítat neprázdné buňky.!jsou kritéria ve formě čísla, výrazu nebo textu definující buňky, které budou spočítány."
	},
	"COUNTIFS": {
		"a": "(oblast_kritérií; kritérium; ...)",
		"d": "Určí počet buněk na základě dané sady podmínek nebo kritérií.",
		"ad": "představuje oblast buněk, které chcete vyhodnotit na základě určené podmínky.!je podmínka v podobě čísla, výrazu nebo textu definující buňky, jejichž počet bude určen."
	},
	"COVAR": {
		"a": "(matice1; matice2)",
		"d": "Vrátí hodnotu kovariance, průměrnou hodnotu součinů odchylek pro každou dvojici datových bodů ve dvou množinách dat.",
		"ad": "je první oblast buněk obsahující celá čísla. Hodnoty argumentu musí být čísla, matice nebo odkazy obsahující čísla.!je druhá oblast buněk obsahující celá čísla. Hodnoty argumentu musí být čísla, matice nebo odkazy obsahující čísla."
	},
	"COVARIANCE.P": {
		"a": "(matice1; matice2)",
		"d": "Vrátí hodnotu kovariance základního souboru, průměrnou hodnotu součinů odchylek pro každou dvojici datových bodů ve dvou množinách dat.",
		"ad": "je první oblast buněk obsahující celá čísla. Hodnoty argumentu musí být čísla, matice nebo odkazy obsahující čísla.!je druhá oblast buněk obsahující celá čísla. Hodnoty argumentu musí být čísla, matice nebo odkazy obsahující čísla."
	},
	"COVARIANCE.S": {
		"a": "(matice1; matice2)",
		"d": "Vrátí hodnotu kovariance výběru, průměrnou hodnotu součinů odchylek pro každou dvojici datových bodů ve dvou množinách dat.",
		"ad": "je první oblast buněk obsahující celá čísla. Hodnoty argumentu musí být čísla, matice nebo odkazy obsahující čísla.!je druhá oblast buněk obsahující celá čísla. Hodnoty argumentu musí být čísla, matice nebo odkazy obsahující čísla."
	},
	"CRITBINOM": {
		"a": "(pokusy; pravděpodobnost_úspěchu; alfa)",
		"d": "Vrátí nejmenší hodnotu, pro kterou má kumulativní binomické rozdělení hodnotu větší nebo rovnu hodnotě kritéria.",
		"ad": "je počet Bernoulliho pokusů.!je pravděpodobnost každého úspěšného pokusu. Argument je číslo mezi 0 a 1 (včetně).!je hodnota kritéria, číslo mezi 0 a 1 (včetně)."
	},
	"DEVSQ": {
		"a": "(číslo1; [číslo2]; ...)",
		"d": "Vrátí součet druhých mocnin odchylek datových bodů od jejich střední hodnoty výběru.",
		"ad": "je 1 až 255 argumentů nebo matice či odkaz na matici, pro které chcete vypočítat výsledek funkce DEVSQ."
	},
	"EXPONDIST": {
		"a": "(x; lambda; kumulativní)",
		"d": "Vrátí hodnotu exponenciálního rozdělení.",
		"ad": "je hodnota funkce, nezáporné číslo.!je hodnota parametru, kladné číslo.!je logická hodnota pro funkci, kterou chcete vrátit: kumulativní distribuční funkce = PRAVDA, funkce hustoty pravděpodobnosti = NEPRAVDA."
	},
	"EXPON.DIST": {
		"a": "(x; lambda; kumulativní)",
		"d": "Vrátí hodnotu exponenciálního rozdělení.",
		"ad": "je hodnota funkce, nezáporné číslo.!je hodnota parametru, kladné číslo.!je logická hodnota pro funkci, kterou chcete vrátit: kumulativní distribuční funkce = PRAVDA, funkce hustoty pravděpodobnosti = NEPRAVDA."
	},
	"FDIST": {
		"a": "(x; volnost1; volnost2)",
		"d": "Vrátí hodnotu F rozdělení (stupeň nonekvivalence) pravděpodobnosti (pravý chvost) pro dvě množiny dat.",
		"ad": "je hodnota (nezáporné číslo), pro kterou chcete vypočítat danou funkci.!je počet stupňů volnosti v čitateli, číslo mezi 1 a 10^10 kromě čísla 10^10.!je počet stupňů volnosti ve jmenovateli, číslo mezi 1 a 10^10 kromě čísla 10^10."
	},
	"FINV": {
		"a": "(pravděpodobnost; volnost1; volnost2)",
		"d": "Vrátí hodnotu inverzní funkce k funkci F rozdělení pravděpodobnosti (pravý chvost): Jestliže p = FDIST(x,...), pak FINV(p,...) = x.",
		"ad": "je pravděpodobnost kumulativního F rozdělení, číslo mezi 0 a 1 (včetně).!je počet stupňů volnosti v čitateli, číslo mezi 1 a 10^10 kromě čísla 10^10.!je počet stupňů volnosti ve jmenovateli, číslo mezi 1 a 10^10 kromě čísla 10^10."
	},
	"FTEST": {
		"a": "(matice1; matice2)",
		"d": "Vrátí výsledek F-testu, tj. pravděpodobnosti (dva chvosty), že se rozptyly v argumentech matice1 a matice2 výrazně neliší.",
		"ad": "je první matice nebo oblast dat. Hodnoty argumentu mohou být čísla, matice nebo odkazy obsahující čísla. (Prázdné buňky jsou ignorovány.)!je druhá matice nebo oblast dat. Hodnoty argumentu mohou být čísla, matice nebo odkazy obsahující čísla. (Prázdné buňky jsou ignorovány.)"
	},
	"F.DIST": {
		"a": "(x; volnost1; volnost2; kumulativní)",
		"d": "Vrátí hodnotu (levostranného) rozdělení pravděpodobnosti F (stupeň nonekvivalence) pro dvě množiny dat.",
		"ad": "je hodnota, pro kterou chcete zjistit rozdělení pravděpodobnosti. Argument musí být nezáporné číslo.!je počet stupňů volnosti v čitateli, číslo mezi 1 a 10^10 kromě čísla 10^10.!je počet stupňů volnosti ve jmenovateli, číslo mezi 1 a 10^10 kromě čísla 10^10.!je logická hodnota, kterou funkce vrátí: kumulativní distribuční funkce = PRAVDA, funkce hustoty pravděpodobnosti = NEPRAVDA."
	},
	"F.DIST.RT": {
		"a": "(x; volnost1; volnost2)",
		"d": "Vrátí hodnotu (pravostranného) rozdělení pravděpodobnosti F (stupeň nonekvivalence) pro dvě množiny dat.",
		"ad": "je hodnota, pro kterou chcete zjistit rozdělení pravděpodobnosti. Argument musí být nezáporné číslo.!je počet stupňů volnosti v čitateli, číslo mezi 1 a 10^10 kromě čísla 10^10.!je počet stupňů volnosti ve jmenovateli, číslo mezi 1 a 10^10 kromě čísla 10^10."
	},
	"F.INV": {
		"a": "(pravděpodobnost; volnost1; volnost2)",
		"d": "Vrátí hodnotu inverzní funkce k distribuční funkci (levostranného) rozdělení pravděpodobnosti F: jestliže p = F.DIST(x,...), F.INV(p,...) = x.",
		"ad": "je pravděpodobnost kumulativního rozdělení F, číslo mezi 0 a 1 včetně.!je počet stupňů volnosti v čitateli, číslo mezi 1 a 10^10 kromě čísla 10^10.!je počet stupňů volnosti ve jmenovateli, číslo mezi 1 a 10^10 kromě čísla 10^10."
	},
	"F.INV.RT": {
		"a": "(pravděpodobnost; volnost1; volnost2)",
		"d": "Vrátí hodnotu inverzní funkce k distribuční funkci (pravostranného) rozdělení pravděpodobnosti F: jestliže p = F.DIST.RT(x,...), F.INV.RT(p,...) = x.",
		"ad": "je pravděpodobnost kumulativního rozdělení F, číslo mezi 0 a 1 včetně.!je počet stupňů volnosti v čitateli, číslo mezi 1 a 10^10 kromě čísla 10^10.!je počet stupňů volnosti ve jmenovateli, číslo mezi 1 a 10^10 kromě čísla 10^10."
	},
	"F.TEST": {
		"a": "(matice1; matice2)",
		"d": "Vrátí výsledek F-testu, tj. pravděpodobnosti (dva chvosty), že se rozptyly v argumentech matice1 a matice2 výrazně neliší.",
		"ad": "je první matice nebo oblast dat. Hodnoty argumentu mohou být čísla, matice nebo odkazy obsahující čísla. (Prázdné buňky jsou ignorovány.)!je druhá matice nebo oblast dat. Hodnoty argumentu mohou být čísla, matice nebo odkazy obsahující čísla. (Prázdné buňky jsou ignorovány.)"
	},
	"FISHER": {
		"a": "(x)",
		"d": "Vrátí hodnotu Fisherovy transformace.",
		"ad": "je hodnota, pro kterou chcete zjistit hodnotu transformace. Argument je číslo mezi -1 a 1 kromě čísel -1 a 1."
	},
	"FISHERINV": {
		"a": "(y)",
		"d": "Vrátí hodnotu inverzní funkce k Fisherově transformaci: jestliže y = FISHER(x), FISHERINV(y) = x.",
		"ad": "je hodnota, pro kterou chcete zjistit hodnotu inverzní transformace."
	},
	"FORECAST": {
		"a": "(x; pole_y; pole_x)",
		"d": "Vypočte (předpoví) budoucí hodnotu lineárního trendu pomocí existujících hodnot.",
		"ad": "je datový bod, pro který chcete odhadnout hodnotu. Musí to být číselná hodnota.!je závislá matice nebo oblast číselných dat.!je nezávislá matice nebo oblast číselných dat. Rozptyl argumentu x se nesmí rovnat nule."
	},
	"FORECAST.ETS": {
		"a": "(cílové_datum; hodnoty; časová_osa; [sezónnost]; [dokončení_dat]; [agregace])",
		"d": "Vrátí prognózu hodnoty k zadanému budoucímu cílovému datu pomocí metody exponenciálního vyhlazování.",
		"ad": "je datový bod, pro který Spreadsheet Editor předpovídá hodnotu. Měl by v sobě nést vzorek hodnot na časové ose.!je matice nebo oblast číselných dat, která předpovídáte.!je nezávislá matice nebo oblast číselných dat. Data na časové ose musí být konzistentně krokovaná a nesmí být nulová.!je volitelná číselná hodnota označující délku sezónního opakování. Výchozí hodnota 1 označuje automatické detekování sezónnosti.!je volitelná hodnota pro zpracování chybějících hodnot. Výchozí hodnota 1 nahrazuje chybějící hodnoty interpolací, hodnota 0 je nahrazuje nulami.!je volitelná číselná hodnota pro agregování několika hodnot se stejným časovým razítkem. Pokud je tento parametr prázdný, Spreadsheet Editor vypočítá průměr hodnot."
	},
	"FORECAST.ETS.CONFINT": {
		"a": "(cílové_datum; hodnoty; časová_osa; [úroveň_spolehlivosti]; [sezónnost]; [dokončení_dat]; [agregace])",
		"d": "Vrátí interval spolehlivosti pro prognózu hodnoty k zadanému cílovému datu.",
		"ad": "je datový bod, pro který Spreadsheet Editor předpovídá hodnotu. Měl by v sobě nést vzorek hodnot na časové ose.!je matice nebo oblast číselných dat, která předpovídáte.!je nezávislá matice nebo oblast číselných dat. Data na časové ose musí být konzistentně krokovaná a nesmí být nulová.!je číslo mezi 0 a 1 označující úroveň spolehlivosti pro vypočítaný interval spolehlivosti. Výchozí hodnota je 0,95.!je volitelná číselná hodnota označující délku sezónního opakování. Výchozí hodnota 1 označuje automatické detekování sezónnosti.!je volitelná hodnota pro zpracování chybějících hodnot. Výchozí hodnota 1 nahrazuje chybějící hodnoty interpolací, hodnota 0 je nahrazuje nulami.!je volitelná číselná hodnota pro agregování několika hodnot se stejným časovým razítkem. Pokud je tento parametr prázdný, Spreadsheet Editor vypočítá průměr hodnot."
	},
	"FORECAST.ETS.SEASONALITY": {
		"a": "(hodnoty; časová_osa; [dokončení_dat]; [agregace])",
		"d": "Vrátí délku opakujícího se vzorku, který aplikace detekuje u zadané časové řady.",
		"ad": "je matice nebo oblast číselných dat, která předpovídáte.!je nezávislá matice nebo oblast číselných dat. Data na časové ose musí být konzistentně krokovaná a nesmí být nulová.!je volitelná hodnota pro zpracování chybějících hodnot. Výchozí hodnota 1 nahrazuje chybějící hodnoty interpolací, hodnota 0 je nahrazuje nulami.!je volitelná číselná hodnota pro agregování několika hodnot se stejným časovým razítkem. Pokud je tento parametr prázdný, Spreadsheet Editor vypočítá průměr hodnot."
	},
	"FORECAST.ETS.STAT": {
		"a": "(hodnoty; časová_osa; typ_statistiky; [sezónnost]; [dokončení_dat]; [agregace])",
		"d": "Vrátí statistická data prognózy.",
		"ad": "je matice nebo oblast číselných dat, která předpovídáte.!je nezávislá matice nebo oblast číselných dat. Data na časové ose musí být konzistentně krokovaná a nesmí být nulová.!je číslo mezi 1 a 8 označující statistiku, kterou bude Spreadsheet Editor vracet pro prognózu.!je volitelná číselná hodnota označující délku sezónního opakování. Výchozí hodnota 1 označuje automatické detekování sezónnosti.!je volitelná hodnota pro zpracování chybějících hodnot. Výchozí hodnota 1 nahrazuje chybějící hodnoty interpolací, hodnota 0 je nahrazuje nulami.!je volitelná číselná hodnota pro agregování několika hodnot se stejným časovým razítkem. Pokud je tento parametr prázdný, Spreadsheet Editor vypočítá průměr hodnot."
	},
	"FORECAST.LINEAR": {
		"a": "(x; pole_y; pole_x)",
		"d": "Vypočte (předpoví) budoucí hodnotu lineárního trendu pomocí existujících hodnot.",
		"ad": "je datový bod, pro který chcete odhadnout hodnotu. Musí to být číselná hodnota.!je závislá matice nebo oblast číselných dat.!je nezávislá matice nebo oblast číselných dat. Rozptyl argumentu x se nesmí rovnat nule."
	},
	"FREQUENCY": {
		"a": "(data; hodnoty)",
		"d": "Vypočte počet výskytů hodnot v oblasti hodnot a vrátí vertikální matici čísel, která má o jeden prvek více než argument Hodnoty.",
		"ad": "je matice nebo odkaz na množinu hodnot, pro které chcete zjistit počet výskytů (prázdné buňky a text jsou přeskočeny).!je matice nebo odkaz na intervaly, do kterých chcete seskupit hodnoty argumentu Data."
	},
	"GAMMA": {
		"a": "(x)",
		"d": "Vrátí hodnotu funkce gama",
		"ad": "je hodnota, pro kterou chcete vypočítat gama"
	},
	"GAMMADIST": {
		"a": "(x; alfa; beta; kumulativní)",
		"d": "Vrátí hodnotu gama rozdělení.",
		"ad": "je hodnota (nezáporné číslo), pro kterou chcete zjistit hodnotu rozdělení.!je parametr rozdělení, kladné číslo.!je parametr rozdělení, kladné číslo. Pokud beta = 1, vrátí funkce GAMMADIST hodnotu standardního gama rozdělení.!je logická hodnota: vrácení kumulativní distribuční funkce = PRAVDA; vrácení hromadné pravděpodobnostní funkce = NEPRAVDA nebo bez zadání."
	},
	"GAMMA.DIST": {
		"a": "(x; alfa; beta; kumulativní)",
		"d": "Vrátí hodnotu gama rozdělení.",
		"ad": "je hodnota (nezáporné číslo), pro kterou chcete zjistit hodnotu rozdělení.!je parametr rozdělení, kladné číslo.!je parametr rozdělení, kladné číslo. Pokud beta = 1, vrátí funkce GAMMA.DIST hodnotu standardního gama rozdělení.!je logická hodnota: vrácení kumulativní distribuční funkce = PRAVDA; vrácení hromadné pravděpodobnostní funkce = NEPRAVDA nebo bez zadání."
	},
	"GAMMAINV": {
		"a": "(pravděpodobnost; alfa; beta)",
		"d": "Vrátí hodnotu inverzní funkce ke kumulativnímu gama rozdělení: Jestliže p = GAMMADIST(x,...), pak GAMMAINV(p,...) = x.",
		"ad": "je pravděpodobnost gama rozdělení, číslo mezi 0 a 1 (včetně).!je parametr rozdělení, kladné číslo.!je parametr rozdělení, kladné číslo. Pokud beta = 1, vrátí funkce GAMMAINV inverzní funkci ke standardnímu gama rozdělení."
	},
	"GAMMA.INV": {
		"a": "(pravděpodobnost; alfa; beta)",
		"d": "Vrátí hodnotu inverzní funkce k distribuční funkci kumulativního rozdělení gama: jestliže p = GAMMA.DIST(x,...), potom GAMMA.INV(p,...) = x.",
		"ad": "je pravděpodobnost rozdělení gama, číslo mezi 0 a 1 včetně.!je parametr rozdělení, kladné číslo.!je parametr rozdělení, kladné číslo. Je-li argument beta roven 1, funkce GAMMA.INV vrátí inverzní funkci ke standardní distribuční funkci rozdělení gama."
	},
	"GAMMALN": {
		"a": "(x)",
		"d": "Vrátí přirozený logaritmus funkce gama.",
		"ad": "je hodnota, pro kterou chcete vypočítat hodnotu funkce GAMMALN. Argument musí být kladné číslo."
	},
	"GAMMALN.PRECISE": {
		"a": "(x)",
		"d": "Vrátí přirozený logaritmus funkce gama.",
		"ad": "je hodnota, pro kterou chcete vypočítat hodnotu funkce GAMMALN.PRECISE. Argument musí být kladné číslo."
	},
	"GAUSS": {
		"a": "(x)",
		"d": "Vrátí hodnotu 0,5 menší než u standardního normálního součtového rozdělení",
		"ad": "je hodnota, pro kterou chcete získat rozdělení"
	},
	"GEOMEAN": {
		"a": "(číslo1; [číslo2]; ...)",
		"d": "Vrátí geometrický průměr matice nebo oblasti kladných číselných dat.",
		"ad": "je 1 až 255 čísel nebo názvů, matic či odkazů obsahujících čísla, jejichž geometrický průměr chcete zjistit."
	},
	"GROWTH": {
		"a": "(pole_y; [pole_x]; [nová_x]; [b])",
		"d": "Vrátí hodnoty trendu exponenciálního růstu odpovídajícího známým datovým bodům.",
		"ad": "je množina hodnot y počítaných z rovnice y = b*m^x. Může to být matice nebo oblast kladných čísel.!je volitelná množina hodnot x počítaných z rovnice y = b*m^x. Může to být matice nebo oblast stejné velikosti jako oblast argumentu Pole_y.!jsou nové hodnoty x, pro které chcete zjistit odpovídající hodnoty y pomocí funkce LOGLINTREND.!je logická hodnota: konstanta b se vypočítá, pokud argument b = PRAVDA, konstanta b je rovna 1, pokud je argument b = NEPRAVDA nebo vynechaný."
	},
	"HARMEAN": {
		"a": "(číslo1; [číslo2]; ...)",
		"d": "Vrátí harmonický průměr množiny kladných čísel: reciproční hodnota aritmetického průměru recipročních čísel.",
		"ad": "je 1 až 255 čísel nebo názvů, matic či odkazů obsahujících čísla, jejichž harmonický průměr chcete zjistit."
	},
	"HYPGEOM.DIST": {
		"a": "(úspěch; celkem; základ_úspěch; základ_celkem; kumulativní)",
		"d": "Vrátí hodnotu hypergeometrického rozdělení.",
		"ad": "je počet úspěšných pokusů ve výběru.!je velikost výběru.!je počet úspěšných pokusů v základním souboru.!je velikost základního souboru.!je logická hodnota: kumulativní distribuční funkce = PRAVDA, funkce hustoty pravděpodobnosti = NEPRAVDA."
	},
	"HYPGEOMDIST": {
		"a": "(úspěch; celkem; základ_úspěch; základ_celkem)",
		"d": "Vrátí hodnotu hypergeometrického rozdělení.",
		"ad": "je počet úspěšných pokusů ve výběru.!je velikost výběru.!je počet úspěšných pokusů v základním souboru.!je velikost základního souboru."
	},
	"INTERCEPT": {
		"a": "(pole_y; pole_x)",
		"d": "Vypočte souřadnice bodu, ve kterém čára protne osu y, pomocí proložení nejlepší regresní čáry známými hodnotami x a y.",
		"ad": "je závislá množina pozorování nebo dat. Hodnoty argumentu mohou být čísla nebo názvy, matice nebo odkazy obsahující čísla.!je nezávislá množina pozorování nebo dat. Hodnoty argumentu mohou být čísla nebo názvy, matice nebo odkazy obsahující čísla."
	},
	"KURT": {
		"a": "(číslo1; [číslo2]; ...)",
		"d": "Vrátí hodnotu excesu množiny dat.",
		"ad": "je 1 až 255 čísel nebo názvů, matic či odkazů obsahujících čísla, pro které chcete zjistit exces."
	},
	"LARGE": {
		"a": "(pole; k)",
		"d": "Vrátí k-tou největší hodnotu množiny dat, například páté největší číslo.",
		"ad": "je matice nebo oblast dat, pro kterou chcete určit k-tou největší hodnotu.!je pozice hledané hodnoty (počítáno od největší hodnoty) v matici nebo oblasti buněk."
	},
	"LINEST": {
		"a": "(pole_y; [pole_x]; [b]; [stat])",
		"d": "Vrátí statistiku popisující lineární trend odpovídající známým datovým bodům proložením přímky vypočtené metodou nejmenších čtverců.",
		"ad": "je množina hodnot y počítaných pomocí rovnice y = mx + b.!je množina hodnot x počítaných pomocí rovnice y = mx + b.!je logická hodnota: konstanta b se vypočítá, pokud je argument b = PRAVDA nebo vynechán, konstanta b je rovna 0, pokud je argument b = NEPRAVDA.!je logická hodnota: další návratová regresní statistika = PRAVDA, návratové koeficienty m a konstanta b = NEPRAVDA nebo bez zadání."
	},
	"LOGEST": {
		"a": "(pole_y; [pole_x]; [b]; [stat])",
		"d": "Vrátí statistiku, která popisuje exponenciální křivku odpovídající známým datovým bodům.",
		"ad": "je množina hodnot y počítaných pomocí rovnice y = b*m^x.!je množina hodnot x počítaných pomocí rovnice y = b*m^x.!je logická hodnota: konstanta b je vypočítána, pokud je argument b = PRAVDA nebo vynechaný, konstanta b je rovna 1, pokud je argument b = NEPRAVDA.!je logická hodnota: další návratová regresní statistika = PRAVDA, návratové koeficienty m a konstanta b = NEPRAVDA nebo bez zadání."
	},
	"LOGINV": {
		"a": "(pravděpodobnost; stř_hodn; sm_odch)",
		"d": "Vrátí inverzní funkci ke kumulativní distribuční funkci logaritmicko-normálního rozdělení hodnot x, kde funkce ln(x) má normální rozdělení s parametry stř_hodn a sm_odch.",
		"ad": "je pravděpodobnost logaritmicko-normálního rozdělení, číslo mezi 0 a 1 (včetně).!je střední hodnota funkce ln(x).!je směrodatná odchylka funkce ln(x), kladné číslo."
	},
	"LOGNORM.DIST": {
		"a": "(x; střední; sm_odchylka; kumulativní)",
		"d": "Vrátí hodnotu logaritmicko-normálního rozdělení hodnot x, kde funkce ln(x) má normální rozdělení s parametry Střední a Sm_odch.",
		"ad": "je hodnota, pro kterou chcete zjistit hodnotu rozdělení. Argument je kladné číslo.!je střední hodnota funkce ln(x).!je směrodatná odchylka funkce ln(x), kladné číslo.!je logická hodnota: kumulativní distribuční funkce = PRAVDA, funkce hustoty pravděpodobnosti = NEPRAVDA."
	},
	"LOGNORM.INV": {
		"a": "(pravděpodobnost; stř_hodn; sm_odch)",
		"d": "Vrátí inverzní funkci ke kumulativní distribuční funkci logaritmicko-normálního rozdělení hodnot x, kde funkce ln(x) má normální rozdělení s parametry Stř_hodn a Sm_odch.",
		"ad": "je pravděpodobnost logaritmicko-normálního rozdělení, číslo mezi 0 a 1 včetně.!je střední hodnota funkce ln(x).!je směrodatná odchylka funkce ln(x), kladné číslo."
	},
	"LOGNORMDIST": {
		"a": "(x; střední; sm_odch)",
		"d": "Vrátí hodnotu kumulativního logaritmicko-normálního rozdělení hodnot x, kde funkce ln(x) má normální rozdělení s parametry střední a sm_odch.",
		"ad": "je hodnota (kladné číslo), pro kterou chcete zjistit rozdělení.!je střední hodnota funkce ln(x).!je směrodatná odchylka funkce ln(x), kladné číslo."
	},
	"MAX": {
		"a": "(číslo1; [číslo2]; ...)",
		"d": "Vrátí maximální hodnotu množiny hodnot. Přeskočí logické hodnoty a text.",
		"ad": "je 1 až 255 čísel, prázdných buněk, logických hodnot nebo čísel ve formátu textu, jejichž maximální hodnotu chcete nalézt."
	},
	"MAXA": {
		"a": "(hodnota1; [hodnota2]; ...)",
		"d": "Vrátí maximální hodnotu v množině hodnot. Nepřeskočí logické hodnoty a text.",
		"ad": "je 1 až 255 čísel, prázdných buněk, logických hodnot nebo čísel ve formátu textu, pro které chcete zjistit maximální hodnotu."
	},
	"MAXIFS": {
		"a": "(max_oblast; kritéria_oblast; kritéria; ...)",
		"d": "Vrátí maximální hodnotu z buněk určených sadou podmínek nebo kritérií.",
		"ad": "buňky, ve kterých chcete zjistit maximální hodnotu!je oblast buněk, ve kterých chcete vyhodnotit určitou podmínku.!je podmínka nebo kritérium jako číslo, výraz nebo text, který definuje, které buňky se budou počítat při určování maximální hodnoty."
	},
	"MEDIAN": {
		"a": "(číslo1; [číslo2]; ...)",
		"d": "Vrátí medián, střední hodnotu množiny zadaných čísel.",
		"ad": "je 1 až 255 čísel, názvů, matic nebo odkazů obsahujících čísla, pro která chcete nalézt medián."
	},
	"MIN": {
		"a": "(číslo1; [číslo2]; ...)",
		"d": "Vrátí minimální hodnotu množiny hodnot. Přeskočí logické hodnoty a text.",
		"ad": "je 1 až 255 čísel, prázdných buněk, logických hodnot nebo čísel ve formátu textu, jejichž minimální hodnotu chcete nalézt."
	},
	"MINA": {
		"a": "(hodnota1; [hodnota2]; ...)",
		"d": "Vrátí minimální hodnotu v množině hodnot. Nepřeskočí logické hodnoty a text.",
		"ad": "je 1 až 255 čísel, prázdných buněk, logických hodnot nebo čísel ve formátu textu, pro které chcete zjistit minimální hodnotu."
	},
	"MINIFS": {
		"a": "(min_oblast; kritéria_oblast; kritéria; ...)",
		"d": "Vrátí minimální hodnotu z buněk určených sadou podmínek nebo kritérií.",
		"ad": "buňky, ve kterých chcete zjistit minimální hodnotu!je oblast buněk, ve kterých chcete vyhodnotit určitou podmínku.!je podmínka nebo kritérium jako číslo, výraz nebo text, který definuje, které buňky se budou počítat při určování minimální hodnoty."
	},
	"MODE": {
		"a": "(číslo1; [číslo2]; ...)",
		"d": "Vrátí hodnotu, která se v matici nebo v oblasti dat vyskytuje nejčastěji.",
		"ad": "je 1 až 255 čísel nebo názvů, matic či odkazů obsahujících čísla, jejichž modus chcete zjistit."
	},
	"MODE.MULT": {
		"a": "(číslo1; [číslo2]; ...)",
		"d": "Vrátí vertikální matici nejčastěji se vyskytujících (opakovaných) hodnot v matici nebo oblasti dat. Chcete-li získat horizontální matici, použijte vzorec =TRANSPOZICE(MODE.MULT(číslo1;číslo2;...))",
		"ad": "je 1 až 255 čísel nebo názvů, matic či odkazů obsahujících čísla, jejichž modus chcete zjistit."
	},
	"MODE.SNGL": {
		"a": "(číslo1; [číslo2]; ...)",
		"d": "Vrátí hodnotu, která se v matici nebo v oblasti dat vyskytuje nejčastěji.",
		"ad": "je 1 až 255 čísel nebo názvů, matic či odkazů obsahujících čísla, jejichž modus chcete zjistit."
	},
	"NEGBINOM.DIST": {
		"a": "(počet_neúspěchů; počet_úspěchů; pravděpodobnost_úspěchu; kumulativní)",
		"d": "Vrátí hodnotu negativního binomického rozdělení, tj. pravděpodobnost, že neúspěchy argumentu počet_neúspěchů nastanou dříve než úspěch argumentu počet_úspěchů s pravděpodobností určenou argumentem pravděpodobnost_úspěchu.",
		"ad": "je počet neúspěšných pokusů.!je mezní počet úspěšných pokusů.!je pravděpodobnost úspěchu, číslo mezi 0 a 1.!je logická hodnota: kumulativní distribuční funkce = PRAVDA, hromadná pravděpodobnostní funkce = NEPRAVDA."
	},
	"NEGBINOMDIST": {
		"a": "(počet_neúspěchů; počet_úspěchů; pravděpodobnost_úspěchu)",
		"d": "Vrátí hodnotu negativního binomického rozdělení, tj. pravděpodobnost, že počet neúspěchů určený argumentem počet_neúspěchů nastane dříve než počet úspěchů určených argumentem počet_úspěchů s pravděpodobností určenou argumentem pravděpodobnost_úspěchu.",
		"ad": "je počet neúspěšných pokusů.!je mezní počet úspěšných pokusů.!je pravděpodobnost úspěchu, číslo mezi 0 a 1."
	},
	"NORM.DIST": {
		"a": "(x; střed_hodn; sm_odch; kumulativní)",
		"d": "Vrátí hodnotu normálního rozdělení pro zadanou střední hodnotu a směrodatnou odchylku.",
		"ad": "je hodnota, pro kterou chcete zjistit rozdělení.!je aritmetická střední hodnota rozdělení.!je směrodatná odchylka rozdělení, kladné číslo.!je logická hodnota: kumulativní distribuční funkce = PRAVDA, funkce hustoty pravděpodobnosti = NEPRAVDA."
	},
	"NORMDIST": {
		"a": "(x; střed_hodn; sm_odch; kumulativní)",
		"d": "Vrátí hodnotu normálního kumulativního rozdělení pro zadanou střední hodnotu a směrodatnou odchylku.",
		"ad": "je hodnota, pro kterou chcete zjistit rozdělení.!je aritmetická střední hodnota rozdělení.!je směrodatná odchylka rozdělení, kladné číslo.!je logická hodnota: kumulativní distribuční funkce = PRAVDA, funkce hustoty pravděpodobnosti = NEPRAVDA."
	},
	"NORM.INV": {
		"a": "(pravděpodobnost; střední; sm_odch)",
		"d": "Vrátí inverzní funkci k distribuční funkci normálního kumulativního rozdělení pro zadanou střední hodnotu a směrodatnou odchylku.",
		"ad": "je pravděpodobnost normálního rozdělení, číslo mezi 0 a 1 včetně.!je aritmetická střední hodnota rozdělení.!je směrodatná odchylka rozdělení, kladné číslo."
	},
	"NORMINV": {
		"a": "(pravděpodobnost; střední; sm_odch)",
		"d": "Vrátí inverzní funkci k normálnímu kumulativnímu rozdělení pro zadanou střední hodnotu a směrodatnou odchylku.",
		"ad": "je pravděpodobnost normálního rozdělení, číslo mezi 0 a 1 (včetně).!je aritmetická střední hodnota rozdělení.!je směrodatná odchylka rozdělení, kladné číslo."
	},
	"NORM.S.DIST": {
		"a": "(z; kumulativní)",
		"d": "Vrátí standardní normální rozdělení (má střední hodnotu nula a směrodatnou odchylku jedna).",
		"ad": "je hodnota, pro kterou chcete zjistit rozdělení.!je logická hodnota, kterou funkce vrátí: kumulativní distribuční funkce = TRUE, funkce hustoty pravděpodobnosti = NEPRAVDA."
	},
	"NORMSDIST": {
		"a": "(z)",
		"d": "Vrátí hodnotu standardního normálního kumulativního rozdělení. (Střední hodnota daného rozdělení je rovna 0 a jeho směrodatná odchylka je rovna 1.)",
		"ad": "je hodnota, pro kterou chcete zjistit rozdělení."
	},
	"NORM.S.INV": {
		"a": "(pravděpodobnost)",
		"d": "Vrátí inverzní funkci k distribuční funkci standardního normálního kumulativního rozdělení (které má střední hodnotu rovnou 0 a směrodatnou odchylku 1).",
		"ad": "je pravděpodobnost normálního rozdělení, číslo mezi 0 a 1 včetně."
	},
	"NORMSINV": {
		"a": "(pravděpodobnost)",
		"d": "Vrátí inverzní funkci ke standardnímu normálnímu kumulativnímu rozdělení. (Střední hodnota daného rozdělení je rovna 0 a jeho směrodatná odchylka je rovna 1).",
		"ad": "je pravděpodobnost normálního rozdělení, číslo mezi 0 a 1 (včetně)."
	},
	"PEARSON": {
		"a": "(pole1; pole2)",
		"d": "Vrátí Pearsonův výsledný momentový korelační koeficient r.",
		"ad": "je množina nezávislých hodnot.!je množina závislých hodnot."
	},
	"PERCENTILE": {
		"a": "(matice; k)",
		"d": "Vrátí hodnotu k-tého percentilu hodnot v oblasti.",
		"ad": "je matice nebo oblast dat, která definuje relativní umístění.!je hodnota percentilu, která se nachází mezi 0 a 1 (včetně)."
	},
	"PERCENTILE.EXC": {
		"a": "(matice; k)",
		"d": "Vrátí hodnotu k-tého percentilu hodnot v oblasti, kde hodnota k spadá do oblasti 0..1 (s vyloučením hodnot 0 a 1).",
		"ad": "je matice nebo oblast dat, která definuje relativní umístění.!je hodnota percentilu, která se nachází mezi 0 a 1 (včetně)."
	},
	"PERCENTILE.INC": {
		"a": "(matice; k)",
		"d": "Vrátí hodnotu k-tého percentilu hodnot v oblasti, kde hodnota k spadá do oblasti 0..1 (včetně).",
		"ad": "je matice nebo oblast dat, která definuje relativní umístění.!je hodnota percentilu, která se nachází mezi 0 a 1 (včetně)."
	},
	"PERCENTRANK": {
		"a": "(matice; x; [významnost])",
		"d": "Vrátí pořadí hodnoty v množině dat vyjádřené procentuální částí množiny dat.",
		"ad": "je matice nebo oblast dat s číselnými hodnotami, která definuje relativní umístění.!je hodnota, pro kterou chcete zjistit pořadí.!je volitelná hodnota, která určuje počet významných desetinných míst výsledné procentuální hodnoty. Jestliže tento argument nezadáte, bude jeho hodnota 3 (0,xxx %)."
	},
	"PERCENTRANK.EXC": {
		"a": "(matice; x; [významnost])",
		"d": "Vrátí pořadí hodnoty v množině dat vyjádřené procentuální částí (0..1, s vyloučením hodnot 0 a 1) množiny dat.",
		"ad": "je pole nebo oblast dat s číselnými hodnotami, které definují relativní umístění!je hodnota, pro kterou chcete znát pořadí!je volitelná hodnota, která určuje počet platných číslic vráceného procenta, tři číslice v případě vynechání (0,xxx %)"
	},
	"PERCENTRANK.INC": {
		"a": "(matice; x; [významnost])",
		"d": "Vrátí pořadí hodnoty v množině dat vyjádřené procentuální částí (0..1, včetně) množiny dat.",
		"ad": "je pole nebo oblast dat s číselnými hodnotami, které definují relativní umístění!je hodnota, pro kterou chcete znát pořadí!je volitelná hodnota, která určuje počet platných číslic vráceného procenta, tři číslice v případě vynechání (0,xxx %)"
	},
	"PERMUT": {
		"a": "(počet; permutace)",
		"d": "Vrátí počet permutací pro zadaný počet objektů, které lze vybrat z celkového počtu objektů.",
		"ad": "je celkový počet objektů.!je počet objektů v každé permutaci."
	},
	"PERMUTATIONA": {
		"a": "(počet; permutace)",
		"d": "Vrátí počet permutací pro zadaný počet objektů (s opakováním) které je možné vybrat z celkového počtu objektů",
		"ad": "je počet objektů! v každé permutaci"
	},
	"PHI": {
		"a": "(x)",
		"d": "Vrátí hodnotu funkce hustoty pro standardní normální rozdělení",
		"ad": "je číslo, pro které chcete zjistit hustotu standardního normálního rozdělení"
	},
	"POISSON": {
		"a": "(x; střední; kumulativní)",
		"d": "Vrátí hodnotu Poissonova rozdělení.",
		"ad": "je počet událostí.!je předpokládaná číselná hodnota, kladné číslo.!je logická hodnota: kumulativní distribuční funkce Poissonova rozdělení pravděpodobnosti = PRAVDA, hromadná pravděpodobnostní funkce Poissonova rozdělení = NEPRAVDA."
	},
	"POISSON.DIST": {
		"a": "(x; střední; kumulativní)",
		"d": "Vrátí hodnotu Poissonova rozdělení.",
		"ad": "je počet událostí.!je předpokládaná číselná hodnota, kladné číslo.!je logická hodnota: kumulativní distribuční funkce Poissonova rozdělení pravděpodobnosti = PRAVDA, hromadná pravděpodobnostní funkce Poissonova rozdělení = NEPRAVDA."
	},
	"PROB": {
		"a": "(x_oblast; prst_oblast; dolní_limit; [horní_limit])",
		"d": "Vrátí pravděpodobnost toho, že hodnoty v oblasti leží mezi dvěma mezemi nebo jsou rovny dolní mezi.",
		"ad": "je oblast číselných hodnot x, pro které chcete zjistit požadovanou pravděpodobnost.!je množina hodnot pravděpodobností spojených s hodnotami argumentu X_oblast. Jsou to čísla mezi 0 a 1 kromě čísla 0.!je dolní mez hodnot, pro které chcete zjistit požadovanou pravděpodobnost.!je volitelná horní mez hodnot. Jestliže tento argument nezadáte, funkce PROB vrátí pravděpodobnost toho, že hodnoty argumentu X_oblast jsou rovny argumentu Dolní_limit."
	},
	"QUARTILE": {
		"a": "(matice; kvartil)",
		"d": "Vrátí hodnotu kvartilu množiny dat.",
		"ad": "je matice nebo oblast buněk s číselnými hodnotami, pro které chcete zjistit hodnotu kvartilu.!je číslo: minimální hodnota = 0, první kvartil = 1, medián = 2, třetí kvartil = 3, maximální hodnota = 4."
	},
	"QUARTILE.INC": {
		"a": "(matice; kvartil)",
		"d": "Vrátí hodnotu kvartilu množiny dat na základě hodnot percentilu z oblasti 0..1 (včetně).",
		"ad": "je matice nebo oblast buněk s číselnými hodnotami, pro které chcete zjistit hodnotu kvartilu.!je číslo: minimální hodnota = 0, první kvartil = 1, medián = 2, třetí kvartil = 3, maximální hodnota = 4."
	},
	"QUARTILE.EXC": {
		"a": "(matice; kvartil)",
		"d": "Vrátí hodnotu kvartilu množiny dat na základě hodnot percentilu z oblasti 0..1 (s vyloučením hodnot 0 a 1).",
		"ad": "je matice nebo oblast buněk s číselnými hodnotami, pro které chcete zjistit hodnotu kvartilu.!je číslo: minimální hodnota = 0, první kvartil = 1, medián = 2, třetí kvartil = 3, maximální hodnota = 4."
	},
	"RANK": {
		"a": "(číslo; odkaz; [pořadí])",
		"d": "Vrátí pořadí čísla v seznamu čísel: jeho relativní velikost vzhledem k hodnotám v seznamu.",
		"ad": "je číslo, jehož pořadí chcete zjistit.!je matice nebo odkaz na seznam čísel. Nečíselné hodnoty jsou ignorovány.!je číslo: pořadí v seznamu seřazeném sestupně = 0 nebo bez zadání, pořadí v seznamu seřazeném vzestupně = libovolná hodnota různá od nuly."
	},
	"RANK.AVG": {
		"a": "(číslo; odkaz; [pořadí])",
		"d": "Vrátí pořadí čísla v seznamu čísel: jeho relativní velikost vzhledem k ostatním hodnotám v seznamu. Má-li stejné pořadí více než jedna hodnota, bude vráceno průměrné pořadí.",
		"ad": "je číslo, jehož pořadí chcete zjistit.!je matice nebo odkaz na seznam čísel. Nečíselné hodnoty jsou přeskočeny.!je číslo: pořadí v seznamu seřazeném sestupně = 0 nebo bez zadání, pořadí v seznamu seřazeném vzestupně = libovolná hodnota různá od nuly."
	},
	"RANK.EQ": {
		"a": "(číslo; odkaz; [pořadí])",
		"d": "Vrátí pořadí čísla v seznamu čísel: jeho relativní velikost vzhledem k ostatním hodnotám v seznamu. Má-li stejné pořadí více než jedna hodnota, bude vráceno nejvyšší pořadí dané množiny hodnot.",
		"ad": "je číslo, jehož pořadí chcete zjistit.!je matice nebo odkaz na seznam čísel. Nečíselné hodnoty jsou přeskočeny.!je číslo: pořadí v seznamu seřazeném sestupně = 0 nebo bez zadání, pořadí v seznamu seřazeném vzestupně = libovolná hodnota různá od nuly."
	},
	"RSQ": {
		"a": "(pole_y; pole_x)",
		"d": "Vrátí druhou mocninu Pearsonova výsledného momentového korelačního koeficientu pomocí zadaných datových bodů.",
		"ad": "je matice nebo oblast datových bodů. Můžou to být čísla nebo názvy, matice nebo odkazy obsahující čísla.!je matice nebo oblast datových bodů. Můžou to být čísla nebo názvy, matice nebo odkazy obsahující čísla."
	},
	"SKEW": {
		"a": "(číslo1; [číslo2]; ...)",
		"d": "Vrátí zešikmení rozdělení: charakteristika stupně asymetrie rozdělení kolem jeho střední hodnoty.",
		"ad": "je 1 až 255 čísel nebo názvů, matic či odkazů obsahujících čísla, pro které chcete zjistit zešikmení."
	},
	"SKEW.P": {
		"a": "(číslo1; [číslo2]; ...)",
		"d": "Vrátí zešikmení rozdělení založené na základním souboru: charakteristika stupně asymetrie rozdělení kolem jeho střední hodnoty",
		"ad": "je 1 až 254 čísel nebo názvů, matic nebo odkazů obsahujících čísla, pro která chcete zjistit zešikmení"
	},
	"SLOPE": {
		"a": "(pole_y; pole_x)",
		"d": "Vrátí směrnici lineární regresní čáry proložené zadanými datovými body.",
		"ad": "je matice nebo oblast buněk závislých číselných datových bodů. Mohou to být čísla nebo názvy, matice nebo odkazy obsahující čísla.!je množina nezávislých datových bodů. Mohou to být čísla nebo názvy, matice nebo odkazy obsahující čísla."
	},
	"SMALL": {
		"a": "(pole; k)",
		"d": "Vrátí k-tou nejmenší hodnotu v množině dat, například páté nejmenší číslo.",
		"ad": "je matice nebo oblast číselných dat, pro kterou chcete určit k-tou nejmenší hodnotu.!je pozice hledané hodnoty (počítáno od nejmenší hodnoty) v matici nebo oblasti buněk."
	},
	"STANDARDIZE": {
		"a": "(x; střed_hodn; sm_odch)",
		"d": "Vrátí normalizovanou hodnotu z rozdělení určeného střední hodnotou a směrodatnou odchylkou.",
		"ad": "je hodnota, kterou chcete normalizovat.!je aritmetická střední hodnota rozdělení.!je směrodatná odchylka rozdělení, kladné číslo."
	},
	"STDEV": {
		"a": "(číslo1; [číslo2]; ...)",
		"d": "Odhadne směrodatnou odchylku výběru (přeskočí logické hodnoty a text ve výběru).",
		"ad": "je 1 až 255 čísel nebo odkazů obsahujících čísla, které odpovídají výběru ze základního souboru."
	},
	"STDEV.P": {
		"a": "(číslo1; [číslo2]; ...)",
		"d": "Vypočte směrodatnou odchylku základního souboru, který byl zadán jako argument (přeskočí logické hodnoty a text).",
		"ad": "je 1 až 255 čísel nebo odkazů obsahujících čísla, které odpovídají základnímu souboru."
	},
	"STDEV.S": {
		"a": "(číslo1; [číslo2]; ...)",
		"d": "Odhadne směrodatnou odchylku výběru (přeskočí logické hodnoty a text ve výběru).",
		"ad": "je 1 až 255 čísel nebo odkazů obsahujících čísla, které odpovídají výběru ze základního souboru."
	},
	"STDEVA": {
		"a": "(hodnota1; [hodnota2]; ...)",
		"d": "Odhadne směrodatnou odchylku výběru. Nepřeskočí logické hodnoty a text. Text a logická hodnota NEPRAVDA mají hodnotu 0, logická hodnota PRAVDA má hodnotu 1.",
		"ad": "je 1 až 255 hodnot odpovídajících výběru ze základního souboru. Mohou to být hodnoty, názvy nebo odkazy, které obsahují hodnoty."
	},
	"STDEVP": {
		"a": "(číslo1; [číslo2]; ...)",
		"d": "Vypočte směrodatnou odchylku základního souboru, který byl zadán jako argument (přeskočí logické hodnoty a text).",
		"ad": "je 1 až 255 čísel nebo odkazů obsahujících čísla, které odpovídají základnímu souboru."
	},
	"STDEVPA": {
		"a": "(hodnota1; [hodnota2]; ...)",
		"d": "Vypočte směrodatnou odchylku základního souboru. Nepřeskočí logické hodnoty a text. Text a logická hodnota NEPRAVDA mají hodnotu 0, logická hodnota PRAVDA má hodnotu 1.",
		"ad": "je 1 až 255 hodnot odpovídajících základnímu souboru. Mohou to být hodnoty, názvy, matice nebo odkazy, které obsahují hodnoty."
	},
	"STEYX": {
		"a": "(pole_y; pole_x)",
		"d": "Vrátí standardní chybu předpovězené hodnoty y pro každou hodnotu x v regresi.",
		"ad": "je matice nebo oblast závislých datových bodů. Mohou to být čísla nebo názvy, matice nebo odkazy obsahující čísla.!je matice nebo oblast nezávislých datových bodů. Mohou to být čísla nebo názvy, matice nebo odkazy obsahující čísla."
	},
	"TDIST": {
		"a": "(x; volnost; chvosty)",
		"d": "Vrátí hodnotu Studentova t-rozdělení.",
		"ad": "je číselná hodnota, pro kterou chcete zjistit rozdělení.!je celé číslo představující počet stupňů volnosti, které určují rozdělení.!určuje počet chvostů rozdělení, které chcete vrátit: jeden chvost rozdělení = 1, dva chvosty rozdělení = 2."
	},
	"TINV": {
		"a": "(pravděpodobnost; volnost)",
		"d": "Vrátí inverzní funkci (dva chvosty) ke Studentovu t-rozdělení.",
		"ad": "je pravděpodobnost Studentova t-rozdělení (dva chvosty). Může to být číslo mezi 0 a 1 (včetně).!je kladné celé číslo představující počet stupňů volnosti, které určují rozdělení."
	},
	"T.DIST": {
		"a": "(x; volnost; kumulativní)",
		"d": "Vrátí hodnotu levostranného Studentova t-rozdělení.",
		"ad": "je číselná hodnota, pro kterou chcete zjistit hodnotu rozdělení.!je celé číslo představující počet stupňů volnosti, které určují rozdělení.!je logická hodnota: kumulativní distribuční funkce = PRAVDA, funkce hustoty pravděpodobnosti = NEPRAVDA."
	},
	"T.DIST.2T": {
		"a": "(x; volnost)",
		"d": "Vrátí hodnotu oboustranného Studentova t-rozdělení.",
		"ad": "je číselná hodnota, pro kterou chcete zjistit hodnotu rozdělení.!je celé číslo představující počet stupňů volnosti, které určují rozdělení."
	},
	"T.DIST.RT": {
		"a": "(x; volnost)",
		"d": "Vrátí hodnotu pravostranného Studentova t-rozdělení.",
		"ad": "je číselná hodnota, pro kterou chcete zjistit hodnotu rozdělení.!je celé číslo představující počet stupňů volnosti, které určují rozdělení."
	},
	"T.INV": {
		"a": "(pravděpodobnost; volnost)",
		"d": "Vrátí levostrannou inverzní funkci k distribuční funkci Studentova t-rozdělení.",
		"ad": "je pravděpodobnost oboustranného Studentova t-rozdělení. Může to být číslo mezi 0 a 1 včetně.!je kladné celé číslo představující počet stupňů volnosti, které určují rozdělení."
	},
	"T.INV.2T": {
		"a": "(pravděpodobnost; volnost)",
		"d": "Vrátí oboustrannou inverzní funkci k distribuční funkci Studentova t-rozdělení.",
		"ad": "je pravděpodobnost oboustranného Studentova t-rozdělení. Může to být číslo mezi 0 a 1 včetně.!je kladné celé číslo představující počet stupňů volnosti, které určují rozdělení."
	},
	"T.TEST": {
		"a": "(matice1; matice2; chvosty; typ)",
		"d": "Vrátí pravděpodobnost odpovídající Studentovu t-testu.",
		"ad": "je první množina dat.!je druhá množina dat.!určuje počet chvostů rozdělení, které chcete vrátit: jeden chvost rozdělení = 1, dva chvosty rozdělení = 2.!je typ t-testu: spárované výběry = 1, dva výběry se shodným rozptylem = 2, dva výběry s různým rozptylem = 3."
	},
	"TREND": {
		"a": "(pole_y; [pole_x]; [nová_x]; [b])",
		"d": "Vrátí hodnoty lineárního trendu odpovídajícího známým datovým bodům pomocí metody nejmenších čtverců.",
		"ad": "je oblast nebo matice hodnot y určených z rovnice y = mx + b.!je volitelná oblast nebo matice hodnot x určených z rovnice y = mx + b. Matice musí být stejného typu jako matice argumentu Pole_y.!je oblast nebo matice nových hodnot x, pro které chcete zjistit odpovídající hodnoty y pomocí funkce LINTREND.!je logická hodnota: konstanta b je vypočítána, pokud je argument b = PRAVDA nebo vynechán, konstanta b je rovna 0, pokud je argument b = NEPRAVDA."
	},
	"TRIMMEAN": {
		"a": "(pole; procenta)",
		"d": "Vrátí průměrnou hodnotu vnitřní části množiny datových hodnot.",
		"ad": "je oblast nebo matice hodnot, kterou chcete oříznout a pro kterou chcete vypočítat průměr zbývajících hodnot.!je zlomek udávající počet datových bodů, které chcete vyloučit z horní a dolní části množiny dat."
	},
	"TTEST": {
		"a": "(matice1; matice2; chvosty; typ)",
		"d": "Vrátí pravděpodobnost odpovídající Studentovu t-testu.",
		"ad": "je první množina dat.!je druhá množina dat.!určuje počet chvostů rozdělení, které chcete vrátit: jeden chvost rozdělení = 1, dva chvosty rozdělení = 2.!je typ t-testu: spárované výběry = 1, dva výběry se shodným rozptylem = 2, dva výběry s různým rozptylem = 3."
	},
	"VAR": {
		"a": "(číslo1; [číslo2]; ...)",
		"d": "Odhadne rozptyl výběru (přeskočí logické hodnoty a text ve výběru).",
		"ad": "je 1 až 255 číselných argumentů odpovídajících výběru ze základního souboru."
	},
	"VAR.P": {
		"a": "(číslo1; [číslo2]; ...)",
		"d": "Vypočte rozptyl celého základního souboru (přeskočí logické hodnoty a text v základním souboru).",
		"ad": "je 1 až 255 číselných argumentů odpovídajících základnímu souboru."
	},
	"VAR.S": {
		"a": "(číslo1; [číslo2]; ...)",
		"d": "Odhadne rozptyl výběru (přeskočí logické hodnoty a text ve výběru).",
		"ad": "je 1 až 255 numerických argumentů odpovídajících výběru ze základního souboru."
	},
	"VARA": {
		"a": "(hodnota1; [hodnota2]; ...)",
		"d": "Odhadne rozptyl výběru. Nepřeskočí logické hodnoty a text. Text a logická hodnota NEPRAVDA mají hodnotu 0, logická hodnota PRAVDA má hodnotu 1.",
		"ad": "je 1 až 255 hodnot argumentů odpovídajících výběru ze základního souboru."
	},
	"VARP": {
		"a": "(číslo1; [číslo2]; ...)",
		"d": "Vypočte rozptyl základního souboru (přeskočí logické hodnoty a text v základním souboru).",
		"ad": "je 1 až 255 číselných argumentů odpovídajících základnímu souboru."
	},
	"VARPA": {
		"a": "(hodnota1; [hodnota2]; ...)",
		"d": "Vypočte rozptyl základního souboru. Nepřeskočí logické hodnoty a text. Text a logická hodnota NEPRAVDA mají hodnotu 0, logická hodnota PRAVDA má hodnotu 1.",
		"ad": "je 1 až 255 hodnot argumentů odpovídajících základnímu souboru."
	},
	"WEIBULL": {
		"a": "(x; alfa; beta; kumulativní)",
		"d": "Vrátí hodnotu Weibullova rozdělení.",
		"ad": "je hodnota (nezáporné číslo), pro kterou chcete zjistit rozdělení.!je parametr rozdělení, kladné číslo.!je parametr rozdělení, kladné číslo.!je logická hodnota: kumulativní distribuční funkce = PRAVDA, hromadná pravděpodobnostní funkce = NEPRAVDA."
	},
	"WEIBULL.DIST": {
		"a": "(x; alfa; beta; kumulativní)",
		"d": "Vrátí hodnotu Weibullova rozdělení.",
		"ad": "je hodnota (nezáporné číslo), pro kterou chcete zjistit rozdělení.!je parametr rozdělení, kladné číslo.!je parametr rozdělení, kladné číslo.!je logická hodnota: kumulativní distribuční funkce = PRAVDA, hromadná pravděpodobnostní funkce = NEPRAVDA."
	},
	"Z.TEST": {
		"a": "(matice; x; [sigma])",
		"d": "Vrátí P-hodnotu (jeden chvost) z-testu.",
		"ad": "je matice nebo oblast dat, kterou chcete použít k testování argumentu x.!je testovaná hodnota.!je známá směrodatná odchylka základního souboru. Jestliže tento argument nezadáte, bude použita směrodatná odchylka výběru."
	},
	"ZTEST": {
		"a": "(matice; x; [sigma])",
		"d": "Vrátí P-hodnotu (jeden chvost) z-testu.",
		"ad": "je matice nebo oblast dat, kterou chcete použít k testování argumentu x.!je testovaná hodnota.!je známá směrodatná odchylka základního souboru. Jestliže tento argument nezadáte, bude použita směrodatná odchylka výběru."
	},
	"ACCRINT": {
		"a": "(emise; první_úrok; vypořádání; sazba; nom_hodnota; počet_plateb; [základna]; [metoda_výpočtu])",
		"d": "Vrátí nahromaděný úrok z cenného papíru, ze kterého je úrok placen pravidelně.",
		"ad": "je datum emise cenného papíru vyjádřené pořadovým číslem.!je datum prvního úroku cenného papíru vyjádřené pořadovým číslem.!představuje datum zúčtování cenného papíru vyjádřené pořadovým číslem.!je roční kupónová sazba cenného papíru.!je nominální hodnota cenného papíru.!je počet kupónových plateb za rok.!je typ výpočtu určující počet dnů v měsíci, který chcete použít.!představuje logickou hodnotu: pro nahromaděný úrok od data emise = PRAVDA nebo vynechat; pro výpočet od posledního data kupónové platby = NEPRAVDA."
	},
	"ACCRINTM": {
		"a": "(emise; vypořádání; sazba; nom_hodnota; [základna])",
		"d": "Vrátí nahromaděný úrok z cenného papíru, ze kterého je úrok placen k datu splatnosti.",
		"ad": "je datum emise cenného papíru vyjádřené pořadovým číslem.!je datum splatnosti cenného papíru vyjádřené pořadovým číslem.!je roční kupónová sazba cenného papíru.!je nominální hodnota cenného papíru.!je typ výpočtu určující počet dnů v měsíci, který chcete použít."
	},
	"AMORDEGRC": {
		"a": "(náklad; nákup; první_období; zůstatek; období; sazba; [základna])",
		"d": "Vrátí kalkulačně rozvržený lineární odpis aktiva pro každé účetní období.",
		"ad": "je pořizovací cena aktiva.!je datum pořízení aktiva.!je datum konce prvního období.!je zůstatková hodnota na konci životnosti aktiva.!je období.!je odpisová sazba.!Typ úročení: 0 = 360 dnů, 1 = skutečný stav, 3 = 365 dnů."
	},
	"AMORLINC": {
		"a": "(náklad; nákup; první_období; zůstatek; období; sazba; [základna])",
		"d": "Vrátí kalkulačně rozvržený lineární odpis aktiva pro každé účetní období.",
		"ad": "je pořizovací cena aktiva.!je datum pořízení aktiva.!je datum konce prvního období.!je zůstatková hodnota na konci životnosti aktiva.!je období.!je odpisová sazba.!Typ úročení: 0 = 360 dnů, 1 = skutečný stav, 3 = 365 dnů."
	},
	"COUPDAYBS": {
		"a": "(vypořádání; splatnost; počet_plateb; [základna])",
		"d": "Vrátí počet dnů od začátku období placení kupónů do data splatnosti.",
		"ad": "je datum zúčtování cenného papíru vyjádřené pořadovým číslem.!je datum splatnosti cenného papíru vyjádřené pořadovým číslem.!je počet kupónových plateb v roce.!je typ výpočtu určující počet dnů v měsíci, který chcete použít."
	},
	"COUPDAYS": {
		"a": "(vypořádání; splatnost; počet_plateb; [základna])",
		"d": "Vrátí počet dnů v období placení kupónů, které obsahuje den zúčtování.",
		"ad": "je datum zúčtování cenného papíru vyjádřené pořadovým číslem.!je datum splatnosti cenného papíru vyjádřené pořadovým číslem.!je počet kupónových plateb v roce.!je typ výpočtu určující počet dnů v měsíci, který chcete použít."
	},
	"COUPDAYSNC": {
		"a": "(vypořádání; splatnost; počet_plateb; [základna])",
		"d": "Vrátí počet dnů od data zúčtování do následujícího data placení kupónu.",
		"ad": "je datum zúčtování cenného papíru vyjádřené pořadovým číslem.!je datum splatnosti cenného papíru vyjádřené pořadovým číslem.!je počet kupónových plateb v roce.!je typ výpočtu určující počet dnů v měsíci, který chcete použít."
	},
	"COUPNCD": {
		"a": "(vypořádání; splatnost; počet_plateb; [základna])",
		"d": "Vrátí následující datum placení kupónu po datu zúčtování.",
		"ad": "je datum zúčtování cenného papíru vyjádřené pořadovým číslem.!je datum splatnosti cenného papíru vyjádřené pořadovým číslem.!je počet kupónových plateb v roce.!je typ výpočtu určující počet dnů v měsíci, který chcete použít."
	},
	"COUPNUM": {
		"a": "(vypořádání; splatnost; počet_plateb; [základna])",
		"d": "Vrátí počet kupónů splatných mezi datem zúčtování a datem splatnosti.",
		"ad": "je datum zúčtování cenného papíru vyjádřené pořadovým číslem.!je datum splatnosti cenného papíru vyjádřené pořadovým číslem.!je počet kupónových plateb v roce.!je typ výpočtu určující počet dnů v měsíci, který chcete použít."
	},
	"COUPPCD": {
		"a": "(vypořádání; splatnost; počet_plateb; [základna])",
		"d": "Vrátí předchozí datum placení kupónu před datem zúčtování.",
		"ad": "je datum zúčtování cenného papíru vyjádřené pořadovým číslem.!je datum splatnosti cenného papíru vyjádřené pořadovým číslem.!je počet kupónových plateb v roce.!je typ výpočtu určující počet dnů v měsíci, který chcete použít."
	},
	"CUMIPMT": {
		"a": "(úrok; období; půjčka; začátek; konec; typ)",
		"d": "Vrátí kumulativní úrok splacený mezi dvěma obdobími.",
		"ad": "je úroková sazba.!je celkový počet platebních období.!je současná hodnota.!je počáteční období ve výpočtu.!je koncové období ve výpočtu.!je časování plateb."
	},
	"CUMPRINC": {
		"a": "(úrok; období; půjčka; začátek; konec; typ)",
		"d": "Vrátí kumulativní jistinu splacenou mezi dvěma obdobími půjčky.",
		"ad": "je úroková sazba.!je celkový počet platebních období.!je současná hodnota.!je počáteční období ve výpočtu.!je koncové období ve výpočtu.!je časování plateb."
	},
	"DB": {
		"a": "(náklady; zůstatek; životnost; období; [měsíc])",
		"d": "Vypočítá odpis aktiva za určité období pomocí degresivní metody odpisu s pevným zůstatkem.",
		"ad": "je pořizovací cena aktiva.!je zůstatková cena na konci období životnosti aktiva.!je počet období, po které je aktivum odepisováno (někdy se nazývá životnost aktiva).!je období, za které chcete vypočítat odpis. Argument Období musí být ve stejných jednotkách jako argument Životnost.!je počet měsíců v prvním roce odepisování. Jestliže argument Měsíc vynecháte, bude jeho hodnota 12."
	},
	"DDB": {
		"a": "(náklady; zůstatek; životnost; období; [faktor])",
		"d": "Vypočítá odpis aktiva za určité období pomocí dvojité degresivní metody odpisu nebo jiné metody, kterou zadáte.",
		"ad": "je pořizovací cena aktiva.!je zůstatková cena na konci období životnosti aktiva.!je počet období, po které je aktivum odepisováno (někdy se nazývá životnost aktiva).!je období, za které chcete vypočítat odpis. Argument Období musí být ve stejných jednotkách jako argument Životnost.!je míra poklesu zůstatku. Jestliže argument Faktor vynecháte, bude jeho hodnota 2 (dvojitá degresivní metoda odpisu)."
	},
	"DISC": {
		"a": "(vypořádání; splatnost; cena; zaruč_cena; [základna])",
		"d": "Vrátí diskontní sazbu cenného papíru.",
		"ad": "je datum zúčtování cenného papíru vyjádřené pořadovým číslem.!je datum splatnosti cenného papíru vyjádřené pořadovým číslem.!je cena cenného papíru o nominální hodnotě 100 Kč.!je výkupní hodnota cenného papíru o nominální hodnotě 100 Kč.!je typ výpočtu určující počet dnů v měsíci, který chcete použít."
	},
	"DOLLARDE": {
		"a": "(zlomková_koruna; zlomek)",
		"d": "Převede částku v korunách vyjádřenou zlomkem na částku v korunách vyjádřenou desetinným číslem.",
		"ad": "je číslo vyjádřené zlomkem.!je celé číslo, které chcete použít jako jmenovatel zlomku."
	},
	"DOLLARFR": {
		"a": "(desetinná_koruna; zlomek)",
		"d": "Převede částku v korunách vyjádřenou desetinným číslem na částku v korunách vyjádřenou zlomkem.",
		"ad": "je desetinné číslo.!je celé číslo, které chcete použít jako jmenovatel zlomku."
	},
	"DURATION": {
		"a": "(vypořádání; splatnost; kupón; výnos; počet_plateb; [základna])",
		"d": "Vrátí roční dobu cenného papíru s pravidelnými úrokovými sazbami.",
		"ad": "je datum zúčtování cenného papíru vyjádřené pořadovým číslem.!je datum splatnosti cenného papíru vyjádřené pořadovým číslem.!je roční kupónová sazba cenného papíru.!je roční výnos cenného papíru.!je počet kupónových plateb v roce.!je typ výpočtu určující počet dnů v měsíci, který chcete použít."
	},
	"EFFECT": {
		"a": "(úrok; období)",
		"d": "Vrátí efektivní roční úrokovou sazbu.",
		"ad": "je nominální úroková sazba!je počet úročených období za rok"
	},
	"FV": {
		"a": "(sazba; pper; splátka; [souč_hod]; [typ])",
		"d": "Vrátí budoucí hodnotu investice vypočtenou na základě pravidelných konstantních splátek a konstantní úrokové sazby.",
		"ad": "je úroková sazba vztažená na jedno období. Chcete-li například zadat čtvrtletní splátky s 6% roční úrokovou mírou, použijte 6%/4.!je celkový počet platebních období investice.!je platba provedená v každém období. Po dobu životnosti investice ji nelze měnit.!je současná hodnota nebo celková částka určující současnou hodnotu série budoucích plateb. Jestliže argument souč_hod nezadáte, bude jeho hodnota rovna 0.!je hodnota, která představuje termín splátky: splátka na začátku období = 1, splátka na konci období = 0 nebo bez zadání."
	},
	"FVSCHEDULE": {
		"a": "(hodnota; sazby)",
		"d": "Vrátí budoucí hodnotu počáteční jistiny po použití série sazeb složitého úroku.",
		"ad": "je současná hodnota.!řada úrokových sazeb, které chcete použít."
	},
	"INTRATE": {
		"a": "(vypořádání; splatnost; investice; zaruč_cena; [základna])",
		"d": "Vrátí úrokovou sazbu plně investovaného cenného papíru.",
		"ad": "je datum zúčtování cenného papíru vyjádřené pořadovým číslem.!je datum splatnosti cenného papíru vyjádřené pořadovým číslem.!je částka investovaná do cenného papíru.!je částka, kterou obdržíte k datu splatnosti.!je typ výpočtu určující počet dnů v měsíci, který chcete použít."
	},
	"IPMT": {
		"a": "(sazba; za; pper; souč_hod; [bud_hod]; [typ])",
		"d": "Vrátí výšku úroku v určitém úrokovém období vypočtenou na základě pravidelných konstantních splátek a konstantní úrokové sazby.",
		"ad": "je úroková sazba vztažená na jedno období. Chcete-li například zadat čtvrtletní splátky realizované 6% APR, použijte 6%/4.!je období, pro které chcete vypočítat úrok. Tato hodnota musí ležet v intervalu od 1 do Pper.!je celkový počet platebních období investice.!je současná hodnota nebo celková částka určující současnou hodnotu série budoucích plateb.!je budoucí hodnota nebo hotovostní bilance, kterou chcete dosáhnout po splacení poslední platby. Jestliže argument Bud_hod nezadáte, bude jeho hodnota 0.!je logická hodnota, která představuje termín splátky: splátka na konci období = 0 nebo bez zadání, splátka na začátku období = 1"
	},
	"IRR": {
		"a": "(hodnoty; [odhad])",
		"d": "Vrátí vnitřní výnosové procento série peněžních toků.",
		"ad": "je matice nebo odkaz na buňky obsahující čísla, pro které chcete vypočítat vnitřní výnosové procento.!je číslo, které představuje odhad blízký výsledku funkce MÍRA VÝNOSNOSTI. Jestliže tento argument nezadáte, bude mít hodnotu 0,1 (10 procent)."
	},
	"ISPMT": {
		"a": "(sazba; za; pper; souč)",
		"d": "Vrátí výšku úroku zaplaceného za určité období investice.",
		"ad": "je úroková sazba vztažená na jedno období. Chcete-li například zadat čtvrtletní splátky realizované 6% APR, použijte 6%/4.!je období, pro které chcete zjistit výšku úroku.!je počet platebních období investice.!je celková částka určující současnou hodnotu série budoucích plateb."
	},
	"MDURATION": {
		"a": "(vypořádání; splatnost; kupón; výnos; počet_plateb; [základna])",
		"d": "Vrátí Macauleyho modifikovanou dobu cenného papíru o nominální hodnotě 100 Kč.",
		"ad": "je datum zúčtování cenného papíru vyjádřené pořadovým číslem.!je datum splatnosti cenného papíru vyjádřené pořadovým číslem.!je roční kupónová sazba cenného papíru.!je roční výnos cenného papíru.!je počet kupónových plateb v roce.!je typ výpočtu určující počet dnů v měsíci, který chcete použít."
	},
	"MIRR": {
		"a": "(hodnoty; finance; investice)",
		"d": "Vrátí vnitřní sazbu výnosu pravidelných peněžních příjmů. Zohledňuje jak náklady na investice, tak úrok z reinvestic získaných peněžních prostředků.",
		"ad": "je matice nebo odkaz na buňky obsahující čísla, která představují splátky (záporná hodnota) a příjmy (kladná hodnota) v pravidelných obdobích.!je úroková sazba, kterou zaplatíte za použití peněžních příjmů.!je úroková sazba, kterou získáte z reinvestic peněžních příjmů."
	},
	"NOMINAL": {
		"a": "(úrok; období)",
		"d": "Vrátí nominální roční úrokovou sazbu.",
		"ad": "je efektivní úroková sazba.!je počet úročených období za rok."
	},
	"NPER": {
		"a": "(sazba; splátka; souč_hod; [bud_hod]; [typ])",
		"d": "Vrátí počet období pro investici vypočítaný na základě pravidelných konstantních splátek a konstantní úrokové sazby. Chcete-li například zadat čtvrtletní splátky realizované 6. dubna, použijte 6%/4.",
		"ad": "je úroková sazba vztažená na jedno období.!je platba provedená v každém období. Během období životnosti investice ji nelze změnit.!je současná hodnota nebo celková částka určující současnou hodnotu série budoucích plateb.!je budoucí hodnota nebo hotovostní bilance, kterou chcete dosáhnout po splacení poslední platby. Jestliže argument nezadáte, bude jeho hodnota 0.!je logická hodnota: splátka na konci období = 0 nebo bez zadání, splátka na začátku období = 1."
	},
	"NPV": {
		"a": "(sazba; hodnota1; [hodnota2]; ...)",
		"d": "Vrátí čistou současnou hodnotu investice vypočítanou na základě diskontní sazby a série budoucích plateb (záporné hodnoty) a příjmů (kladné hodnoty).",
		"ad": "je diskontní sazba vztažená na délku jednoho období.!je 1 až 254 plateb a příjmů rovnoměrně rozdělených v čase a vyskytujících se na konci každého období."
	},
	"ODDFPRICE": {
		"a": "(vypořádání; splatnost; emise; první_úrok; sazba; výnos; zaruč_cena; počet_plateb; [základna])",
		"d": "Vrátí cenu cenného papíru o nominální hodnotě 100 Kč s odlišným prvním obdobím.",
		"ad": "je datum zúčtování cenného papíru vyjádřené pořadovým číslem.!je datum splatnosti cenného papíru vyjádřené pořadovým číslem.!je datum emise cenného papíru vyjádřené pořadovým číslem.!je datum první platby kupónu cenného papíru vyjádřené pořadovým číslem.!je úroková sazba cenného papíru.!je roční výnos cenného papíru.!je výkupní hodnota cenného papíru o nominální hodnotě 100 Kč.!je počet kupónových plateb v roce.!je typ výpočtu určující počet dnů v měsíci, který chcete použít."
	},
	"ODDFYIELD": {
		"a": "(vypořádání; splatnost; emise; první_úrok; sazba; cena; zaruč_cena; počet_plateb; [základna])",
		"d": "Vrátí výnos cenného papíru s odlišným prvním obdobím.",
		"ad": "je datum zúčtování cenného papíru vyjádřené pořadovým číslem.!je datum splatnosti cenného papíru vyjádřené pořadovým číslem.!je datum emise cenného papíru vyjádřené pořadovým číslem.!je datum první platby kupónu cenného papíru vyjádřené pořadovým číslem.!je úroková sazba cenného papíru.!je cena cenného papíru.!je výkupní hodnota cenného papíru o nominální hodnotě 100 Kč.!je počet kupónových plateb v roce.!je typ výpočtu určující počet dnů v měsíci, který chcete použít."
	},
	"ODDLPRICE": {
		"a": "(vypořádání; splatnost; poslední_úrok; sazba; výnos; zaruč_cena; počet_plateb; [základna])",
		"d": "Vrátí cenu cenného papíru o nominální hodnotě 100 Kč s odlišným posledním obdobím.",
		"ad": "je datum zúčtování cenného papíru vyjádřené pořadovým číslem.!je datum splatnosti cenného papíru vyjádřené pořadovým číslem.!je datum poslední kupónové platby vyjádřené pořadovým číslem.!je úroková sazba cenného papíru.!je roční výnos cenného papíru.!je výkupní hodnota cenného papíru o nominální hodnotě 100 Kč.!je počet kupónových plateb v roce.!je typ výpočtu určující počet dnů v měsíci, který chcete použít."
	},
	"ODDLYIELD": {
		"a": "(vypořádání; splatnost; poslední_úrok; sazba; cena; zaruč_cena; počet_plateb; [základna])",
		"d": "Vrátí výnos cenného papíru s odlišným posledním obdobím.",
		"ad": "je datum zúčtování cenného papíru vyjádřené pořadovým číslem.!je datum splatnosti cenného papíru vyjádřené pořadovým číslem.!je datum poslední kupónové platby vyjádřené pořadovým číslem.!je úroková sazba cenného papíru.!je cena cenného papíru.!je výkupní hodnota cenného papíru o nominální hodnotě 100 Kč.!je počet kupónových plateb v roce.!je typ výpočtu určující počet dnů v měsíci, který chcete použít."
	},
	"PDURATION": {
		"a": "(sazba; souč_hod; bud_hod)",
		"d": "Vrátí počet období požadovaných investicí k tomu, aby dosáhla zadané hodnoty",
		"ad": "je úroková sazba za období.!je současná hodnota investice!je požadovaná budoucí hodnota investice"
	},
	"PMT": {
		"a": "(sazba; pper; souč_hod; [bud_hod]; [typ])",
		"d": "Vypočte splátku půjčky na základě konstantních splátek a konstantní úrokové sazby.",
		"ad": "je úroková sazba půjčky vztažená na jedno období. Chcete-li například zadat čtvrtletní splátky realizované 6% APR, použijte 6%/4.!je celkový počet splátek půjčky.!je současná hodnota: celková hodnota série budoucích plateb.! je budoucí hodnota nebo hotovostní bilance, kterou chcete dosáhnout po splacení poslední platby. Jestliže tento argument nezadáte, bude jeho hodnota 0 (nula).!je logická hodnota: splátka na konci období = 0 nebo bez zadání, splátka na začátku období = 1."
	},
	"PPMT": {
		"a": "(sazba; za; pper; souč_hod; [bud_hod]; [typ])",
		"d": "Vrátí hodnotu splátky jistiny pro zadanou investici vypočtenou na základě pravidelných konstantních splátek a konstantní úrokové sazby.",
		"ad": "je úroková sazba vztažená na jedno období. Chcete-li například zadat čtvrtletní splátky realizované 6% APR, použijte 6%/4.!určuje období. Musí nabývat hodnot od 1 do Pper.!je celkový počet platebních období investice.!je současná hodnota: celková hodnota série budoucích plateb.!je budoucí hodnota nebo hotovostní bilance, kterou chcete dosáhnout po splacení poslední platby.!je logická hodnota: splátka na konci období = 0 nebo bez zadání, splátka na začátku období = 1"
	},
	"PRICE": {
		"a": "(vypořádání; splatnost; sazba; výnos; zaruč_cena; počet_plateb; [základna])",
		"d": "Vrátí cenu cenného papíru o nominální hodnotě 100 Kč, ze kterého je úrok placen v pravidelných termínech.",
		"ad": "je datum zúčtování cenného papíru vyjádřené pořadovým číslem.!je datum splatnosti cenného papíru vyjádřené pořadovým číslem.!je roční kupónová sazba cenného papíru.!je roční výnos cenného papíru.!je výkupní hodnota cenného papíru o nominální hodnotě 100 Kč.!je počet kupónových plateb v roce.!je typ výpočtu určující počet dnů v měsíci, který chcete použít."
	},
	"PRICEDISC": {
		"a": "(vypořádání; splatnost; diskont_sazba; zaruč_cena; [základna])",
		"d": "Vrátí cenu diskontního cenného papíru o nominální hodnotě 100 Kč.",
		"ad": "je datum zúčtování cenného papíru vyjádřené pořadovým číslem.!je datum splatnosti cenného papíru vyjádřené pořadovým číslem.!je diskontní sazba cenného papíru.!je výkupní hodnota cenného papíru o nominální hodnotě 100 Kč.!je typ výpočtu určující počet dnů v měsíci, který chcete použít."
	},
	"PRICEMAT": {
		"a": "(vypořádání; splatnost; emise; sazba; výnos; [základna])",
		"d": "Vrátí cenu cenného papíru o nominální hodnotě 100 Kč, ze kterého je úrok placen k datu splatnosti.",
		"ad": "je datum zúčtování cenného papíru vyjádřené pořadovým číslem.!je datum splatnosti cenného papíru vyjádřené pořadovým číslem.!je datum emise cenného papíru vyjádřené pořadovým číslem.!je úroková sazba cenného papíru k datu emise.!je roční výnos cenného papíru.!je typ výpočtu určující počet dnů v měsíci, který chcete použít."
	},
	"PV": {
		"a": "(sazba; pper; splátka; [bud_hod]; [typ])",
		"d": "Vrátí současnou hodnotu investice: celkovou hodnotu série budoucích plateb.",
		"ad": "je úroková sazba vztažená na jedno období. Chcete-li například zadat čtvrtletní splátky realizované 6% APR, použijte 6%/4.!je celkový počet platebních období investice.!je splátka provedená v každém období. Během období životnosti investice ji nelze měnit.!je budoucí hodnota nebo hotovostní bilance, kterou chcete dosáhnout po splacení poslední platby.!je logická hodnota: splátka na konci období = 0 nebo bez zadání, splátka na začátku období = 1."
	},
	"RATE": {
		"a": "(pper; splátka; souč_hod; [bud_hod]; [typ]; [odhad])",
		"d": "Vrátí úrokovou sazbu vztaženou na období půjčky nebo investice. Chcete-li například zadat čtvrtletní splátky realizované 6. dubna, použijte 6%/4.",
		"ad": "je celkový počet platebních období půjčky nebo investice.!je splátka provedená v každém období. Během období životnosti půjčky nebo investice ji nelze měnit.!je současná hodnota: celková hodnota série budoucích plateb.!je budoucí hodnota nebo hotovostní bilance, kterou chcete dosáhnout po splacení poslední platby. Jestliže argument Bud_hod nezadáte, bude jeho hodnota 0.!je logická hodnota: splátka na začátku období = 1; splátka na konci období = 0 nebo bez zadání.!je předpokládaný odhad sazby. Jestliže argument Odhad nezadáte, bude jeho hodnota 0,1 (10 procent)."
	},
	"RECEIVED": {
		"a": "(vypořádání; splatnost; investice; diskont_sazba; [základna])",
		"d": "Vrátí částku obdrženou k datu splatnosti plně investovaného cenného papíru.",
		"ad": "je datum zúčtování cenného papíru vyjádřené pořadovým číslem.!je datum splatnosti cenného papíru vyjádřené pořadovým číslem.!je částka investovaná do cenného papíru.!je diskontní sazba cenného papíru.!je typ výpočtu určující počet dnů v měsíci, který chcete použít."
	},
	"RRI": {
		"a": "(nper; souč_hod; bud_hod)",
		"d": "Vrátí odpovídající úrokovou sazbu pro růst investic",
		"ad": "je počet období pro investici!je současná hodnota investice!je budoucí hodnota investice"
	},
	"SLN": {
		"a": "(náklady; zůstatek; životnost)",
		"d": "Vrátí přímé odpisy aktiva pro jedno období.",
		"ad": "je pořizovací cena aktiva.!je zůstatková cena na konci období životnosti aktiva.!je počet období, ve kterých je aktivum odepisováno (někdy se nazývá životnost aktiva)."
	},
	"SYD": {
		"a": "(náklady; zůstatek; životnost; za)",
		"d": "Vrátí směrné číslo ročních odpisů aktiva pro zadané období.",
		"ad": "je pořizovací cena aktiva.!je zůstatková cena na konci období životnosti aktiva.!je počet období, ve kterých je aktivum odepisováno (někdy se nazývá životnost aktiva).!je období, které musí být vyjádřeno ve stejných jednotkách jako argument Životnost."
	},
	"TBILLEQ": {
		"a": "(vypořádání; splatnost; diskont_sazba)",
		"d": "Vrátí výnos směnky státní pokladny ekvivalentní výnosu obligace.",
		"ad": "je datum zúčtování směnky státní pokladny vyjádřené pořadovým číslem.!je datum splatnosti směnky státní pokladny vyjádřené pořadovým číslem.!je diskontní sazba směnky státní pokladny."
	},
	"TBILLPRICE": {
		"a": "(vypořádání; splatnost; diskont_sazba)",
		"d": "Vrátí cenu směnky státní pokladny o nominální hodnotě 100 Kč.",
		"ad": "je datum zúčtování směnky státní pokladny vyjádřené pořadovým číslem.!je datum splatnosti směnky státní pokladny vyjádřené pořadovým číslem.!je diskontní sazba směnky státní pokladny."
	},
	"TBILLYIELD": {
		"a": "(vypořádání; splatnost; cena)",
		"d": "Vrátí výnos směnky státní pokladny.",
		"ad": "je datum zúčtování směnky státní pokladny vyjádřené pořadovým číslem.!je datum splatnosti směnky státní pokladny vyjádřené pořadovým číslem.!je cena směnky státní pokladny o nominální hodnotě 100 Kč."
	},
	"VDB": {
		"a": "(cena; zůstatek; životnost; začátek; konec; [faktor]; [nepřepínat])",
		"d": "Vypočte odpisy aktiva pro každé zadané období, včetně neukončených období, pomocí dvojité degresivní metody odpisu nebo jiné metody, kterou zadáte.",
		"ad": "je pořizovací cena aktiva.!je zbytková hodnota aktiva na konci období životnosti aktiva.!je počet období, ve kterých jsou aktiva odepisována (někdy se nazývá životnost aktiva).!je počáteční období, pro které chcete vypočítat odpisy, ve stejných jednotkách jako argument Životnost.!je konečné období, po které chcete vypočítat odpisy, ve stejných jednotkách jako argument Životnost.!je míra poklesu zůstatku. Jestliže tento argument nezadáte, bude mít hodnotu 2 (dvojitá degresivní metoda odpisu).!je logická hodnota: přejít na přímé odpisy, pokud je hodnota odpisu větší než klesající zůstatek = NEPRAVDA nebo bez zadání, nepřecházet na přímé odpisy = PRAVDA."
	},
	"XIRR": {
		"a": "(hodnoty; data; [odhad])",
		"d": "Vrátí vnitřní výnosnost pro harmonogram peněžních toků.",
		"ad": "je posloupnost peněžních toků odpovídajících harmonogramu dat plateb.!je harmonogram dat plateb odpovídající platbám peněžních toků. !je odhad výsledku funkce XIRR."
	},
	"XNPV": {
		"a": "(sazba; hodnoty; data)",
		"d": "Vrátí čistou současnou hodnotu pro harmonogram peněžních toků.",
		"ad": "je diskontní sazba pro peněžní toky.!je posloupnost peněžních toků odpovídajících harmonogramu dat plateb.!je harmonogram plateb odpovídající platbám peněžních toků."
	},
	"YIELD": {
		"a": "(vypořádání; splatnost; sazba; cena; zaruč_cena; počet_plateb; [základna])",
		"d": "Vrátí výnos cenného papíru, ze kterého je úrok placen v pravidelných termínech.",
		"ad": "je datum zúčtování cenného papíru vyjádřené pořadovým číslem.!je datum splatnosti cenného papíru vyjádřené pořadovým číslem.!je roční kupónová sazba cenného papíru!je cena cenného papíru o nominální hodnotě 100 Kč.!je výkupní hodnota cenného papíru o nominální hodnotě 100 Kč.!je počet kupónových plateb v roce.!je typ výpočtu určující počet dnů v měsíci, který chcete použít."
	},
	"YIELDDISC": {
		"a": "(vypořádání; splatnost; cena; zaruč_cena; [základna])",
		"d": "Vrátí roční výnos diskontního cenného papíru, například směnky státní pokladny.",
		"ad": "je datum zúčtování cenného papíru vyjádřené pořadovým číslem.!je datum splatnosti cenného papíru vyjádřené pořadovým číslem.!je cena cenného papíru o nominální hodnotě 100 Kč.!je výkupní hodnota cenného papíru o nominální hodnotě 100 Kč.!je typ výpočtu určující počet dnů v měsíci, který chcete použít."
	},
	"YIELDMAT": {
		"a": "(vypořádání; splatnost; emise; sazba; cena; [základna])",
		"d": "Vrátí roční výnos cenného papíru, ze kterého je úrok placen k datu splatnosti.",
		"ad": "je datum zúčtování cenného papíru vyjádřené pořadovým číslem.!je datum splatnosti cenného papíru vyjádřené pořadovým číslem.!je datum emise cenného papíru vyjádřené pořadovým číslem.!je úroková sazba cenného papíru k datu emise.!je cena cenného papíru o nominální hodnotě 100 Kč.!je typ výpočtu určující počet dnů v měsíci, který chcete použít."
	},
	"ABS": {
		"a": "(číslo)",
		"d": "Vrátí absolutní hodnotu čísla. Výsledek je číslo bez znaménka.",
		"ad": "je reálné číslo, jehož absolutní hodnotu chcete zjistit."
	},
	"ACOS": {
		"a": "(číslo)",
		"d": "Vrátí hodnotu arkuskosinu čísla. Výsledek je v radiánech v rozsahu 0 až pí. Arkuskosinus je úhel, jehož kosinus je argument Číslo.",
		"ad": "je hodnota kosinu požadovaného úhlu, která musí ležet v intervalu -1 až 1."
	},
	"ACOSH": {
		"a": "(číslo)",
		"d": "Vrátí hodnotu hyperbolického arkuskosinu čísla.",
		"ad": "je libovolné reálné číslo větší nebo rovné 1."
	},
	"ACOT": {
		"a": "(číslo)",
		"d": "Vrátí arkuskotangens čísla. Výsledek je v radiánech v rozsahu 0 až pí.",
		"ad": "je kotangens požadovaného úhlu"
	},
	"ACOTH": {
		"a": "(číslo)",
		"d": "Vrátí inverzní hyperbolický kotangens čísla",
		"ad": "je hyperbolický kotangens úhlu, který chcete získat"
	},
	"AGGREGATE": {
		"a": "(funkce; možnosti; odkaz1; ...)",
		"d": "Vrátí agregaci v seznamu nebo databázi.",
		"ad": "je číslo od 1 do 19 určující souhrnnou funkci použitou pro agregaci.!je číslo 0 až 7 určující hodnoty, které mají být ignorovány pro agregaci!je matice nebo oblast číselných dat, z níž se má vypočítat agregace.!označuje pozici v rámci matice; jedná se o k-tou největší, k-tou nejmenší, k-tý percentil nebo k-tý kvartil.!je číslo od 1 do 19 určující souhrnnou funkci použitou pro agregaci.!je číslo 0 až 7 určující hodnoty, které mají být pro agregaci ignorovány!je 1 až 253 oblastí nebo odkazů, pro které chcete vypočítat agregaci."
	},
	"ARABIC": {
		"a": "(text)",
		"d": "Převede římskou číslici na arabskou.",
		"ad": "je římské číslo, které chcete převést."
	},
	"ASC": {
		"a": "(text)",
		"d": "U jazyků využívajících dvoubajtové znakové sady (DBCS) změní znaky s plnou šířkou (dvoubajtové) na znaky s poloviční šířkou (jednobajtové)",
		"ad": "je text, který chcete změnit."
	},
	"ASIN": {
		"a": "(číslo)",
		"d": "Vrátí arkussinus čísla. Výsledek je v radiánech v rozsahu -pí/2 až pí/2.",
		"ad": "je hodnota sinu požadovaného úhlu, která musí ležet v intervalu -1 až 1."
	},
	"ASINH": {
		"a": "(číslo)",
		"d": "Vrátí hyperbolický arkussinus čísla.",
		"ad": "je libovolné reálné číslo větší nebo rovné 1."
	},
	"ATAN": {
		"a": "(číslo)",
		"d": "Vrátí arkustangens čísla. Výsledek je v radiánech v rozsahu -pí/2 až pí/2.",
		"ad": "je tangens požadovaného úhlu."
	},
	"ATAN2": {
		"a": "(x_číslo; y_číslo)",
		"d": "Vrátí arkustangens zadané x-ové a y-ové souřadnice. Výsledek je v radiánech v rozsahu -pí až pí kromě hodnoty -pí.",
		"ad": "je x-ová souřadnice bodu.!je y-ová souřadnice bodu."
	},
	"ATANH": {
		"a": "(číslo)",
		"d": "Vrátí hyperbolický arkustangens čísla.",
		"ad": "je libovolné reálné číslo mezi -1 a 1 kromě čísel -1 a 1."
	},
	"BASE": {
		"a": "(číslo; radix; [min_length])",
		"d": "Převede číslo na textové vyjádření s danou číselnou základnou.",
		"ad": "je číslo, které chcete převést.!je číselná základna, na kterou chcete číslo převést.!je minimální délka vráceného řetězce. Není-li zadáno, nepřidají se počáteční nuly"
	},
	"CEILING": {
		"a": "(číslo; významnost)",
		"d": "Zaokrouhlí číslo nahoru na nejbližší násobek zadané hodnoty významnosti.",
		"ad": "je hodnota, kterou chcete zaokrouhlit.!je násobek, na který chcete číslo zaokrouhlit."
	},
	"CEILING.MATH": {
		"a": "(číslo; [významnost]; [režim])",
		"d": "Zaokrouhlí číslo nahoru na nejbližší celé číslo nebo na nejbližší násobek zadané hodnoty významnosti",
		"ad": "je hodnota, kterou chcete zaokrouhlit!je násobek, na který chcete číslo zaokrouhlit!pokud je zadaná a hodnota není rovná nula, bude tato funkce zaokrouhlovat směrem od nuly"
	},
	"CEILING.PRECISE": {
		"a": "(číslo; [významnost])",
		"d": "Vrátí číslo zaokrouhlené nahoru na nejbližší celé číslo nebo na nejbližší násobek zadané hodnoty",
		"ad": "je hodnota, kterou chcete zaokrouhlit.!je násobek, na který chcete číslo zaokrouhlit."
	},
	"COMBIN": {
		"a": "(počet; kombinace)",
		"d": "Vrátí počet kombinací pro zadaný počet položek.",
		"ad": "je celkový počet položek.!je počet položek v každé kombinaci."
	},
	"COMBINA": {
		"a": "(počet; kombinace)",
		"d": "Vrátí počet kombinací s opakováním pro daný počet položek",
		"ad": "je celkový počet položek!je počet položek v každé kombinaci"
	},
	"COS": {
		"a": "(číslo)",
		"d": "Vrátí kosinus úhlu.",
		"ad": "je úhel v radiánech, jehož kosinus chcete určit."
	},
	"COSH": {
		"a": "(číslo)",
		"d": "Vrátí hyperbolický kosinus čísla.",
		"ad": "je libovolné reálné číslo."
	},
	"COT": {
		"a": "(číslo)",
		"d": "Vrátí kotangens úhlu",
		"ad": "je úhel v radiánech, pro který chcete získat kotangens"
	},
	"COTH": {
		"a": "(číslo)",
		"d": "Vrátí hyperbolický kotangens čísla",
		"ad": "je úhel v radiánech, pro který chcete získat hyperbolický kotangens"
	},
	"CSC": {
		"a": "(číslo)",
		"d": "Vrátí kosekans úhlu",
		"ad": "je úhel v radiánech, pro který chcete získat kosekans"
	},
	"CSCH": {
		"a": "(číslo)",
		"d": "Vrátí hyperbolický kosekans úhlu",
		"ad": "je úhel v radiánech, pro který chcete získat hyperbolický kosekans"
	},
	"DECIMAL": {
		"a": "(číslo; základ)",
		"d": "Převede textové vyjádření čísla v daném základu na desítkové číslo",
		"ad": "je číslo, které chcete převést!je základ číselné soustavy čísla, které převádíte"
	},
	"DEGREES": {
		"a": "(úhel)",
		"d": "Převede radiány na stupně.",
		"ad": "je úhel v radiánech, který chcete převést."
	},
	"ECMA.CEILING": {
		"a": "(číslo; významnost)",
		"d": "Zaokrouhlí číslo nahoru na nejbližší násobek zadané hodnoty významnosti",
		"ad": "je hodnota, kterou chcete zaokrouhlit.!je násobek, na který chcete číslo zaokrouhlit."
	},
	"EVEN": {
		"a": "(číslo)",
		"d": "Zaokrouhlí kladné číslo nahoru a záporné číslo dolů na nejbližší sudé celé číslo.",
		"ad": "je číslo, které chcete zaokrouhlit."
	},
	"EXP": {
		"a": "(číslo)",
		"d": "Vrátí základ přirozeného logaritmu umocněný na zadané číslo.",
		"ad": "je exponent použitý u základu e. Konstanta e je základ přirozeného logaritmu a je rovna hodnotě 2,71828182845904."
	},
	"FACT": {
		"a": "(číslo)",
		"d": "Vrátí faktoriál čísla. Výsledek se rovná hodnotě 1*2*3*...*Číslo.",
		"ad": "je nezáporné číslo, jehož faktoriál chcete vypočítat."
	},
	"FACTDOUBLE": {
		"a": "(číslo)",
		"d": "Vrátí dvojitý faktoriál čísla.",
		"ad": "je hodnota, jejíž dvojitý faktoriál chcete vypočítat."
	},
	"FLOOR": {
		"a": "(číslo; významnost)",
		"d": "Zaokrouhlí číslo dolů na nejbližší násobek zadané hodnoty významnosti.",
		"ad": "je číselná hodnota, kterou chcete zaokrouhlit.!je násobek, na který chcete číslo zaokrouhlit. Argumenty číslo a významnost musí být zároveň buď kladná, nebo záporná čísla."
	},
	"FLOOR.PRECISE": {
		"a": "(číslo; [významnost])",
		"d": "Vrátí číslo zaokrouhlené dolů na nejbližší celé číslo nebo na nejbližší násobek zadané hodnoty",
		"ad": "je hodnota, kterou chcete zaokrouhlit.!je násobek, na který chcete číslo zaokrouhlit."
	},
	"FLOOR.MATH": {
		"a": "(číslo; [významnost]; [režim])",
		"d": "Zaokrouhlí číslo dolů na nejbližší celé číslo nebo na nejbližší násobek zadané hodnoty významnosti",
		"ad": "je hodnota, kterou chcete zaokrouhlit!je násobek, na který chcete číslo zaokrouhlit!pokud je zadaná a hodnota není rovná nula, bude tato funkce zaokrouhlovat směrem k nule"
	},
	"GCD": {
		"a": "(číslo1; [číslo2]; ...)",
		"d": "Vrátí největší společný dělitel.",
		"ad": "představují 1 až 255 hodnot."
	},
	"INT": {
		"a": "(číslo)",
		"d": "Zaokrouhlí číslo dolů na nejbližší celé číslo.",
		"ad": "je reálné číslo, které chcete zaokrouhlit dolů na celé číslo."
	},
	"ISO.CEILING": {
		"a": "(číslo; [významnost])",
		"d": "Vrátí číslo zaokrouhlené nahoru na nejbližší celé číslo nebo na nejbližší násobek zadané hodnoty. Číslo bude zaokrouhleno nahoru bez ohledu na jeho znaménko. Pokud je však zadáno číslo nula nebo násobek nuly, bude vrácena nula.",
		"ad": "je hodnota, kterou chcete zaokrouhlit.!je násobek, na který chcete číslo zaokrouhlit."
	},
	"LCM": {
		"a": "(číslo1; [číslo2]; ...)",
		"d": "Vrátí nejmenší společný násobek.",
		"ad": "představují 1 až 255 hodnot, pro které chcete určit nejmenší společný násobek."
	},
	"LN": {
		"a": "(číslo)",
		"d": "Vrátí přirozený logaritmus čísla.",
		"ad": "je kladné reálné číslo, jehož přirozený logaritmus chcete získat."
	},
	"LOG": {
		"a": "(číslo; [základ])",
		"d": "Vrátí logaritmus čísla při zadaném základu.",
		"ad": "je kladné reálné číslo, jehož logaritmus chcete získat.!je základ logaritmu. Jestliže tento argument nezadáte, bude jeho hodnota 10."
	},
	"LOG10": {
		"a": "(číslo)",
		"d": "Vrátí dekadický logaritmus čísla.",
		"ad": "je kladné reálné číslo, jehož dekadický logaritmus chcete získat."
	},
	"MDETERM": {
		"a": "(pole)",
		"d": "Vrátí determinant matice.",
		"ad": "je číselná matice se stejným počtem řádků a sloupců. Může to být oblast buněk nebo maticová konstanta."
	},
	"MINVERSE": {
		"a": "(pole)",
		"d": "Vrátí inverzní matici k matici, která je uložena v oblasti definované jako matice.",
		"ad": "je číselná matice se stejným počtem řádků a sloupců. Může to být oblast buněk nebo maticová konstanta."
	},
	"MMULT": {
		"a": "(pole1; pole2)",
		"d": "Vrátí součin dvou matic, matici se stejným počtem řádků jako matice argumentu Pole1 a stejným počtem sloupců jako matice argumentu Pole2.",
		"ad": "je první matice čísel, kterou chcete násobit. Počet sloupců musí být stejný jako počet řádků matice argumentu Pole2."
	},
	"MOD": {
		"a": "(číslo; dělitel)",
		"d": "Vrátí zbytek po dělení čísla.",
		"ad": "je číslo, pro které chcete najít zbytek při dělení.!je číslo, kterým chcete dělit argument Číslo."
	},
	"MROUND": {
		"a": "(číslo; násobek)",
		"d": "Vrátí číslo zaokrouhlené na požadovaný násobek.",
		"ad": "je hodnota, kterou chcete zaokrouhlit.!je násobek, na který chcete číslo zaokrouhlit."
	},
	"MULTINOMIAL": {
		"a": "(číslo1; [číslo2]; ...)",
		"d": "Vrátí mnohočlen sady čísel.",
		"ad": "představují 1 až 255 hodnot, pro které chcete určit mnohočlen."
	},
	"MUNIT": {
		"a": "(dimenze)",
		"d": "Vrátí matici jednotek pro zadanou dimenzi",
		"ad": "je celé číslo určující dimenzi matice jednotek, kterou chcete vrátit"
	},
	"ODD": {
		"a": "(číslo)",
		"d": "Zaokrouhlí kladné číslo nahoru a záporné číslo dolů na nejbližší liché celé číslo.",
		"ad": "je hodnota, kterou chcete zaokrouhlit."
	},
	"PI": {
		"a": "()",
		"d": "Vrátí hodnotu čísla pí s přesností na 15 číslic. Výsledek je hodnota 3.14159265358979.",
		"ad": ""
	},
	"POWER": {
		"a": "(číslo; exponent)",
		"d": "Umocní číslo na zadaný exponent.",
		"ad": "je základ mocniny, kterým může být libovolné reálné číslo.!je exponent, na který chcete základ umocnit."
	},
	"PRODUCT": {
		"a": "(číslo1; [číslo2]; ...)",
		"d": "Vynásobí všechna čísla zadaná jako argumenty.",
		"ad": "je 1 až 255 čísel, logických hodnot nebo čísel ve formátu textu, které chcete vynásobit."
	},
	"QUOTIENT": {
		"a": "(numerátor; denominátor)",
		"d": "Vrátí celou část dělení.",
		"ad": "je dělenec.!je dělitel."
	},
	"RADIANS": {
		"a": "(úhel)",
		"d": "Převede stupně na radiány.",
		"ad": "je úhel ve stupních, který chcete převést."
	},
	"RAND": {
		"a": "()",
		"d": "Vrátí náhodné číslo větší nebo rovné 0 a menší než 1 určené na základě spojité distribuční funkce (změní se při každém přepočítání listu).",
		"ad": ""
	},
	"RANDARRAY": {
		"a": "([řádků]; [sloupců]; [min]; [max]; [celé_číslo])",
		"d": "Vrátí pole náhodných čísel",
		"ad": "počet řádků ve vráceném poli!počet sloupců ve vráceném poli!minimální počet čísel, které chcete vrátit!maximální počet čísel, které chcete vrátit!vrátit celé číslo nebo desetinné číslo. PRAVDA pro celé číslo, NEPRAVDA pro desetinné číslo"
	},
	"RANDBETWEEN": {
		"a": "(dolní; horní)",
		"d": "Vrátí náhodné číslo mezi zadanými čísly.",
		"ad": "je nejmenší celé číslo, které funkce RANDBETWEEN vrátí.!je největší celé číslo, které funkce RANDBETWEEN vrátí."
	},
	"ROMAN": {
		"a": "(číslo; [forma])",
		"d": "Převede číslo napsané pomocí arabských číslic na římské číslice ve formátu textu.",
		"ad": "je číslo ve formě arabských číslic, které chcete převést.!je číslo určující typ požadovaných římských číslic."
	},
	"ROUND": {
		"a": "(číslo; číslice)",
		"d": "Zaokrouhlí číslo na zadaný počet číslic.",
		"ad": "je číslo, které chcete zaokrouhlit.!je počet číslic, na které chcete požadované číslo zaokrouhlit. Jestliže zadáte záporné číslo, bude zadané číslo zaokrouhleno směrem doleva od desetinné čárky. Pokud je hodnota argumentu nula, bude zadané číslo zaokrouhleno na nejbližší celé číslo."
	},
	"ROUNDDOWN": {
		"a": "(číslo; číslice)",
		"d": "Zaokrouhlí číslo dolů směrem k nule.",
		"ad": "je libovolné reálné číslo, které chcete zaokrouhlit dolů.!je počet číslic, na které chcete číslo zaokrouhlit. Má-li tento argument zápornou hodnotu, bude zadané číslo zaokrouhleno směrem doleva od desetinné čárky. Pokud je roven nule nebo vynechán, bude zadané číslo zaokrouhleno na nejbližší celé číslo."
	},
	"ROUNDUP": {
		"a": "(číslo; číslice)",
		"d": "Zaokrouhlí číslo nahoru směrem od nuly.",
		"ad": "je libovolné reálné číslo, které chcete zaokrouhlit nahoru.!je počet číslic, na které chcete číslo zaokrouhlit. Má-li tento argument zápornou hodnotu, bude zadané číslo zaokrouhleno směrem doleva od desetinné čárky. Pokud má hodnotu nula nebo je vynechán, bude zadané číslo zaokrouhleno na nejbližší celé číslo."
	},
	"SEC": {
		"a": "(číslo)",
		"d": "Vrátí sekans úhlu",
		"ad": "je úhel v radiánech, pro který chcete získat sekans"
	},
	"SECH": {
		"a": "(číslo)",
		"d": "Vrátí hyperbolický sekans úhlu",
		"ad": "je úhel v radiánech, pro který chcete získat hyperbolický sekans"
	},
	"SERIESSUM": {
		"a": "(x; n; m; koeficient)",
		"d": "Vrátí součet mocninné řady určené podle vzorce.",
		"ad": "je počáteční hodnota mocninné řady.!je počáteční mocnina, na kterou chcete umocnit argument x.!je hodnota, o kterou chcete zvyšovat argument n pro každý člen řady.!je množina koeficientů, kterými je každá následující mocnina argumentu x vynásobena."
	},
	"SIGN": {
		"a": "(číslo)",
		"d": "Vrátí znaménko čísla: číslo 1 pro kladné číslo, 0 pro nulu nebo -1 pro záporné číslo.",
		"ad": "je libovolné reálné číslo."
	},
	"SIN": {
		"a": "(číslo)",
		"d": "Vrátí sinus úhlu.",
		"ad": "je úhel v radiánech, jehož sinus chcete zjistit. Stupně*PI()/180 = radiány."
	},
	"SINH": {
		"a": "(číslo)",
		"d": "Vrátí hyperbolický sinus čísla.",
		"ad": "je libovolné reálné číslo."
	},
	"SQRT": {
		"a": "(číslo)",
		"d": "Vrátí druhou odmocninu čísla.",
		"ad": "je číslo, jehož odmocninu chcete zjistit."
	},
	"SQRTPI": {
		"a": "(číslo)",
		"d": "Vrátí druhou odmocninu výrazu (číslo * pí).",
		"ad": "je číslo, kterým je číslo pí násobeno."
	},
	"SUBTOTAL": {
		"a": "(funkce; odkaz1; ...)",
		"d": "Vrátí souhrn na listu nebo v databázi.",
		"ad": "je číslo od 1 do 11 určující souhrnnou funkci použitou pro souhrn.!je 1 až 254 oblastí nebo odkazů, pro které chcete vypočítat souhrn."
	},
	"SUM": {
		"a": "(číslo1; [číslo2]; ...)",
		"d": "Sečte všechna čísla v oblasti buněk.",
		"ad": "je 1 až 255 čísel, které chcete sečíst. Logické hodnoty a text budou v buňkách přeskočeny. Pokud jsou však zadány jako argumenty, budou zahrnuty."
	},
	"SUMIF": {
		"a": "(oblast; kritéria; [součet])",
		"d": "Sečte buňky vybrané podle zadaných kritérií.",
		"ad": "je oblast buněk, které chcete sečíst.!je kritérium ve formě čísla, výrazu nebo textu určující, které buňky budou sečteny.!jsou skutečné buňky, které budou sečteny. Jestliže tento argument nezadáte, budou použity buňky oblasti. "
	},
	"SUMIFS": {
		"a": "(oblast_součtu; oblast_kritérií; kritérium; ...)",
		"d": "Sečte buňky určené danou sadou podmínek nebo kritérií.",
		"ad": "jsou vlastní buňky určené k součtu.!představuje oblast buněk, které chcete vyhodnotit na základě určené podmínky.!je podmínka nebo kritérium v podobě čísla, výrazu nebo textu definujících buňky, které chcete sečíst."
	},
	"SUMPRODUCT": {
		"a": "(pole1; [pole2]; [pole3]; ...)",
		"d": "Vrátí součet součinů odpovídajících oblastí nebo matic.",
		"ad": "je 2 až 255 matic, jejichž jednotlivé položky chcete násobit a sečíst. U všech matice musí být zadány stejné dimenze."
	},
	"SUMSQ": {
		"a": "(číslo1; [číslo2]; ...)",
		"d": "Vrátí součet druhých mocnin argumentů. Argumenty mohou představovat čísla, matice, názvy nebo odkazy na buňky obsahující čísla.",
		"ad": "je 1 až 255 čísel, matic, názvů nebo odkazů na matice, pro které chcete zjistit součet mocnin."
	},
	"SUMX2MY2": {
		"a": "(pole_x; pole_y)",
		"d": "Vypočte součet rozdílů čtverců dvou odpovídajících oblastí nebo polí.",
		"ad": "je první oblast nebo matice čísel. Může to být číslo nebo název, matice nebo odkaz obsahující čísla.!je druhá oblast nebo matice čísel. Může to být číslo nebo název, matice nebo odkaz obsahující čísla."
	},
	"SUMX2PY2": {
		"a": "(pole_x; pole_y)",
		"d": "Vrátí celkový součet součtů čtverců čísel ve dvou odpovídajících oblastech nebo maticích.",
		"ad": "je první oblast nebo matice čísel. Může to být číslo nebo název, matice nebo odkaz obsahující čísla.!je druhá oblast nebo matice čísel. Může to být číslo nebo název, matice nebo odkaz obsahující čísla."
	},
	"SUMXMY2": {
		"a": "(pole_x; pole_y)",
		"d": "Vypočte součet čtverců rozdílů dvou odpovídajících oblastí nebo matic.",
		"ad": "je první oblast nebo matice hodnot. Může to být číslo nebo název, matice nebo odkaz obsahující čísla.!je druhá oblast nebo matice hodnot. Může to být číslo nebo název, matice nebo odkaz obsahující čísla."
	},
	"TAN": {
		"a": "(číslo)",
		"d": "Vrátí tangens úhlu.",
		"ad": "je úhel v radiánech, jehož tangens chcete zjistit. Stupně * PI()/180 = radiány."
	},
	"TANH": {
		"a": "(číslo)",
		"d": "Vrátí hyperbolický tangens čísla.",
		"ad": "je libovolné reálné číslo."
	},
	"TRUNC": {
		"a": "(číslo; [desetiny])",
		"d": "Zkrátí číslo na celé číslo odstraněním desetinné nebo zlomkové části čísla.",
		"ad": "je číslo, které chcete zkrátit.!je číslo určující přesnost zkrácení. Jestliže tento argument nezadáte, bude jeho hodnota 0."
	},
	"ADDRESS": {
		"a": "(řádek; sloupec; [typ]; [a1]; [list])",
		"d": "Vytvoří textový odkaz na buňku po zadání čísla řádku a sloupce.",
		"ad": "je číslo řádku použité v odkazu na buňku: argument Řádek = 1 pro řádek číslo 1.!je číslo sloupce použité v odkazu na buňku: argument Sloupec = 4 pro sloupec D.!určuje typ odkazu: absolutní = 1, absolutní řádek/relativní sloupec = 2, relativní řádek/absolutní sloupec = 3, relativní = 4.!je logická hodnota určující styl odkazu: styl A1 = 1 nebo PRAVDA, styl R1C1 = 0 nebo NEPRAVDA.!je text určující název listu, který bude použit jako externí odkaz."
	},
	"CHOOSE": {
		"a": "(index; hodnota1; [hodnota2]; ...)",
		"d": "Zvolí hodnotu nebo akci, která má být provedena, ze seznamu hodnot na základě zadaného argumentu Index.",
		"ad": "určuje, který argument hodnoty je vybrán. Argument Index musí náležet do rozsahu 1 až 254 nebo představovat vzorec či odkaz na číslo v rozsahu 1 až 254.!je 1 až 254 hodnot, odkazů na buňky, definovaných názvů, vzorců, funkcí nebo textových argumentů, z nichž vybírá funkce ZVOLIT."
	},
	"COLUMN": {
		"a": "([odkaz])",
		"d": "Vrátí číslo sloupce odkazu.",
		"ad": "je buňka nebo souvislá oblast buněk, jejichž číslo sloupce hledáte. Jestliže tento argument nezadáte, bude použita buňka obsahující funkci SLOUPEC."
	},
	"COLUMNS": {
		"a": "(pole)",
		"d": "Vrátí počet sloupců v matici nebo odkazu.",
		"ad": "je matice, maticový vzorec nebo odkaz na oblast buněk, pro které hledáte počet sloupců."
	},
	"FORMULATEXT": {
		"a": "(odkaz)",
		"d": "Vrátí vzorec jako řetězec",
		"ad": "je odkaz na vzorec"
	},
	"HLOOKUP": {
		"a": "(hledat; tabulka; řádek; [typ])",
		"d": "Prohledá horní řádek tabulky nebo matice hodnot a vrátí hodnotu ze zadaného řádku obsaženou ve stejném sloupci.",
		"ad": "je hodnota, kterou chcete vyhledat v prvním řádku tabulky. Může to být hodnota, odkaz nebo textový řetězec.!je prohledávaná tabulka obsahující text, čísla nebo logické hodnoty. Argument Tabulka může být odkaz na oblast nebo název oblasti.!je číslo řádku v argumentu Tabulka, ze kterého bude vrácena odpovídající hodnota. První řádek hodnot tabulky je řádek číslo 1.!je logická hodnota: najít nejbližší odpovídající hodnotu v horním řádku (hodnoty jsou seřazeny vzestupně) = PRAVDA nebo bez zadání, najít přesnou odpovídající hodnotu = NEPRAVDA."
	},
	"HYPERLINK": {
		"a": "(umístění; [název])",
		"d": "Vytvoří zástupce nebo odkaz, který otevře dokument uložený na pevném disku, síťovém serveru nebo na síti Internet.",
		"ad": "je text představující cestu a název souboru s dokumentem, který chcete otevřít, umístění na pevném disku, adresu UNC nebo cestu URL.!je text nebo číslo, které bude zobrazeno v buňce. Jestliže argument Název nezadáte, objeví se v buňce text argumentu Umístění."
	},
	"INDEX": {
		"a": "(pole; řádek; [sloupec]!odkaz; řádek; [sloupec]; [oblast])",
		"d": "Vrátí hodnotu nebo odkaz na buňku v určitém řádku a sloupci v dané oblasti.",
		"ad": "je oblast buněk nebo maticová konstanta.!vybere řádek v argumentu Pole nebo Odkaz, ze kterého bude vrácena hodnota. Jestliže tento argument nezadáte, musíte zadat argument Sloupec.!vybere sloupec v argumentu Pole nebo Odkaz, ze kterého bude vrácena hodnota. Jestliže tento argument nezadáte, musíte zadat argument Řádek.!je odkaz na jednu nebo více oblastí buněk.!vybere řádek v argumentu Pole nebo Odkaz, ze kterého bude vrácena hodnota. Jestliže tento argument nezadáte, musíte zadat argument Sloupec.!vybere sloupec v argumentu Pole nebo Odkaz, ze kterého bude vrácena hodnota. Jestliže tento argument nezadáte, musíte zadat argument Řádek.!vybere oblast v argumentu Odkaz, ze které bude vrácena hodnota. První vybraná nebo zadaná oblast je oblast číslo 1, druhá oblast je oblast číslo 2, atd."
	},
	"INDIRECT": {
		"a": "(odkaz; [a1])",
		"d": "Vrátí odkaz určený textovým řetězcem.",
		"ad": "je odkaz na buňku obsahující odkaz ve stylu A1 nebo R1C1, název definovaný jako odkaz nebo odkaz na buňku ve formátu textového řetězce.!je logická hodnota, která určuje styl odkazu v argumentu Odkaz: styl R1C1 = NEPRAVDA, styl A1 = PRAVDA nebo bez zadání."
	},
	"LOOKUP": {
		"a": "(co; hledat; [výsledek]!co; pole)",
		"d": "Vyhledá požadovanou hodnotu v matici nebo v oblasti obsahující jeden řádek nebo jeden sloupec. Funkce je poskytnuta k zajištění zpětné kompatibility",
		"ad": "je hodnota vyhledávaná pomocí funkce VYHLEDAT v argumentu Hledat. Může to být číslo, text, logická hodnota, název nebo odkaz na hodnotu.!je oblast obsahující pouze jeden řádek nebo jeden sloupec se vzestupně seřazeným textem, čísly nebo logickými hodnotami.!je oblast obsahující pouze jeden řádek nebo sloupec. Velikost oblasti je stejná jako velikost oblasti argumentu Hledat.!je hodnota vyhledávaná pomocí funkce VYHLEDAT v argumentu Pole. Může to být číslo, text, logická hodnota, název nebo odkaz na hodnotu.!je oblast buněk obsahující text, čísla nebo logické hodnoty, které chcete srovnávat s hodnotami argumentu Co."
	},
	"MATCH": {
		"a": "(co; prohledat; [shoda])",
		"d": "Vrátí relativní polohu položky matice, která odpovídá určené hodnotě v určeném pořadí.",
		"ad": "je hodnota, která bude použita k vyhledání požadované hodnoty v matici. Může to být číslo, text nebo logická hodnota nebo odkaz na jednu z uvedených položek.!je souvislá oblast buněk obsahující hledané hodnoty, matice hodnot nebo odkaz na matici.!je číslo 1, 0 nebo -1 určující, která hodnota bude vrácena."
	},
	"OFFSET": {
		"a": "(odkaz; řádky; sloupce; [výška]; [šířka])",
		"d": "Vrátí odkaz na oblast, která představuje daný počet řádků a sloupců z daného odkazu.",
		"ad": "je odkaz na buňku nebo oblast buněk, od které chcete změřit odsazení.!je počet řádků, nahoru nebo dolů, na které se má horní levá buňka výsledku odkazovat.!je počet sloupců, vpravo nebo vlevo, na které se má horní levá buňka výsledku odkazovat.!je požadovaná výška výsledku vyjádřená počtem řádků. Jestliže tento argument nezadáte, bude jeho hodnota stejná jako hodnota argumentu Odkaz.!je požadovaná šířka výsledku vyjádřená počtem sloupců. Jestliže tento argument nezadáte, bude jeho hodnota stejná jako hodnota argumentu Odkaz."
	},
	"ROW": {
		"a": "([odkaz])",
		"d": "Vrátí číslo řádku odkazu.",
		"ad": "je buňka nebo jediná oblast buněk, pro kterou chcete nalézt číslo řádku. Jestliže tento argument nezadáte, bude jeho hodnota buňka obsahující funkci Řádek."
	},
	"ROWS": {
		"a": "(pole)",
		"d": "Vrátí počet řádků v odkazu nebo matici.",
		"ad": "je matice, maticový vzorec nebo odkaz na oblast buněk, pro kterou chcete nalézt počet řádků."
	},
	"TRANSPOSE": {
		"a": "(pole)",
		"d": "Převede vodorovnou oblast buněk na svislou nebo naopak.",
		"ad": "je oblast buněk listu nebo matice hodnot, kterou chcete transponovat."
	},
	"UNIQUE": {
		"a": "(pole; [sloupce]; [právě_jednou])",
		"d": "Vrátí jedinečné hodnoty z rozsahu nebo pole.",
		"ad": "Rozsah nebo pole, ze kterého se mají vrátit jedinečné řádky nebo sloupce!Logická hodnota: NEPRAVDA v případě, že chcete navzájem porovnat řádky a vrátit jedinečné řádky; PRAVDA v případě, že chcete navzájem porovnat sloupce a vrátit jedinečné sloupce!Logická hodnota: PRAVDA v případě, že chcete vrátit řádky a sloupce, které se v rozsahu nebo poli vyskytují právě jednou; NEPRAVDA v případě, že chcete z rozsahu nebo pole vrátit všechny různé řádky a sloupce; parametr je možné i vynechat"
	},
	"VLOOKUP": {
		"a": "(hledat; tabulka; sloupec; [typ])",
		"d": "Vyhledá hodnotu v krajním levém sloupci tabulky a vrátí hodnotu ze zadaného sloupce ve stejném řádku. Tabulka musí být standardně seřazena vzestupně.",
		"ad": "je hodnota hledaná v prvním sloupci tabulky. Může to být hodnota, odkaz nebo textový řetězec.!je prohledávaná tabulka s textem, čísly nebo logickými hodnotami. Argument Tabulka může být odkaz na oblast nebo název oblasti.!je číslo sloupce v argumentu Tabulka, ve kterém chcete vyhledat odpovídající hodnotu. První sloupec hodnot v tabulce je sloupec číslo 1.!je logická hodnota: nalézt nejbližší odpovídající hodnotu v prvním sloupci (seřazeném vzestupně) = PRAVDA nebo bez zadání, nalézt přesnou odpovídající hodnotu = NEPRAVDA."
	},
	"XLOOKUP": {
		"a": "(co; prohledat; vrátit; [pokud_nenalezeno]; [režim_shody]; [režim_vyhledávání])",
		"d": "Vyhledá požadovanou hodnotu v oblasti nebo poli a vrátí odpovídající položku z jiné oblasti nebo pole. Ve výchozím nastavení se vyžaduje přesná shoda.",
		"ad": "je hodnota, která se bude hledat.!je pole nebo oblast, která se bude prohledávat.!je pole nebo oblast, ze které se vrátí odpovídající hodnota.!je hodnota, která se vrátí v případě, že se shoda nenajde.!určuje, jakým způsobem se mají shodovat hodnota argumentu co a hodnoty v prohledávaném poli nebo oblasti.!určuje režim vyhledávání, který se má použít. Ve výchozím nastavení se použije vyhledávání od první hodnoty po poslední."
	},
	"CELL": {
		"a": "(informace; [odkaz])",
		"d": "Vrátí informace o formátování, umístění nebo obsahu buňky",
        "ad": "textová hodnota, která určuje typ informací o buňce, které mají být vráceny!adresa buňky, o které chcete získat informace"
	},
	"ERROR.TYPE": {
		"a": "(chyba)",
		"d": "Vrátí číslo odpovídající chybové hodnotě.",
		"ad": "je chybová hodnota, pro kterou chcete zjistit identifikační číslo. Může to být aktuální chybová hodnota nebo odkaz na buňku obsahující chybovou hodnotu."
	},
	"ISBLANK": {
		"a": "(hodnota)",
		"d": "Ověří, zda odkaz v argumentu Hodnota odkazuje na prázdnou buňku a vrátí hodnotu PRAVDA nebo NEPRAVDA.",
		"ad": "je testovaná buňka nebo název, který se vztahuje k testované buňce."
	},
	"ISERR": {
		"a": "(hodnota)",
		"d": "Ověří, jestli argument Hodnota představuje jinou chybu než #NENÍ_K_DISPOZICI, a vrátí hodnotu PRAVDA nebo NEPRAVDA.",
		"ad": "je hodnota, kterou chcete testovat. Argument Hodnota se může vztahovat k buňce, vzorci nebo názvu odkazujícímu se na buňku, vzorec nebo hodnotu."
	},
	"ISERROR": {
		"a": "(hodnota)",
		"d": "Ověří, jestli argument Hodnota představuje chybu, a vrátí hodnotu PRAVDA nebo NEPRAVDA.",
		"ad": "je hodnota, kterou chcete testovat. Argument Hodnota se může vztahovat k buňce, vzorci nebo názvu odkazujícímu se na buňku, vzorec nebo hodnotu."
	},
	"ISEVEN": {
		"a": "(číslo)",
		"d": "Vrátí logickou hodnotu PRAVDA, pokud je číslo sudé.",
		"ad": "je testovaná hodnota."
	},
	"ISFORMULA": {
		"a": "(odkaz)",
		"d": "Ověří, jestli odkaz odkazuje na buňku obsahující vzorec, a vrátí hodnotu PRAVDA nebo NEPRAVDA",
		"ad": "je odkaz na buňku, kterou chcete testovat. Odkaz může být odkaz na buňku, vzorec nebo název odkazující na buňku"
	},
	"ISLOGICAL": {
		"a": "(hodnota)",
		"d": "Ověří, zda argument Hodnota je logická hodnota (PRAVDA nebo NEPRAVDA) a vrátí hodnotu PRAVDA nebo NEPRAVDA.",
		"ad": "je hodnota, kterou chcete testovat. Argument Hodnota se může vztahovat k buňce, vzorci nebo názvu odkazujícímu na buňku, vzorec nebo hodnotu."
	},
	"ISNA": {
		"a": "(hodnota)",
		"d": "Ověří, zda je argument Hodnota chybová hodnota #NENÍ_K_DISPOZICI, a vrátí hodnotu PRAVDA nebo NEPRAVDA.",
		"ad": "je hodnota, kterou chcete testovat. Argument Hodnota se může vztahovat k buňce, vzorci nebo názvu odkazujícímu se na buňku, vzorec nebo hodnotu."
	},
	"ISNONTEXT": {
		"a": "(hodnota)",
		"d": "Ověří, zda argument Hodnota není text (prázdné buňky nejsou text) a vrátí hodnotu PRAVDA nebo NEPRAVDA.",
		"ad": "je hodnota, kterou chcete testovat. Může to být buňka, vzorec nebo název odkazující na buňku, vzorec nebo hodnotu."
	},
	"ISNUMBER": {
		"a": "(hodnota)",
		"d": "Ověří, zda je argument Hodnota číslo a vrátí hodnotu PRAVDA nebo NEPRAVDA.",
		"ad": "je hodnota, kterou chcete testovat. Argument Hodnota se může vztahovat k buňce, vzorci nebo názvu odkazujícímu na buňku, vzorec nebo hodnotu."
	},
	"ISODD": {
		"a": "(číslo)",
		"d": "Vrátí logickou hodnotu PRAVDA, pokud je číslo liché.",
		"ad": "je testovaná hodnota."
	},
	"ISREF": {
		"a": "(hodnota)",
		"d": "Ověří, zda je argument Hodnota odkaz a vrátí hodnotu PRAVDA nebo NEPRAVDA.",
		"ad": "je hodnota, kterou chcete testovat. Argument Hodnota se může vztahovat k buňce, vzorci nebo názvu odkazujícímu se na buňku, vzorec nebo hodnotu."
	},
	"ISTEXT": {
		"a": "(hodnota)",
		"d": "Ověří, zda je argument Hodnota text a vrátí hodnotu PRAVDA nebo NEPRAVDA.",
		"ad": "je hodnota, kterou chcete testovat. Argument Hodnota se může vztahovat k buňce, vzorci nebo názvu odkazujícímu na buňku, vzorec nebo hodnotu."
	},
	"N": {
		"a": "(hodnota)",
		"d": "Převede nečíselnou hodnotu na číslo, kalendářní data na pořadová čísla, hodnotu PRAVDA na číslo 1 a všechny ostatní výrazy na číslo 0 (nula).",
		"ad": "je hodnota, kterou chcete převést."
	},
	"NA": {
		"a": "()",
		"d": "Vrátí chybovou hodnotu #NENÍ_K_DISPOZICI (hodnota nedostupná).",
		"ad": ""
	},
	"SHEET": {
		"a": "([hodnota])",
		"d": "Vrátí číslo listu odkazovaného listu",
		"ad": "je název listu nebo odkaz, pro který chcete zjistit číslo listu. Pokud ho vynecháte, vrátí číslo listu obsahujícího funkci"
	},
	"SHEETS": {
		"a": "([odkaz])",
		"d": "Vrátí počet listů v odkazu",
		"ad": "je odkaz, pro který chcete zjistit počet listů, které obsahuje. Pokud ho vynecháte, vrátí počet listů v sešitu obsahujícím funkci"
	},
	"TYPE": {
		"a": "(hodnota)",
		"d": "Vrátí celé číslo představující datový typ hodnoty: číslo = 1, text = 2, logická hodnota = 4, chybová hodnota = 16, matice = 64, složený datový typ = 128.",
		"ad": "je libovolná hodnota."
	},
	"AND": {
		"a": "(logická1; [logická2]; ...)",
		"d": "Ověří, zda mají všechny argumenty hodnotu PRAVDA, a v takovém případě vrátí hodnotu PRAVDA.",
		"ad": "je 1 až 255 testovaných podmínek, které mohou mít hodnotu PRAVDA nebo NEPRAVDA. Mohou to být logické hodnoty, matice nebo odkazy."
	},
	"FALSE": {
		"a": "()",
		"d": "Vrátí logickou hodnotu NEPRAVDA.",
		"ad": ""
	},
	"IF": {
		"a": "(podmínka; [ano]; [ne])",
		"d": "Ověří, zda je podmínka splněna, a vrátí jednu hodnotu, jestliže je výsledkem hodnota PRAVDA, a jinou hodnotu, pokud je výsledkem hodnota NEPRAVDA.",
		"ad": "je libovolná hodnota nebo výraz, kterému může být přiřazena logická hodnota PRAVDA nebo NEPRAVDA.!je hodnota vrácená, je-li hodnota argumentu Podmínka PRAVDA. Jestliže ji nezadáte, bude vrácena hodnota PRAVDA. Můžete vnořit až sedm funkcí KDYŽ.!je hodnota vrácená, je-li hodnota argumentu Podmínka NEPRAVDA. Jestliže ji nezadáte, bude vrácena hodnota NEPRAVDA."
	},
	"IFS": {
		"a": "(logický_test; podmínka; ...)",
		"d": "Zkontroluje, jestli je splněná jedna nebo víc podmínek, a vrátí hodnotu odpovídající první pravdivé podmínce.",
		"ad": "je libovolná hodnota nebo výraz, který může být vyhodnocený jako PRAVDA nebo NEPRAVDA.!je hodnota vrácená, pokud argument logický_test je PRAVDA."
	},
	"IFERROR": {
		"a": "(hodnota; hodnota_v_případě_chyby)",
		"d": "Pokud je výraz chybný, vrátí hodnotu hodnota_v_případě_chyby. V opačném případě vrátí vlastní hodnotu výrazu.",
		"ad": "je libovolná hodnota, výraz či odkaz.!je libovolná hodnota, výraz či odkaz."
	},
	"IFNA": {
		"a": "(hodnota; hodnota_pokud_na)",
		"d": "Vrátí zadanou hodnotu, pokud je výsledkem výrazu hodnota #N/A, v opačném případě vrátí výsledek výrazu",
		"ad": "je jakákoli hodnota nebo výraz nebo odkaz!je jakákoli hodnota nebo výraz nebo odkaz"
	},
	"NOT": {
		"a": "(loghod)",
		"d": "Změní hodnotu NEPRAVDA na PRAVDA nebo naopak.",
		"ad": "je hodnota nebo výraz, který může být PRAVDA nebo NEPRAVDA."
	},
	"OR": {
		"a": "(logická1; [logická2]; ...)",
		"d": "Ověří, zda je nejméně jeden argument roven hodnotě PRAVDA, a vrátí hodnotu PRAVDA nebo NEPRAVDA. Vrátí hodnotu NEPRAVDA pouze v případě, že všechny argumenty jsou rovny hodnotě NEPRAVDA.",
		"ad": "je 1 až 255 podmínek, které chcete testovat a které mohou mít hodnotu PRAVDA nebo NEPRAVDA."
	},
	"SWITCH": {
		"a": "(výraz; hodnota1; výsledek1; [výchozí_nebo_hodnota2]; [výsledek2]; ...)",
		"d": "Vyhodnocuje výraz oproti seznamu hodnot a vrací výsledek odpovídající první shodné hodnotě. Pokud se neshoduje žádná hodnota, vrátí volitelnou výchozí hodnotu.",
		"ad": "je vyhodnocovaný výraz.!je hodnota porovnávaná s výrazem.!je výsledek, který se vrátí v případě, že se příslušná hodnota shoduje s výrazem."
	},
	"TRUE": {
		"a": "()",
		"d": "Vrátí logickou hodnotu PRAVDA.",
		"ad": ""
	},
	"XOR": {
		"a": "(logická1; [logická2]; ...)",
		"d": "Vrátí logickou hodnotu Výhradní nebo všech argumentů",
		"ad": "je 1 až 254 podmínek, které chcete testovat a které mohou mít hodnotu PRAVDA nebo NEPRAVDA a mohou být logické hodnoty, matice nebo odkazy"
	},
	"TEXTBEFORE": {
		"a": "(text, delimiter, [instance_num], [match_mode], [match_end], [if_not_found])",
		"d": "Vrátí text, který je před oddělovači znaků.",
		"ad": "Text, který chcete vyhledat jako oddělovač.!Znak nebo řetězec, který se má použít jako oddělovač.!Požadovaný výskyt oddělovače. Výchozí hodnota je 1. Záporné číslo hledá od konce.!Vyhledá shodu oddělovače v textu. Ve výchozím nastavení je provedena shoda s rozlišováním malých a velkých písmen.!Jestli se má oddělovač shodovat s koncem textu. Ve výchozím nastavení se neshodují.!Vráceno, pokud nebyla nalezena žádná shoda. Ve výchozím nastavení je vrácen #N/A."
	},
	"TEXTAFTER": {
		"a": "(text, delimiter, [instance_num], [match_mode], [match_end], [if_not_found])",
		"d": "Vrátí text, který je po oddělovači znaků.",
		"ad": "Text, který chcete vyhledat jako oddělovač.!Znak nebo řetězec, který se má použít jako oddělovač.!Požadovaný výskyt oddělovače. Výchozí hodnota je 1. Záporné číslo hledá od konce.!Vyhledá shodu oddělovače v textu. Ve výchozím nastavení je provedena shoda s rozlišováním malých a velkých písmen.!Jestli se má oddělovač shodovat s koncem textu. Ve výchozím nastavení se neshodují.!Vráceno, pokud nebyla nalezena žádná shoda. Ve výchozím nastavení je vrácen #N/A."
	},
	"TEXTSPLIT": {
		"a": "(text, col_delimiter, [row_delimiter], [ignore_empty], [match_mode], [pad_with])",
		"d": "Rozdělí text na řádky nebo sloupce pomocí oddělovačů.",
		"ad": "Text, který se má rozdělit!Znak nebo řetězec, podle kterého se mají rozdělit sloupce.!Znak nebo řetězec, podle kterého se mají rozdělit řádky.!Jestli se mají ignorovat prázdné buňky. Výchozí hodnota je NEPRAVDA.!Vyhledá shodu oddělovače v textu. Ve výchozím nastavení je provedena shoda s rozlišováním malých a velkých písmen.!Hodnota, která se má použít pro odsazení. Ve výchozím nastavení se používá #N/A."
	},
	"WRAPROWS": {
		"a": "(vector, wrap_count, [pad_with])",
		"d": "Zalomí vektor řádku nebo sloupce po zadaném počtu hodnot.",
		"ad": " Vektor nebo odkaz, který se má zalomit.!Maximální počet hodnot na řádek.!Hodnota, se kterou se má pole zapisovat. Výchozí hodnota je #N/A."
	},
	"VSTACK": {
		"a": "(array1, [array2], ...)",
		"d": " Svisle skládá pole do jednoho pole.",
		"ad": "Pole nebo odkaz, které se mají skládat"
	},
	"HSTACK": {
		"a": "(array1, [array2], ...)",
		"d": " Vodorovně skládá pole do jednoho pole.",
		"ad": "Pole nebo odkaz, které se mají skládat"
	},
	"CHOOSEROWS": {
		"a": "(array, row_num1, [row_num2], ...)",
		"d": "Vrátí řádky z pole nebo odkazu.",
		"ad": "Pole nebo odkaz obsahující řádky, které se mají vrátit.!Číslo řádku, který se má vrátit."
	},
	"CHOOSECOLS": {
		"a": "(array, col_num1, [col_num2], ...)",
		"d": "Vrátí sloupce z pole nebo odkazu.",
		"ad": "Pole nebo odkaz obsahující sloupce, které se mají vrátit.!Číslo sloupce, který se má vrátit"
	},
	"TOCOL": {
		"a": "(array, [ignore], [scan_by_column])",
		"d": "Vrátí pole jako jeden sloupec.",
		"ad": "Pole nebo odkaz, které se mají vrátit jako sloupec.!Určuje, jestli se mají ignorovat určité typy hodnot. Ve výchozím nastavení nejsou ignorovány žádné hodnoty.!Prohledá pole podle sloupce. Ve výchozím nastavení se pole prohledá podle řádku."
	},
	"TOROW": {
		"a": "(pole, [ignorovat], [prohledávat_podle_sloupce])",
		"d": "Vrátí pole jako jeden řádek. ",
		"ad": "Pole nebo odkaz, které se mají vrátit jako řádek.!Určuje, jestli se mají ignorovat určité typy hodnot. Ve výchozím nastavení nejsou ignorovány žádné hodnoty.! Prohledá pole podle sloupce. Ve výchozím nastavení se pole prohledá podle řádku."
	},
	"WRAPCOLS": {
		"a": "(vektor, wrap_count, [pad_with])",
		"d": " Zabalí vektor řádku nebo sloupce po zadaném počtu hodnot.",
		"ad": " Vektor nebo odkaz, který se má zalomit.! Maximální počet hodnot na sloupec.! Hodnota, se kterou se má pole zapisovat. Výchozí hodnota je #N/A."
	},
	"TAKE": {
		"a": "(array, rows, [columns])",
		"d": "Vrátí řádky nebo sloupce ze začátku nebo konce pole.",
		"ad": "Pole, ze kterého chcete vzít řádky nebo sloupce.!Počet řádků, které se mají vzít. Záporná hodnota vezme od konce pole.!Počet sloupců, které se mají přemístit. Záporná hodnota přemístí od konce pole."
	},
	"DROP": {
		"a": "(array, rows, [columns])",
		"d": "Přemístí řádky nebo sloupce ze začátku nebo konce pole.",
		"ad": "Pole, ze kterého chcete přemístit řádky nebo sloupce.!Počet řádků, které se mají přemístit. Záporná hodnota přemístí od konce pole.!Počet sloupců, které se mají přemístit. Záporná hodnota přemístí od konce pole."
	},
	"SEQUENCE": {
		"a": "(řádky, [sloupce], [začátek], [krok])",
		"d": "Vrátí aritmetickou posloupnost.",
		"ad": "je počet řádků, které se mají vrátit.!je počet sloupců, které se mají vrátit.!je první číslo v posloupnosti.!je hodnota diference každé další hodnoty v posloupnosti."
	},
	"EXPAND": {
		"a": "(matice, řádky, [sloupce], [výplň])",
		"d": "Rozbalí pole na zadané dimenze.",
		"ad": "Pole, které se má rozbalit.!Počet řádků v rozbaleném poli Pokud chybí, řádky nebudou rozbaleny.!Počet sloupců v rozbaleném poli Pokud chybí, sloupce nebudou rozbaleny.!Hodnota, se kterou se má pole zapisovat Výchozí hodnota je #N/A."
	},
	"XMATCH": {
		"a": "(hodnota_vyhledávání, pole_vyhledávání, [režim_shody], [režim_vyhledávání])",
		"d": "Vrátí relativní polohu prvku pole. Ve výchozím nastavení se vyžaduje přesná shoda.",
		"ad": "je hodnota, která se bude hledat.!je pole nebo oblast, která se bude prohledávat.!určuje, jakým způsobem se mají shodovat argumenty hodnota_vyhledávání a vyhledávácí_pole.!určuje režim vyhledávání, který se má použít. Ve výchozím nastavení se použije vyhledávání od první hodnoty po poslední."
	},
	"FILTER": {
		"a": "(matice, zahrnuje, [pokud_prázdné])",
		"d": "Filtruje oblast nebo matici.",
		"ad": "oblast nebo matice, které se mají filtrovat!matice logických hodnot, kde PRAVDA představuje řádek nebo sloupec, který chcete zachovat!hodnota vrácená, pokud nejsou zachovány žádné položky"
	},
	"ARRAYTOTEXT": {
		"a": "(pole, [formát])",
		"d": "Vrátí textové vyjádření pole.",
		"ad": "pole, které má být vyjádřeno v textové podobě!formát textu"
	},
	"SORT": {
		"a": "(pole, [index_řazení], [pořadí_řazení], [podle_sloupce])",
		"d": "Seřadí oblast nebo pole.",
		"ad": "Oblast nebo pole, které se mají seřadit!Číslo určující řádek nebo sloupec, podle kterého se mají hodnoty seřadit!Číslo určující požadované pořadí řazení; 1 pro vzestupné řazení (výchozí), -1 pro sestupné řazení!Logická hodnota určující požadovaný směr řazení: FALSE znamená řazení podle řádku (výchozí), TRUE znamená řazení podle sloupce."
	},
	"SORTBY": {
		"a": "(matice, podle_matice, [pořadí_řazení], ...)",
		"d": "Seřadí oblast nebo matici na základě hodnot v odpovídající oblasti nebo matici.",
		"ad": "je oblast nebo matice, která se bude řadit.!je oblast nebo matice, podle které se hodnoty budou řadit.!je hodnota určující požadované pořadí řazení: 1 pro řazení vzestupně (výchozí), -1 pro řazení sestupně."
	},
	"GETPIVOTDATA": {
		"a": "(datové_pole; kontingenční_tabulka; [pole]; [položka]; ...)",
		"d": "Extrahuje data uložená v kontingenční tabulce.",
		"ad": "je název datového pole, ze kterého mají být data extrahována.!je odkaz na buňku nebo oblast buněk v kontingenční tabulce obsahující data, která chcete načíst.!pole, na které chcete odkazovat.!položka pole, na níž chcete odkazovat."
	},
	"IMPORTRANGE": {
		"a": "(url_tabulky; řetězec_rozsahu)",
		"d": "Importuje rozsah buněk ze zadané tabulky.",
		"ad": "adresa URL tabulky, ze které budou importována data!rozsah, který se má importovat"
	}
}