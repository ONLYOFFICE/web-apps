{
	"DATE": {
		"a": "(gads; mēnesis; diena)",
		"d": "Atgriež skaitli, kas apzīmē datumu datuma/laika kodā",
		"ad": "ir skaitlis diapazonā no 1900 vai 1904 (atkarībā no darbgrāmatas datumu sistēmas) līdz 9999!ir skaitlis no 1 līdz 12, kas apzīmē gada mēnesi!ir skaitlis no 1 līdz 31, kas apzīmē mēneša dienu"
	},
	"DATEDIF": {
		"a": "(sākuma_datums; beigu_datums; mērvienība)",
		"d": "Aprēķina dienu, mēnešu vai gadu skaitu starp diviem datumiem",
		"ad": "Datums, kas apzīmē dotā perioda pirmo jeb sākuma datumu!Datums, kas apzīmē perioda pēdējo jeb beigu datumu!Informācijas veids, kas ir jāatgriež"
	},
	"DATEVALUE": {
		"a": "(datums_teksts)",
		"d": "Pārveido datumu teksta formātā par skaitli, kas apzīmē datumu datuma/laika kodā",
		"ad": "ir teksts, kas apzīmē datumu programmas Spreadsheet Editor datumu formātā - no 01.01.1900. (atkarībā no darbgrāmatas datumu sistēmas) līdz 31.12.9999."
	},
	"DAY": {
		"a": "(seriālais_skaitlis)",
		"d": "Atgriež mēneša dienu - skaitli no 1 līdz 31.",
		"ad": "ir skaitlis datuma/laika kodā, ko lieto programma Spreadsheet Editor"
	},
	"DAYS": {
		"a": "(beigu_datums; sākuma_datums)",
		"d": "Atgriež dienu skaitu starp diviem datumiem.",
		"ad": "sākuma_datums un beigu_datums ir divi datumi, starp kuriem jāuzzina dienu skaits!sākuma_datums un beigu_datums ir divi datumi, starp kuriem jāuzzina dienu skaits"
	},
	"DAYS360": {
		"a": "(sākuma_datums; beigu_datums; [metode])",
		"d": "Atgriež dienu skaitu starp diviem datumiem, pieņemot, ka gadā ir 360 dienas (divpadsmit 30 dienu mēneši)",
		"ad": "sākuma_datums un beigu_datums ir divi datumi, starp kuriem esošais dienu skaits ir jāuzzina!sākuma_datums un beigu_datums ir divi datumi, starp kuriem esošais dienu skaits ir jāuzzina!ir loģiskā vērtība, kas norāda aprēķina metodi: ASV (NASD) = FALSE vai izlaists; Eiropas = TRUE."
	},
	"EDATE": {
		"a": "(sākuma_datums; mēneši)",
		"d": "Atgriež datuma sērijas numuru, kas ir norādītais mēnešu skaits pirms vai pēc sākuma datuma",
		"ad": "ir datuma sērijas numurs, kas ataino sākuma datumu!ir mēnešu skaits pirms vai pēc sākuma_datuma"
	},
	"EOMONTH": {
		"a": "(sākuma_datums; mēneši)",
		"d": "Atgriež tās mēneša pēdējās dienas sērijas numuru, kas ir pirms vai pēc noteikta mēnešu skaita",
		"ad": "ir datuma sērijas numurs, kas ataino sākuma datumu!ir mēnešu skaits pirms vai pēc sākuma_datuma"
	},
	"HOUR": {
		"a": "(seriālais_skaitlis)",
		"d": "Atgriež stundu kā skaitli no 0 (12:00 A.M.) līdz 23 (11:00 P.M.).",
		"ad": "ir skaitlis datuma/laika kodā, ko lieto programma Spreadsheet Editor, vai teksts laika formātā, piemēram, 16:48:00"
	},
	"ISOWEEKNUM": {
		"a": "(datums)",
		"d": "Atgriež gada ISO nedēļas numuru noteiktam datumam",
		"ad": "ir datuma/laika kods, ko Spreadsheet Editor izmanto datuma un laika aprēķināšanai"
	},
	"MINUTE": {
		"a": "(seriālais_skaitlis)",
		"d": "Atgriež minūti kā skaitli no 0 līdz 59.",
		"ad": "ir skaitlis datuma/laika kodā, ko lieto programma Spreadsheet Editor, vai teksts laika formātā, piemēram, 16:48:00"
	},
	"MONTH": {
		"a": "(seriālais_skaitlis)",
		"d": "Atgriež mēnesi - skaitli no 1 (janvāris) līdz 12 (decembris).",
		"ad": "ir skaitlis datuma/laika kodā, ko lieto programma Spreadsheet Editor"
	},
	"NETWORKDAYS": {
		"a": "(sākuma_datums; beigu_datums; [brīvdienas])",
		"d": "Atgriež pilnu darbdienu skaitu starp diviem datumiem",
		"ad": "ir datuma sērijas numurs, kas ataino sākuma datumu!ir datuma sērijas numurs, kas ataino beigu datumu!ir neobligāta viena vai vairāku datuma sēriju numuru kopa, lai neiekļautu darba kalendārā, piemēram, valsts/reģiona un federālās svētku dienas un svētku dienas ar mainīgiem datumiem"
	},
	"NETWORKDAYS.INTL": {
		"a": "(sākuma_datums; beigu_datums; [nedēļas_nogale]; [brīvdienas])",
		"d": "Atgriež pilnu darbdienu skaitu starp diviem datumiem ar pielāgotu nedēļas nogales parametru",
		"ad": "ir datuma sērijas numurs, kas ataino sākuma datumu!ir datuma sērijas numurs, kas ataino beigu datumu!ir skaitlis vai virkne, kas norāda, kad nedēļas nogales iestājas!ir neobligāta viena vai vairāku datuma sēriju numuru kopa, lai darba kalendārā neiekļautu, piemēram, valsts/reģiona svētku dienas un svētku dienas ar mainīgiem datumiem"
	},
	"NOW": {
		"a": "()",
		"d": "Atgriež šīsdienas datumu un laiku, kas formatēts kā datums un laiks.",
		"ad": ""
	},
	"SECOND": {
		"a": "(seriālais_skaitlis)",
		"d": "Atgriež sekundi kā skaitli no 0 līdz 59.",
		"ad": "ir skaitlis datuma/laika kodā, ko lieto programma Spreadsheet Editor, vai teksts laika formātā, piemēram, 16:48:23"
	},
	"TIME": {
		"a": "(stunda; minūte; sekunde)",
		"d": "Konvertē stundas, minūtes un sekundes, kas norādītas kā skaitļi, par seriālo skaitli, kas formatēts laika formātā",
		"ad": "ir skaitlis no 0 līdz 23, kas apzīmē stundu!ir skaitlis no 0 līdz 59, kas apzīmē minūti!ir skaitlis no 0 līdz 59, kas apzīmē sekundi"
	},
	"TIMEVALUE": {
		"a": "(laiks)",
		"d": "Konvertē teksta laiku seriālā skaitlī, kas apzīmē laiku, - skaitlī no 0 (00:00:00) līdz 0.999988426 (23:59:59). Formatējiet skaitli laika formātā pēc formulas ievadīšanas",
		"ad": "ir teksta virkne, kas piedāvā laiku jebkurā no Spreadsheet Editor laika formātiem (datuma informācija tekstā tiek ignorēta)"
	},
	"TODAY": {
		"a": "()",
		"d": "Atgriež pašreizējo datumu, kas ir formatēts kā datums.",
		"ad": ""
	},
	"WEEKDAY": {
		"a": "(seriālais_skaitlis; [atgriešanas_tips])",
		"d": "Atgriež skaitli no 1 līdz 7, kas apzīmē nedēļas dienu.",
		"ad": "ir skaitlis, kas apzīmē datumu!ir skaitlis: ja svētdiena=1 un sestdiena=7, izmantojiet 1; ja pirmdiena=1 un svētdiena=7, izmantojiet 2; ja pirmdiena=0 un svētdiena=6, izmantojiet 3"
	},
	"WEEKNUM": {
		"a": "(sērijas_numurs; [atgriešanas_tips])",
		"d": "Atgriež gada nedēļas numuru",
		"ad": "ir datuma laika kods, ko lieto Spreadsheet Editor datuma un laika aprēķinam!ir skaitlis (1 vai 2), kas nosaka atgriešanas vērtības tipu"
	},
	"WORKDAY": {
		"a": "(sākuma_datums; dienas; [brīvdienas])",
		"d": "Atgriež tā datuma sērijas numuru, kas ir pirms vai pēc noteiktā darbdienas numura",
		"ad": "ir datuma sērijas numurs, kas ataino sākuma datumu!ir to dienu skaits, kas nav brīvdienas un svētku dienas, pirms vai pēc sākuma_datuma!ir viena vai vairāku datumu sērijas numuru neobligāta kārtība, lai neiekļautu darba kalendārā, piemēram, valsts/reģiona un federālās svētku dienas un svētku dienas ar mainīgiem datumiem"
	},
	"WORKDAY.INTL": {
		"a": "(sākuma_datums; dienas; [nedēļas_nogale]; [brīvdienas])",
		"d": "Atgriež tā datuma sērijas numuru, kas ir pirms vai pēc noteiktā darbdienas numura ar pielāgotiem nedēļas nogales parametriem",
		"ad": "ir datuma sērijas numurs, kas ataino sākuma datumu!ir to dienu skaits, kas nav ne nedēļas nogales, ne svētku dienas, pirms vai pēc sākuma_datuma!ir skaitlis vai virkne, kas norāda, kad ir nedēļas nogales!ir vienas vai vairāku datumu sērijas numuru neobligāts masīvs, lai darba kalendārā neiekļautu, piemēram, valsts/reģiona svētku dienas un svētku dienas ar mainīgiem datumiem"
	},
	"YEAR": {
		"a": "(seriālais_skaitlis)",
		"d": "Atgriež gadu - veselu skaitli robežās no 1900 līdz 9999.",
		"ad": "ir skaitlis datuma/laika kodā, ko lieto programma Spreadsheet Editor"
	},
	"YEARFRAC": {
		"a": "(sākuma_datums; beigu_datums; [pamats])",
		"d": "Atgriež gada daļu, kas ataino veselu dienu skaitu laika posmā starp sākuma_datumu un beigu_datumu",
		"ad": "ir datuma sērijas numurs, kas ataino sākuma datumu!ir datuma sērijas numurs, kas ataino beigu datumu!ir lietojamais dienu skaitīšanas pamats"
	},
	"BESSELI": {
		"a": "(x; n)",
		"d": "Atgriež modificēto Beseļa funkciju In(x)",
		"ad": "ir vērtība, kurā jāvērtē funkcija!ir Beseļa funkcijas secība"
	},
	"BESSELJ": {
		"a": "(x; n)",
		"d": "Atgriež Beseļa funkciju Jn(x)",
		"ad": "ir vērtība, kurā jāvērtē funkcija!ir Beseļa funkcijas secība"
	},
	"BESSELK": {
		"a": "(x; n)",
		"d": "Atgriež modificēto Beseļa funkciju Kn(x)",
		"ad": "ir vērtība, kurā jāvērtē funkcija!ir funkcijas secība"
	},
	"BESSELY": {
		"a": "(x; n)",
		"d": "Atgriež Beseļa funkciju Yn(x)",
		"ad": "ir vērtība, kurā jāvērtē funkcija!ir funkcijas secība"
	},
	"BIN2DEC": {
		"a": "(skaitlis)",
		"d": "Pārvērš bināru skaitli decimālā",
		"ad": "ir binārs skaitlis, kuru vēlaties pārvērst"
	},
	"BIN2HEX": {
		"a": "(skaitlis; [vietas])",
		"d": "Pārvērš bināru skaitli heksadecimālā",
		"ad": "ir binārs skaitlis, kuru vēlaties pārvērst!ir lietojamo rakstzīmju skaits"
	},
	"BIN2OCT": {
		"a": "(skaitlis; [vietas])",
		"d": "Pārvērš bināru skaitli oktālā",
		"ad": "ir binārs skaitlis, kuru vēlaties pārvērst!ir lietojamo rakstzīmju skaits"
	},
	"BITAND": {
		"a": "(skaitlis1; skaitlis2)",
		"d": "Bitu veidā atgriež divu skaitļu vērtību \"Un\"",
		"ad": "ir tā binārā skaitļa decimāls atveidojums, kas jānovērtē!ir tā binārā skaitļa decimāls atveidojums, kas jānovērtē"
	},
	"BITLSHIFT": {
		"a": "(skaitlis; pārvietoš_apjoms)",
		"d": "Atgriež skaitli, kas pārvietots pa kreisi pa pārvietošanas_apjoma bitiem",
		"ad": "ir tā binārā skaitļa decimāls atveidojums, kas jānovērtē!ir bitu skaits, ar kādu skaitlis jāpārvieto pa kreisi"
	},
	"BITOR": {
		"a": "(skaitlis1; skaitlis2)",
		"d": "Bitu veidā atgriež divu skaitļu vērtību \"Vai\"",
		"ad": "ir tā binārā skaitļa decimāls atveidojums, kas jānovērtē!ir tā binārā skaitļa decimāls atveidojums, kas jānovērtē"
	},
	"BITRSHIFT": {
		"a": "(skaitlis; pārvietoš_apjoms)",
		"d": "Atgriež skaitli, kas pārvietots pa labi pa pārvietošanas_daudzuma bitiem",
		"ad": "ir tā binārā skaitļa decimāls atveidojums, kas jānovērtē!ir bitu skaits, ar kādu skaitlis jāpārvieto pa labi"
	},
	"BITXOR": {
		"a": "(skaitlis1; skaitlis2)",
		"d": "Bitu veidā atgriež divu skaitļu vērtību \"Izņemot/Vai\"",
		"ad": "ir tā binārā skaitļa decimāls atveidojums, kas jānovērtē!ir tā binārā skaitļa decimāls atveidojums, kas jānovērtē"
	},
	"COMPLEX": {
		"a": "(reāls_skaitlis; i_skaitlis; [sufikss])",
		"d": "Konvertē reālus un iedomātus koeficientus saliktā skaitlī",
		"ad": "ir salikta skaitļa reāls koeficients!ir salikta skaitļa iedomāts koeficients!ir salikta skaitļa iedomātā komponenta sufikss"
	},
	"CONVERT": {
		"a": "(skaitlis; no_vienības; līdz_vienībai)",
		"d": "Konvertē skaitli no vienas mērvienību sistēmas citā",
		"ad": "ir vērtība, kas jākonvertē no_vienības!ir skaitļa vienības!ir rezultāta vienības"
	},
	"DEC2BIN": {
		"a": "(skaitlis; [vietas])",
		"d": "Pārvērš decimālskaitli binārā",
		"ad": "ir vesels decimālskaitlis, kuru vēlaties pārvērst!ir lietojamo rakstzīmju skaits"
	},
	"DEC2HEX": {
		"a": "(skaitlis; [vietas])",
		"d": "Pārvērš decimālskaitli heksadecimālā",
		"ad": "ir vesels decimālskaitlis, kuru vēlaties pārvērst!ir lietojamo rakstzīmju skaits"
	},
	"DEC2OCT": {
		"a": "(skaitlis; [vietas])",
		"d": "Pārvērš decimālskaitli oktālā",
		"ad": "ir vesels decimālskaitlis, kuru vēlaties pārvērst!ir lietojamo rakstzīmju skaits"
	},
	"DELTA": {
		"a": "(skaitlis1; [skaitlis2])",
		"d": "Pārbauda, vai divi skaitļi ir vienādi",
		"ad": "ir pirmais skaitlis!ir otrais skaitlis"
	},
	"ERF": {
		"a": "(apakšējā_robeža; [augšējā_robeža])",
		"d": "Atgriež kļūdas funkciju",
		"ad": "ir apakšējā robeža ERF integrēšanai!ir augšējā robeža ERF integrēšanai"
	},
	"ERF.PRECISE": {
		"a": "(X)",
		"d": "Atgriež kļūdas funkciju",
		"ad": "ir ERF.PRECISE integrēšanas apakšējā robeža"
	},
	"ERFC": {
		"a": "(x)",
		"d": "Atgriež papildu kļūdas funkciju",
		"ad": "ir apakšējā robeža ERF integrēšanai"
	},
	"ERFC.PRECISE": {
		"a": "(x)",
		"d": "Atgriež papildu kļūdas funkciju",
		"ad": "ir ERFC.PRECISE integrēšanas apakšējā robeža"
	},
	"GESTEP": {
		"a": "(skaitlis; [solis])",
		"d": "Pārbauda, vai skaitlis ir lielāks par sliekšņa vērtību",
		"ad": "ir vērtība, kura jāpārbauda pret soli!ir sliekšņa vērtība"
	},
	"HEX2BIN": {
		"a": "(skaitlis; [vietas])",
		"d": "Pārvērš heksadecimālu skaitli binārā",
		"ad": "ir heksadecimāls skaitlis, kuru vēlaties pārvērst!ir lietojamo rakstzīmju skaits"
	},
	"HEX2DEC": {
		"a": "(skaitlis)",
		"d": "Pārvērš heksadecimālu skaitli decimālā",
		"ad": "ir heksadecimāls skaitlis, kuru vēlaties pārvērst"
	},
	"HEX2OCT": {
		"a": "(skaitlis; [vietas])",
		"d": "Pārvērš heksadecimālu skaitli oktālā",
		"ad": "ir heksadecimāls skaitlis, kuru vēlaties pārvērst!ir lietojamo rakstzīmju skaits"
	},
	"IMABS": {
		"a": "(iskaitlis)",
		"d": "Atgriež salikta skaitļa absolūto vērtību (moduli)",
		"ad": "ir salikts skaitlis, kuram iegūstama absolūtā vērtība"
	},
	"IMAGINARY": {
		"a": "(iskaitlis)",
		"d": "Atgriež salikta skaitļa iedomāto koeficientu",
		"ad": "ir salikts skaitlis, kam iegūstams iedomātais koeficients"
	},
	"IMARGUMENT": {
		"a": "(iskaitlis)",
		"d": "Atgriež argumentu q, leņķi, kas izteikts radiānos",
		"ad": "ir salikts skaitlis, kam iegūstams arguments"
	},
	"IMCONJUGATE": {
		"a": "(iskaitlis)",
		"d": "Atgriež salikta skaitļa saliktu konjugātu",
		"ad": "ir salikts skaitlis, kam iegūstams konjugāts"
	},
	"IMCOS": {
		"a": "(iskaitlis)",
		"d": "Atgriež salikta skaitļa kosinusu",
		"ad": "ir salikts skaitlis, kuram jāiegūst kosinuss"
	},
	"IMCOSH": {
		"a": "(skaitlis)",
		"d": "Atgriež salikta skaitļa hiperbolisko kosinusu",
		"ad": "ir salikts skaitlis, par kuru jāiegūst hiperboliskais kosinuss"
	},
	"IMCOT": {
		"a": "(skaitlis)",
		"d": "Atgriež saliktā skaitļa kotangensu",
		"ad": "ir saliktais skaitlis, kam aprēķināms kotangenss"
	},
	"IMCSC": {
		"a": "(skaitlis)",
		"d": "Atgriež saliktā skaitļa kosekansu",
		"ad": "ir saliktais skaitlis, kam aprēķināms kosekanss"
	},
	"IMCSCH": {
		"a": "(skaitlis)",
		"d": "Atgriež saliktā skaitļa hiperbolisko kosekansu",
		"ad": "ir saliktais skaitlis, kam aprēķināms hiperboliskais kosekanss"
	},
	"IMDIV": {
		"a": "(iskaitlis1; iskaitlis2)",
		"d": "Atgriež divu saliktu skaitļu dalījumu",
		"ad": "ir salikts skaitītājs vai dalāmais!ir salikts saucējs vai dalītājs"
	},
	"IMEXP": {
		"a": "(iskaitlis)",
		"d": "Atgriež salikta skaitļa eksponentu",
		"ad": "ir salikts skaitlis, kuram jāiegūst eksponents"
	},
	"IMLN": {
		"a": "(iskaitlis)",
		"d": "Atgriež salikta skaitļa naturālo logaritmu",
		"ad": "ir salikts skaitlis, kam iegūstams naturālais logaritms"
	},
	"IMLOG10": {
		"a": "(iskaitlis)",
		"d": "Atgriež salikta skaitļa bāzes 10 logaritmu",
		"ad": "ir salikts skaitlis, kam iegūstams vienkāršais logaritms"
	},
	"IMLOG2": {
		"a": "(iskaitlis)",
		"d": "Atgriež salikta skaitļa bāzes 2 logaritmu",
		"ad": "ir salikts skaitlis, kam iegūstams bāzes 2 logaritms"
	},
	"IMPOWER": {
		"a": "(iskaitlis; skaitlis)",
		"d": "Atgriež saliktu skaitli, kas kāpināts veselā pakāpē",
		"ad": "ir salikts skaitlis, kuru vēlaties kāpināt pakāpē!ir pakāpe, kurā vēlaties kāpināt saliktu skaitli"
	},
	"IMPRODUCT": {
		"a": "(iskaitlis1; [iskaitlis2]; ...)",
		"d": "Atgriež produktam saliktus skaitļus no 1 līdz 255",
		"ad": "Iskaitlis1, Iskaitlis2,... reizināšanai ir saliktie skaitļi no 1 līdz 255."
	},
	"IMREAL": {
		"a": "(iskaitlis)",
		"d": "Atgriež salikta skaitļa reālo koeficientu",
		"ad": "ir salikts skaitlis, kam iegūstams reālais koeficients"
	},
	"IMSEC": {
		"a": "(skaitlis)",
		"d": "Atgriež saliktā skaitļa sekanti",
		"ad": "ir saliktais skaitlis, kam aprēķināma sekante"
	},
	"IMSECH": {
		"a": "(skaitlis)",
		"d": "Atgriež saliktā skaitļa hiperbolisko sekanti",
		"ad": "ir saliktais skaitlis, kam aprēķināma hiperboliskā sekante"
	},
	"IMSIN": {
		"a": "(iskaitlis)",
		"d": "Atgriež salikta skaitļa sinusu",
		"ad": "ir salikts skaitlis, kam iegūstams sinuss"
	},
	"IMSINH": {
		"a": "(skaitlis)",
		"d": "Atgriež salikta skaitļa hiperbolisko sinusu",
		"ad": "ir salikts skaitlis, par kuru jāiegūst hiperboliskais sinuss"
	},
	"IMSQRT": {
		"a": "(skaitlis)",
		"d": "Atgriež salikta skaitļa kvadrātsakni",
		"ad": "ir salikts skaitlis, kuram iegūstama kvadrātsakne"
	},
	"IMSUB": {
		"a": "(iskaitlis1; iskaitlis2)",
		"d": "Atgriež divu saliktu skaitļu starpību",
		"ad": "ir salikts skaitlis, no kura jāatņem iskaitlis2!ir salikts skaitlis, kurš jāatņem no iskaitļa1"
	},
	"IMSUM": {
		"a": "(iskaitlis1; [iskaitlis2]; ...)",
		"d": "Atgriež salikta skaitļa summu",
		"ad": "saskaitīšanai ir saliktie skaitļi no 1 līdz 255"
	},
	"IMTAN": {
		"a": "(skaitlis)",
		"d": "Atgriež saliktā skaitļa tangensu",
		"ad": "ir saliktais skaitlis, kam aprēķināms tangenss"
	},
	"OCT2BIN": {
		"a": "(skaitlis; [vietas])",
		"d": "Pārvērš oktālu skaitli binārā",
		"ad": "ir oktāls skaitlis, kuru vēlaties pārvērst!ir lietojamo rakstzīmju skaits"
	},
	"OCT2DEC": {
		"a": "(skaitlis)",
		"d": "Pārvērš oktālu skaitli decimālā",
		"ad": "ir oktāls skaitlis, kuru vēlaties pārvērst"
	},
	"OCT2HEX": {
		"a": "(skaitlis; [vietas])",
		"d": "Pārvērš oktālu skaitli heksadecimālā",
		"ad": "ir oktāls skaitlis, kuru vēlaties pārvērst!ir lietojamo rakstzīmju skaits"
	},
	"DAVERAGE": {
		"a": "(datu_bāze; lauks; kritēriji)",
		"d": "Aprēķina vidējo vērtību no vērtībām norādītajiem nosacījumiem atbilstošas datu bāzes ierakstu laukā (kolonnā)",
		"ad": "ir to šūnu diapazons, kas veido sarakstu jeb datu bāzi. Datu bāze ir savstarpēji saistītu datu saraksts!ir kolonnas etiķete pēdiņās vai skaitlis, kas apzīmē kolonnas pozīciju sarakstā!ir šūnu diapazons, kurā atrodas norādītie nosacījumi. Diapazonā ietilpst kolonnas etiķete un viena šūna zem etiķetes, kas paredzēta nosacījumam"
	},
	"DCOUNT": {
		"a": "(datu_bāze; lauks; kritēriji)",
		"d": "Saskaita šūnas, kurās ir skaitļi, norādītajiem nosacījumiem atbilstošas datu bāzes ierakstu laukā (kolonnā)",
		"ad": "ir to šūnu diapazons, kas veido sarakstu jeb datu bāzi. Datu bāze ir savstarpēji saistītu datu saraksts!ir kolonnas etiķete pēdiņās vai skaitlis, kas apzīmē kolonnas pozīciju sarakstā!ir šūnu diapazons, kurā atrodas norādītie nosacījumi. Diapazonā ietilpst kolonnas etiķete un viena šūna zem etiķetes, kas paredzēta nosacījumam"
	},
	"DCOUNTA": {
		"a": "(datu_bāze; lauks; kritēriji)",
		"d": "Saskaita netukšās šūnas ierakstu laukā (kolonnā) datu bāzē, kas atbilst norādītajiem kritērijiem",
		"ad": "ir šūnu diapazons, kas veido sarakstu jeb datu bāzi. Datu bāze ir savstarpēji saistītu datu saraksts!ir kolonnas etiķete dubultpēdiņās vai skaitlis, kas apzīmē kolonnas pozīciju sarakstā!ir šūnu diapazons, kurā atrodas norādītie nosacījumi. Diapazonā ietilpst kolonnas etiķete un viena šūna zem etiķetes nosacījuma ievadīšanai"
	},
	"DGET": {
		"a": "(datu_bāze; lauks; kritēriji)",
		"d": "Izgūst no datu bāzes vienu ierakstu, kas atbilst norādītajiem nosacījumiem",
		"ad": "ir šūnu diapazons, kas veido sarakstu jeb datu bāzi. Datu bāze ir savstarpēji saistītu datu saraksts!ir kolonnas etiķete pēdiņās vai skaitlis, kas apzīmē kolonnas pozīciju sarakstā!ir šūnu diapazons, kurā atrodas norādītie nosacījumi. Diapazonā ietilpst kolonnas etiķete un viena šūna zem etiķetes, kas paredzēta nosacījumam"
	},
	"DMAX": {
		"a": "(datu_bāze; lauks; kritēriji)",
		"d": "Atgriež vislielāko skaitli norādītajiem nosacījumiem atbilstošas datu bāzes ierakstu laukā (kolonnā)",
		"ad": "ir to šūnu diapazons, kas veido sarakstu jeb datu bāzi. Datu bāze ir savstarpēji saistītu datu saraksts!ir kolonnas etiķete pēdiņās vai skaitlis, kas apzīmē kolonnas pozīciju sarakstā!ir šūnu diapazons, kurā atrodas norādītie nosacījumi. Diapazonā ietilpst kolonnas etiķete un viena šūna zem etiķetes, kas paredzēta nosacījumam"
	},
	"DMIN": {
		"a": "(datu_bāze; lauks; kritēriji)",
		"d": "Atgriež vismazāko skaitli norādītajiem nosacījumiem atbilstošas datu bāzes ierakstu laukā (kolonnā)",
		"ad": "ir to šūnu diapazons, kas veido sarakstu jeb datu bāzi. Datu bāze ir savstarpēji saistītu datu saraksts!ir kolonnas etiķete pēdiņās vai skaitlis, kas apzīmē kolonnas pozīciju sarakstā!ir šūnu diapazons, kurā atrodas norādītie nosacījumi. Diapazonā ietilpst kolonnas etiķete un viena šūna zem etiķetes, kas paredzēta nosacījumam"
	},
	"DPRODUCT": {
		"a": "(datu_bāze; lauks; kritēriji)",
		"d": "Reizina vērtības, kuras atrodas datu bāzes ierakstu laukā (kolonnā), kas atbilst norādītajiem kritērijiem",
		"ad": "ir šūnu diapazons, kas veido sarakstu jeb datu bāzi. Datu bāze ir savstarpēji saistītu datu saraksts!ir kolonnas etiķete dubultpēdiņās vai skaitlis, kas apzīmē kolonnas pozīciju sarakstā!ir šūnu diapazons, kurā atrodas norādītie nosacījumi. Diapazonā ietilpst kolonnas etiķete un viena šūna zem etiķetes nosacījuma ievadīšanai"
	},
	"DSTDEV": {
		"a": "(datu_bāze; lauks; kritēriji)",
		"d": "Aprēķina standartnovirzi, izmantojot atlasīto datu bāzes ievadņu izlasi",
		"ad": "ir to šūnu diapazons, kas veido sarakstu jeb datu bāzi. Datu bāze ir savstarpēji saistītu datu saraksts!ir kolonnas etiķete pēdiņās vai skaitlis, kas apzīmē kolonnas pozīciju sarakstā!ir šūnu diapazons, kurā atrodas norādītie nosacījumi. Diapazonā ietilpst kolonnas etiķete un viena šūna zem etiķetes, kas paredzēta nosacījumam"
	},
	"DSTDEVP": {
		"a": "(datu_bāze; lauks; kritēriji)",
		"d": "Aprēķina standartnovirzi, izmantojot atlasītu datu bāzes ievadņu visu populāciju",
		"ad": "ir šūnu diapazons, kas veido sarakstu jeb datu bāzi. Datu bāze ir savstarpēji saistītu datu saraksts!ir kolonnas etiķete dubultpēdiņās vai skaitlis, kas apzīmē kolonnas pozīciju sarakstā!ir šūnu diapazons, kurā atrodas norādītie nosacījumi. Diapazonā ietilpst kolonnas etiķete un viena šūna zem etiķetes nosacījuma ievadīšanai"
	},
	"DSUM": {
		"a": "(datu_bāze; lauks; kritēriji)",
		"d": "Sasummē skaitļus norādītajiem nosacījumiem atbilstošas datu bāzes ierakstu laukā (kolonnā)",
		"ad": "ir to šūnu diapazons, kas veido sarakstu jeb datu bāzi. Datu bāze ir savstarpēji saistītu datu saraksts!ir kolonnas etiķete pēdiņās vai skaitlis, kas apzīmē kolonnas pozīciju sarakstā!ir šūnu diapazons, kurā atrodas norādītie nosacījumi. Diapazonā ietilpst kolonnas etiķete un viena šūna zem etiķetes, kas paredzēta nosacījumam"
	},
	"DVAR": {
		"a": "(datu_bāze; lauks; kritēriji)",
		"d": "Aprēķina dispersiju, izmantojot atlasīto datu bāzes ievadņu izlasi",
		"ad": "ir to šūnu diapazons, kas veido sarakstu jeb datu bāzi. Datu bāze ir savstarpēji saistītu datu saraksts!ir kolonnas etiķete pēdiņās vai skaitlis, kas apzīmē kolonnas pozīciju sarakstā!ir šūnu diapazons, kurā atrodas norādītie nosacījumi. Diapazonā ietilpst kolonnas etiķete un viena šūna zem etiķetes, kas paredzēta nosacījumam"
	},
	"DVARP": {
		"a": "(datu_bāze; lauks; kritēriji)",
		"d": "Aprēķina dispersiju, izmantojot atlasītu datu bāzes ievadņu visu populāciju",
		"ad": "ir šūnu diapazons, kas veido sarakstu jeb datu bāzi. Datu bāze ir savstarpēji saistītu datu saraksts!ir kolonnas etiķete dubultpēdiņās vai skaitlis, kas apzīmē kolonnas pozīciju sarakstā!ir šūnu diapazons, kurā atrodas norādītie nosacījumi. Diapazonā ietilpst kolonnas etiķete un viena šūna zem etiķetes nosacījuma ievadīšanai"
	},
	"CHAR": {
		"a": "(skaitlis)",
		"d": "Atgriež rakstzīmi, kuru norāda koda numurs datora rakstzīmju kopā",
		"ad": "ir skaitlis no 1 līdz 255, kas norāda vajadzīgo rakstzīmi"
	},
	"CLEAN": {
		"a": "(teksts)",
		"d": "No teksta izņem visas nedrukājamās rakstzīmes",
		"ad": "ir jebkura darblapas informācija, no kuras jāizņem nedrukājamās rakstzīmes"
	},
	"CODE": {
		"a": "(teksts)",
		"d": "Atgriež teksta virknes pirmās rakstzīmes skaitlisko kodu datorā izmantotajā rakstzīmju kopā",
		"ad": "ir teksts, kuram jāuzzina pirmās rakstzīmes kods"
	},
	"CONCATENATE": {
		"a": "(teksts1; [teksts2]; ...)",
		"d": "Savieno vairākas teksta virknes vienā",
		"ad": "ir 1 līdz 255 teksta virkņu, kas savienojamas vienā teksta virknē; tās var būt teksta virknes, skaitļi vai vienšūnas atsauces"
	},
	"CONCAT": {
		"a": "(teksts1; ...)",
		"d": "Savieno teksta virkņu sarakstu vai diapazonu",
		"ad": "vai teksta virknes vai diapazoni no 1 līdz 254 ir jāsavieno vienā teksta virknē"
	},
	"DOLLAR": {
		"a": "(skaitlis; [decimālskaitļi])",
		"d": "Konvertē skaitli par tekstu, izmantojot valūtas formātu",
		"ad": "ir skaitlis, atsauce uz šūnu, kurā ir skaitlis vai formula, ar kuru izrēķina skaitli!ir ciparu skaits pa labi no decimālzīmes. Skaitlis tiek noapaļots pēc vajadzības; ja izlaists, decimāldaļas = 2"
	},
	"EXACT": {
		"a": "(teksts1; teksts2)",
		"d": "Pārbauda, vai divas teksta virknes ir pilnīgi vienādas un atgriež TRUE vai FALSE. Funkcija EXACT ir reģistrjutīga",
		"ad": "ir pirmā teksta virkne!ir otrā teksta virkne"
	},
	"FIND": {
		"a": "(atrast_tekstu; tekstā; [sākuma_num])",
		"d": "Atgriež vienas teksta virknes sākuma pozīciju citā teksta virknē. Funkcija FIND ir reģistrjutīga",
		"ad": "ir atrodamais teksts. Izmantojiet dubultpēdiņas (tukšu tekstu), lai pieskaņotu pirmo rakstzīmi tekstā Tekstā; aizstājējzīmes nav atļautas!ir teksts, kurā atrodas atrodamais teksts!norāda rakstzīmi, no kuras sākt meklēšanu. Pirmā rakstzīme tekstā Atrast_tekstu ir 1. rakstzīme. Ja izlaista, sākuma_num = 1"
	},
	"FINDB": {
		"a": "(atrast_tekstu; tekstā; [sākuma_num])",
		"d": "Atgriež vienu teksta virkni otrā teksta virknē un atgriež pirmās teksta virknes sākuma pozīcijas numuru no otrās teksta virknes pirmās rakstzīmes, ir paredzēta valodām, kuras izmanto dubultbaita rakstzīmju kopu (DBCS) - japāņu, ķīniešu un korejiešu",
		"ad": "ir atrodamais teksts. Izmantojiet dubultpēdiņas (tukšu tekstu), lai pieskaņotu pirmo rakstzīmi tekstā Tekstā; aizstājējzīmes nav atļautas!ir teksts, kurā atrodas atrodamais teksts!norāda rakstzīmi, no kuras sākt meklēšanu. Pirmā rakstzīme tekstā Atrast_tekstu ir 1. rakstzīme. Ja izlaista, sākuma_num = 1"
	},
	"FIXED": {
		"a": "(skaitlis; [decimāldaļas]; [bez_komatiem])",
		"d": "Noapaļo skaitli līdz norādītajam decimāldaļu skaitam un atgriež rezultātu kā tekstu ar komatiem vai bez tiem",
		"ad": "ir noapaļojamais skaitlis, kurš jākonvertē par tekstu!ir ciparu skaits pa labi no decimālzīmes. Ja izlaists, Decimāldaļas = 2!ir loģiskā vērtība: atgrieztajā tekstā netiek rādīti komati = TRUE; atgrieztajā tekstā tiek rādīti komati = FALSE vai izlaists"
	},
	"LEFT": {
		"a": "(teksts; [skaitļu_rakstz])",
		"d": "Atgriež norādīto rakstzīmju skaitu no teksta virknes sākuma",
		"ad": " ir teksta virkne, kurā ietilpst izgūstamās rakstzīmes!norāda, cik rakstzīmes funkcijai LEFT ir jāizgūst; 1, ja izlaists"
	},
	"LEFTB": {
		"a": "(teksts; [skaitļu_rakstz])",
		"d": "Atgriež pirmo rakstzīmi vai rakstzīmes teksta virknē, pamatojoties uz norādīto baitu skaitu, ir paredzēta valodām, kuras izmanto dubultbaita rakstzīmju kopu (DBCS) - japāņu, ķīniešu un korejiešu",
		"ad": " ir teksta virkne, kurā ietilpst izgūstamās rakstzīmes!norāda, cik rakstzīmes funkcijai LEFTB ir jāizgūst; 1, ja izlaists"
	},
	"LEN": {
		"a": "(teksts)",
		"d": "Atgriež rakstzīmju skaitu teksta virknē",
		"ad": "ir teksts, kura garums ir jānoskaidro. Atstarpes tiek skaitītas kā rakstzīmes"
	},
	"LENB": {
		"a": "(teksts)",
		"d": "Atgriež baitu skaitu, kas tiek izmantoti rakstzīmju attēlošanai teksta virknē, ir paredzēta valodām, kuras izmanto dubultbaita rakstzīmju kopu (DBCS) - japāņu, ķīniešu un korejiešu",
		"ad": "ir teksts, kura garums ir jānoskaidro. Atstarpes tiek skaitītas kā rakstzīmes"
	},
	"LOWER": {
		"a": "(teksts)",
		"d": "Visus burtus teksta virknē konvertē par mazajiem burtiem",
		"ad": "ir uz mazajiem burtiem konvertējamais teksts. Teksta rakstzīmes, kas nav burti, netiek mainītas"
	},
	"MID": {
		"a": "(teksts; sākuma_num; rakstzīmju_skaits)",
		"d": "Atgriež rakstzīmes no teksta virknes vidus, norādot sākuma pozīciju un garumu",
		"ad": "ir teksta virkne, no kuras jāizgūst rakstzīmes!ir pirmās izgūstamās rakstzīmes pozīcija. Pirmā rakstzīme Tekstā ir 1!norāda, cik rakstzīmes no Teksta ir jāatgriež"
	},
	"MIDB": {
		"a": "(teksts; sākuma_num; rakstzīmju_skaits)",
		"d": "Atgriež noteiktas rakstzīmes no teksta virknes, sākot no norādītās vietas un pamatojoties uz norādīto baitu skaitu, ir paredzēta valodām, kuras izmanto dubultbaita rakstzīmju kopu (DBCS) - japāņu, ķīniešu un korejiešu",
		"ad": "ir teksta virkne, no kuras jāizgūst rakstzīmes!ir pirmās izgūstamās rakstzīmes pozīcija. Pirmā rakstzīme Tekstā ir 1!norāda, cik rakstzīmes no Teksta ir jāatgriež"
	},
	"NUMBERVALUE": {
		"a": "(teksts; [decimālzīme]; [grupu_atdalītājs])",
		"d": "Pārvērš tekstu par skaitli no lokalizācijas neatkarīgā veidā",
		"ad": "ir virkne, kas atspoguļo skaitli, kas jāpārvērš!ir rakstzīme, kas virknē tiek izmantota kā decimālzīme!ir rakstzīme, kas virknē tiek izmantota kā grupu atdalītājs"
	},
	"PROPER": {
		"a": "(teksts)",
		"d": "Pārveido teksta virkni pareizajā burtu reģistrā; katra vārda pirmo burtu par lielo, bet pārējos - par mazajiem",
		"ad": "ir teksts, kas ielikts pēdiņās, formula, kas atgriež tekstu, vai atsauce uz šūnu, kurā ir teksts, kas daļēji rakstāms ar lielajiem burtiem"
	},
	"REPLACE": {
		"a": "(vecais_teksts; sākuma_num; rakstzīmju_skaits; jaunais_teksts)",
		"d": "Aizstāj daļu teksta virknes ar citu teksta virkni",
		"ad": "ir teksts, kurā jāaizstāj dažas rakstzīmes!ir rakstzīmes pozīcija Vecajā_tekstā, kas jāaizstāj ar Jauno_tekstu!ir aizstājamo rakstzīmju skaits Vecajā_tekstā!ir teksts, kas aizstās rakstzīmes Vecajā_tekstā"
	},
	"REPLACEB": {
		"a": "(vecais_teksts; sākuma_num; rakstzīmju_skaits; jaunais_teksts)",
		"d": "Aizstāj teksta virknes daļu ar citu teksta virkni, pamatojoties uz norādīto baitu skaitu, ir paredzēta valodām, kuras izmanto dubultbaita rakstzīmju kopu (DBCS) - japāņu, ķīniešu un korejiešu",
		"ad": "ir teksts, kurā jāaizstāj dažas rakstzīmes!ir rakstzīmes pozīcija Vecajā_tekstā, kas jāaizstāj ar Jauno_tekstu!ir aizstājamo rakstzīmju skaits Vecajā_tekstā!ir teksts, kas aizstās rakstzīmes Vecajā_tekstā"
	},
	"REPT": {
		"a": "(teksts; skaitlis_reizes)",
		"d": "Atkārto tekstu norādīto reižu skaitu. Izmantojiet funkciju REPT, lai aizpildītu šūnu ar noteiktu skaitu teksta virkņu",
		"ad": "ir atkārtojamais teksts!ir pozitīvs skaitlis, kas norāda, cik reižu teksts ir jāatkārto"
	},
	"RIGHT": {
		"a": "(teksts; [skaitļu_rakstz])",
		"d": "Atgriež norādīto rakstzīmju skaitu no teksta virknes beigām",
		"ad": "ir teksta virkne, kurā ietilpst izgūstamās rakstzīmes!norāda, cik rakstzīmes ir jāizgūst, 1, ja izlaists"
	},
	"RIGHTB": {
		"a": "(teksts; [skaitļu_rakstz])",
		"d": "Atgriež pēdējo rakstzīmi vai rakstzīmes teksta virknē, pamatojoties uz norādīto baitu skaitu, ir paredzēta valodām, kuras izmanto dubultbaita rakstzīmju kopu (DBCS) - japāņu, ķīniešu un korejiešu",
		"ad": "ir teksta virkne, kurā ietilpst izgūstamās rakstzīmes!norāda, cik rakstzīmes ir jāizgūst, 1, ja izlaists"
	},
	"SEARCH": {
		"a": "(atrast_tekstu; tekstā; [sākuma_num])",
		"d": "Atgriež rakstzīmes numuru, pie kuras noteikta rakstzīme vai teksta virkne atrasta pirmo reizi, lasot virzienā no kreisās uz labo pusi (nav reģistrjutīgi)",
		"ad": "ir meklējamais teksts. Var izmantot aizstājējzīmes ? un *; izmantojiet ~? un ~*, lai atrastu rakstzīmes ? un *!ir teksts, kurā jāmeklē Atrast_tekstu!ir tās rakstzīmes numurs Tekstā, skaitot virzienā no kreisās puses, no kuras sākt meklēšanu. Ja izlaists, tiek lietots 1"
	},
	"SEARCHB": {
		"a": "(atrast_tekstu; tekstā; [sākuma_num])",
		"d": "Atrod vienu teksta virkni otrā teksta virknē un atgriež pirmās teksta virknes sākuma atrašanās vietas numuru, skaitot no otrās teksta virknes pirmās rakstzīmes, ir paredzēta valodām, kuras izmanto dubultbaita rakstzīmju kopu (DBCS) - japāņu, ķīniešu un korejiešu",
		"ad": "ir meklējamais teksts. Var izmantot aizstājējzīmes ? un *; izmantojiet ~? un ~*, lai atrastu rakstzīmes ? un *!ir teksts, kurā jāmeklē Atrast_tekstu!ir tās rakstzīmes numurs Tekstā, skaitot virzienā no kreisās puses, no kuras sākt meklēšanu. Ja izlaists, tiek lietots 1"
	},
	"SUBSTITUTE": {
		"a": "(teksts; vecais_teksts; jaunais_teksts; [gadījuma_numurs])",
		"d": "Teksta virknē aizstāj esošu tekstu ar jaunu tekstu",
		"ad": "ir teksts vai atsauce uz šūnu, kurā ir teksts, kur jāveic rakstzīmju aizstāšana!ir esošais aizstājamais teksts. Ja Vecā_teksta burtu reģistrs nesaskan ar teksta burtu reģistru, funkcija SUBSTITUTE neaizstās tekstu!ir teksts, ar kuru jāaizstāj Vecais_teksts!norāda, kuru Vecā_teksta gadījumu ir jāaizstāj. Ja izlaists, tiek aizstāts katrs Vecā_teksta gadījums"
	},
	"T": {
		"a": "(vērtība)",
		"d": "Pārbauda, vai vērtība ir teksts un atgriež tekstu, ja tā ir vai dubultpēdiņas (tukšu tekstu), ja tā nav",
		"ad": "ir pārbaudāmā vērtība"
	},
	"TEXT": {
		"a": "(vērtība; formāts_teksts)",
		"d": "Konvertē vērtību par tekstu noteiktā skaitļu formātā",
		"ad": "ir skaitlis, formula, ar kuru iegūst skaitlisku vērtību, vai atsauce uz šūnu, kurā ietilpst skaitliska vērtība!ir skaitļa formāts teksta veidā, kas norādīts dialoglodziņa Šūnu formatēšana (ne Vispārīgi) cilnes Skaitlis lodziņā Kategorija"
	},
	"TEXTJOIN": {
		"a": "(norobežotājs; ignorēt_tukšu; teksts1; ...)",
		"d": "Savieno teksta virkņu sarakstu vai diapazonu, izmantojot norobežotāju",
		"ad": "Rakstzīme vai virkne, ko ievietot aiz katra teksta vienuma!ja vērtība ir TRUE (noklusējums), tukšās šūnas tiek ignorētas!vai teksta virknes vai diapazoni no 1 līdz 252 ir jāsavieno "
	},
	"TRIM": {
		"a": "(tekstst)",
		"d": "Izņem visas atstarpes no teksta virknes, izņemot vienplatuma atstarpes starp vārdiem",
		"ad": "ir teksts, no kura ir jāizņem atstarpes"
	},
	"UNICHAR": {
		"a": "(skaitlis)",
		"d": "Atgriež unikoda rakstzīmi, uz ko atsaucas noteiktā skaitliskā vērtība",
		"ad": "ir unikoda skaitlis, kas atspoguļo rakstzīmi"
	},
	"UNICODE": {
		"a": "(teksts)",
		"d": "Atgriež skaitli (koda punktu), kas atbilst teksta pirmajai rakstzīmei",
		"ad": "ir rakstzīme, kuras unikoda vērtība jāiegūst"
	},
	"UPPER": {
		"a": "(teksts)",
		"d": "Konvertē teksta virkni uz visiem lielajiem burtiem",
		"ad": "ir uz lielajiem konvertējamais teksts, atsauce vai teksta virkne"
	},
	"VALUE": {
		"a": "(teksts)",
		"d": "Konvertē teksta virkni, kas apzīmē skaitli, par skaitli",
		"ad": "ir teksts pēdiņās vai atsauce uz šūnu, kurā ir konvertējamais teksts"
	},
	"AVEDEV": {
		"a": "(skaitlis1; [skaitlis2]; ...)",
		"d": "Atgriež vidējo vērtību datu punktu absolūtajām novirzēm no vidējā. Argumenti var būt skaitļi vai nosaukumi, masīvi vai atsauces, kurās ietilpst skaitļi",
		"ad": "ir 1 līdz 255 argumentu, kam aprēķināmas absolūto noviržu vidējās vērtības"
	},
	"AVERAGE": {
		"a": "(skaitlis1; [skaitlis2]; ...)",
		"d": "Atgriež savu argumentu vidējo (aritmētisko), kas var būt skaitļi vai nosaukumi, masīvi vai atsauces, kurās ir skaitļi",
		"ad": "ir 1 līdz 255 skaitlisku argumentu, no kuriem iegūstams vidējais"
	},
	"AVERAGEA": {
		"a": "(vērtība1; [vērtība2]; ...)",
		"d": "Atgriež argumentu vidējo (vidējo aritmētisko), novērtējuma tekstu un FALSE argumentos kā 0; TRUE tiek novērtēts kā 1. Argumenti var būt skaitļi, nosaukumi, masīvi vai atsauces",
		"ad": "ir 1 līdz 255 argumentu, kam jāiegūst vidējais"
	},
	"AVERAGEIF": {
		"a": "(diapazons; kritēriji; [vidējais_diapazons])",
		"d": "Atrod vidējo (vidējo aritmētisko) šūnām, ko norāda dotais nosacījums vai kritērijs",
		"ad": "ir novērtējamo šūnu diapazons!ir nosacījums vai kritēriji skaitļa, izteiksmes vai teksta formā, kas definē to, kuras šūnas tiks lietotas, lai atrastu vidējo!ir faktiskās šūnas, kuras lieto vidējā atrašanai. Ja izlaists, tiek lietotas diapazona šūnas"
	},
	"AVERAGEIFS": {
		"a": "(vidējais_diapazons; kritēriju_diapazons; kritēriji; ...)",
		"d": "Atrod vidējo (vidējo aritmētisko) šūnām, ko norāda dotā nosacījumu kopa vai kritēriji",
		"ad": "ir faktiskās šūnas, ko lieto vidējā atrašanai!ir šūnu diapazons, kas jāvērtē pēc noteiktā nosacījuma!ir nosacījums vai kritērijs skaitļa veidā, izteiksme vai teksts, kas nosaka, kuras šūnas tiks lietotas vidējā atrašanai"
	},
	"BETADIST": {
		"a": "(x; alfa; beta; [A]; [B])",
		"d": "Atgriež kumulatīvo beta varbūtības blīvuma funkciju",
		"ad": "ir vērtība no A līdz B, kas jāaprēķina ar funkciju!ir sadalījuma parametrs, un tam jābūt lielākam par 0!ir sadalījuma parametrs, un tam jābūt lielākam par 0!ir neobligāta x intervāla apakšējā robeža. Ja izlaista, A = 0!ir neobligāta x intervāla augšējā robeža. Ja izlaista, B = 1"
	},
	"BETAINV": {
		"a": "(varbūtība; alfa; beta; [A]; [B])",
		"d": "Atgriež apgrieztu kumulatīvo beta varbūtības blīvuma funkciju (BETADIST)",
		"ad": "ir varbūtība, kas saistīta ar beta sadalījumu!ir sadalījuma parametrs, un tam jābūt lielākam par 0!ir sadalījuma parametrs, un tam jābūt lielākam par 0!ir neobligāta x intervāla apakšējā robeža. Ja izlaista, A = 0!ir neobligāta x intervāla augšējā robeža. Ja izlaista, B = 1"
	},
	"BETA.DIST": {
		"a": "(x; alfa; beta; kumulatīvā; [A]; [B])",
		"d": "Atgriež beta varbūtības sadalījuma funkciju",
		"ad": "ir vērtība no A līdz B, kas jāaprēķina ar funkciju!ir sadalījuma parametrs, un tam jābūt lielākam par 0!ir sadalījuma parametrs, un tam jābūt lielākam par 0!ir loģiskā vērtība: kumulatīvajai sadalījuma funkcijai izmantojiet TRUE; varbūtības blīvuma funkcijai izmantojiet FALSE!pēc izvēles izdod x intervāla apakšējo robežu. Ja izlaists, A = 0!pēc izvēles izdod x intervāla augšējo robežu. Ja izlaists, B = 1"
	},
	"BETA.INV": {
		"a": "(varbūtība; alfa; beta; [A]; [B])",
		"d": "Atgriež apgrieztu kumulatīvo beta varbūtības blīvuma funkciju (BETA.DIST)",
		"ad": "ir varbūtība, kas saistīta ar beta sadalījumu!ir sadalījuma parametrs, un tam jābūt lielākam par 0!ir sadalījuma parametrs, un tam jābūt lielākam par 0!pēc izvēles izdod x intervāla apakšējo robežu. Ja izlaists, A = 0!pēc izvēles izdod x intervāla augšējo robežu. Ja izlaists, B = 1"
	},
	"BINOMDIST": {
		"a": "(labvēlizn_skaits; mēģinājumi; labvēlizn_varbūtība; kumulatīvā)",
		"d": "Atgriež atsevišķas izteiksmes binomiālā sadalījuma varbūtību",
		"ad": "ir labvēlīgu iznākumu skaits mēģinājumos!ir patstāvīgu mēģinājumu skaits!ir labvēlīga iznākuma varbūtība katrā mēģinājumā!ir loģiskā vērtība: kumulatīvai sadalījuma funkcijai izmantojiet TRUE; varbūtību masas funkcijai izmantojiet FALSE"
	},
	"BINOM.DIST": {
		"a": "(labvēlizn_skaits; mēģinājumi; labvēlizn_varbūtība; kumulatīvā)",
		"d": "Atgriež binomiālā sadalījuma atsevišķas vērtības varbūtību",
		"ad": "ir labvēlīgu iznākumu skaits mēģinājumos!ir patstāvīgu mēģinājumu skaits!ir labvēlīga iznākuma varbūtība katrā mēģinājumā!ir loģiskā vērtība: kumulatīvajai sadalījuma funkcijai izmantojiet TRUE; varbūtību masas funkcijai izmantojiet FALSE"
	},
	"BINOM.DIST.RANGE": {
		"a": "(mēģinājumi; labvēlizn_varbūtība; izdošanās_skaits; [izdošanās_skaits2])",
		"d": "Atgriež mēģinājuma rezultātu iespējamību, izmantojot binomu sadali",
		"ad": "ir neatkarīgu mēģinājumu skaits!ir katra mēģinājuma labvēlīga iznākuma varbūtība!ir mēģinājumu labvēlīgu iznākumu skaits!ja paredzēts, tad šī funkcija atgriež varbūtību, ka mēģinājumu skaits ar labvēlīgu iznākumu būs no izdošanās_skaits līdz izdošanās_skaits2"
	},
	"BINOM.INV": {
		"a": "(mēģinājumi; labvēlizn_varbūtība; alfa)",
		"d": "Atgriež vismazāko vērtību, kurai kumulatīvais binomiālais sadalījums ir lielāks vai vienāds ar kritērija vērtību",
		"ad": "ir Bernulli eksperimentu skaits!ir labvēlīga iznākuma varbūtība katrā mēģinājumā - skaitlis no 0 līdz 1 ieskaitot!ir kritērija vērtība - skaitlis no 0 līdz 1 ieskaitot"
	},
	"CHIDIST": {
		"a": "(x; brīvības_pakāpe)",
		"d": "Atgriež labā zara hī kvadrātā sadalījuma varbūtību",
		"ad": "ir vērtība, kurā jāaprēķina sadalījums, nenegatīvs skaitlis!ir brīvības pakāpju skaits - skaitlis no 1 līdz 10^10, neieskaitot 10^10"
	},
	"CHIINV": {
		"a": "(varbūtība; brīvības_pakāpe)",
		"d": "Atgriež apgrieztu hī kvadrāta sadalījuma labā zara varbūtību",
		"ad": "ir varbūtība, kas saistīta ar hī kvadrātā sadalījumu - vērtību no 0 līdz 1 ieskaitot!ir brīvības pakāpju skaits, skaitlis no 1 līdz 10^10, neieskaitot 10^10"
	},
	"CHITEST": {
		"a": "(faktiskais_diapazons; sagaidāmais_diapazons)",
		"d": "Atgriež neatkarības pārbaudi: statiskās un piemērotās brīvības pakāpes hī kvadrātā sadalījuma vērtību",
		"ad": "ir datu diapazons, kurā ietilpst novērojumi, lai veiktu pārbaudi salīdzinājumā ar sagaidāmajām vērtībām!ir datu diapazons, kurā ietilpst rindu summu un kolonnu summu reizinājuma attiecība pret visu gala summu"
	},
	"CHISQ.DIST": {
		"a": "(x; brīvības_pakāpe; kumulatīvā)",
		"d": "Atgriež kreisā zara hī kvadrātā sadalījuma varbūtību",
		"ad": "ir vērtība, kurā jāaprēķina sadalījums - nenegatīvs skaitlis!ir brīvības pakāpju skaits - skaitlis no 1 līdz 10^10, neieskaitot 10^10!ir loģiskā vērtība, kas funkcijai jāatgriež: kumulatīvajai sadalījuma funkcijai = TRUE; varbūtības blīvuma funkcijai = FALSE"
	},
	"CHISQ.DIST.RT": {
		"a": "(x; brīvības_pakāpe)",
		"d": "Atgriež labā zara hī kvadrātā sadalījuma varbūtību",
		"ad": "ir vērtība, kurā jāaprēķina sadalījums - nenegatīvs skaitlis!ir brīvības pakāpju skaits - skaitlis no 1 līdz 10^10, neieskaitot 10^10"
	},
	"CHISQ.INV": {
		"a": "(varbūtība; brīvības_pakāpe)",
		"d": "Atgriež apgrieztu kreisā zara hī kvadrātā sadalījuma varbūtību",
		"ad": "ir varbūtība, kas saistīta ar hī kvadrātā sadalījumu - vērtību no 0 līdz 1 ieskaitot!ir brīvības pakāpju skaits - skaitlis no 1 līdz 10^10, neieskaitot 10^10"
	},
	"CHISQ.INV.RT": {
		"a": "(varbūtība; brīvības_pakāpe)",
		"d": "Atgriež apgrieztu labā zara hī kvadrātā sadalījuma varbūtību",
		"ad": "ir varbūtība, kas saistīta ar hī kvadrātā sadalījumu - vērtību no 0 līdz 1 ieskaitot!ir brīvības pakāpju skaits - skaitlis no 1 līdz 10^10, neieskaitot 10^10"
	},
	"CHISQ.TEST": {
		"a": "(faktiskais_diapazons; sagaidāmais_diapazons)",
		"d": "Atgriež neatkarības pārbaudi: statiskās un piemērotās brīvības pakāpes hī kvadrātā sadalījuma vērtību",
		"ad": "ir datu diapazons, kurā ietilpst novērojumi, lai veiktu pārbaudi salīdzinājumā ar sagaidāmajām vērtībām!ir datu diapazons, kurā ietilpst rindu summu un kolonnu summu reizinājuma attiecība pret visu gala summu"
	},
	"CONFIDENCE": {
		"a": "(alfa; standartnovirze; lielums)",
		"d": "Atgriež populācijas vidējā ticamības intervālu, izmantojot normālo sadalījumu",
		"ad": "ir nozīmības līmenis, ko izmanto ticamības līmeņa aprēķināšanai, skaitlis, kas lielāks par 0 un mazāks par 1!ir datu diapazona standartnovirzes populācija, un tiek pieņemts, ka tā ir zināma. Standartnovirzei ir jābūt lielākai par 0!ir izlases lielums"
	},
	"CONFIDENCE.NORM": {
		"a": "(alfa; standartnovirze; lielums)",
		"d": "Atgriež populācijas vidējā ticamības intervālu, izmantojot normālo sadalījumu",
		"ad": "ir nozīmības līmenis, ko izmanto ticamības līmeņa aprēķināšanai, skaitlis, kas lielāks par 0 un mazāks par 1!ir datu diapazona standartnovirzes populācija, un tiek pieņemts, ka tā ir zināma. Standartnovirzei ir jābūt lielākai par 0!ir izlases lielums"
	},
	"CONFIDENCE.T": {
		"a": "(alfa; standartnovirze; lielums)",
		"d": "Atgriež populācijas vidējā ticamības intervālu, izmantojot Stjūdenta t sadalījumu",
		"ad": "ir nozīmības līmenis, ko izmanto ticamības līmeņa aprēķināšanai, skaitlis, kas lielāks par 0 un mazāks par 1!ir datu diapazona standartnovirzes populācija, un tiek pieņemts, ka tā ir zināma. Standartnovirzei ir jābūt lielākai par 0!ir izlases lielums"
	},
	"CORREL": {
		"a": "(masīvs1; masīvs2)",
		"d": "Atgriež divu datu kopu korelācijas koeficientu",
		"ad": "ir vērtību šūnu diapazons. Vērtībām ir jābūt skaitļiem, nosaukumiem, masīviem vai atsaucēm, kurās ir skaitļi!ir otrs vērtību šūnu diapazons. Vērtībām ir jābūt skaitļiem, nosaukumiem, masīviem vai atsaucēm, kurās ir skaitļi"
	},
	"COUNT": {
		"a": "(vērtība1; [vērtība2]; ...)",
		"d": "Šūnu diapazonā saskaita, cik šūnās ir skaitļi",
		"ad": "ir 1 līdz 255 argumentu, kuros var ietilpt visdažādāko tipu dati vai atsauces uz šādiem datiem, taču tiek skaitīti tikai skaitļi"
	},
	"COUNTA": {
		"a": "(vērtība1; [vērtība2]; ...)",
		"d": "Diapazonā saskaita, cik šūnas nav tukšas",
		"ad": "ir 1 līdz 255 argumentu, kas apzīmē saskaitāmās vērtības un šūnas. Vērtības var būt jebkura tipa informācija"
	},
	"COUNTBLANK": {
		"a": "(diapazons)",
		"d": "Saskaita, cik tukšu šūnu ir norādītajā šūnu diapazonā",
		"ad": "ir diapazons, kurā jāsaskaita tukšās šūnas"
	},
	"COUNTIF": {
		"a": "(diapazons; kritēriji)",
		"d": "Saskaita, cik šūnu diapazonā atbilst noteiktajam nosacījumam",
		"ad": "ir šūnu diapazons, kura netukšās šūnas ir jāsaskaita!ir nosacījums skaitļa, izteiksmes vai teksta formā, kas definē, kādas šūnas ir jāsaskaita"
	},
	"COUNTIFS": {
		"a": "(kritēriju_diapazons; kritēriji; ...)",
		"d": "Skaita šūnu skaitu, ko norāda dotā nosacījumu kopa vai kritēriji",
		"ad": "ir šūnu diapazons, kas jāvērtē pēc noteiktā nosacījuma!ir nosacījums skaitļa veidā, izteiksme vai teksts, kas nosaka, kuras šūnas tiks skaitītas"
	},
	"COVAR": {
		"a": "(masīvs1; masīvs2)",
		"d": "Atgriež kovariāciju - katra divu kopu datu punktu pāra noviržu reizinājuma vidējo",
		"ad": "ir pirmais veselo skaitļu šūnu diapazons; tiem ir jābūt skaitļiem, masīviem vai atsaucēm, kurās ir skaitļi!ir otrais veselo skaitļu šūnu diapazons; tiem ir jābūt skaitļiem, masīviem vai atsaucēm, kurās ir skaitlis"
	},
	"COVARIANCE.P": {
		"a": "(masīvs1; masīvs2)",
		"d": "Atgriež populācijas kovariāciju - katra divu kopu datu punktu pāra noviržu reizinājuma vidējo",
		"ad": "ir pirmais veselo skaitļu šūnu diapazons; tiem ir jābūt skaitļiem, masīviem vai atsaucēm, kurās ir skaitļi!ir otrais veselo skaitļu šūnu diapazons; tiem ir jābūt skaitļiem, masīviem vai atsaucēm, kurās ir skaitlis"
	},
	"COVARIANCE.S": {
		"a": "(masīvs1; masīvs2)",
		"d": "Atgriež izlases kovariāciju - katra divu kopu datu punktu pāra noviržu reizinājuma vidējo",
		"ad": "ir pirmais veselo skaitļu šūnu diapazons; tiem ir jābūt skaitļiem, masīviem vai atsaucēm, kurās ir skaitļi!ir otrais veselo skaitļu šūnu diapazons; tiem ir jābūt skaitļiem, masīviem vai atsaucēm, kurās ir skaitlis"
	},
	"CRITBINOM": {
		"a": "(izmēģinājumi; varbūtība_s; alfa)",
		"d": "Atgriež vismazāko vērtību, kuras kumulatīvais binomu sadalījums ir lielāks vai vienāds ar kritērija vērtību",
		"ad": "ir Bernulli eksperimentu skaits!ir labvēlīga iznākuma varbūtība katrā izmēģinājumā - skaitlis no 0 līdz 1 ieskaitot!ir kritērija vērtība - skaitlis no 0 līdz 1 ieskaitot"
	},
	"DEVSQ": {
		"a": "(skaitlis1; [skaitlis2]; ...)",
		"d": "Atgriež datu punktu to noviržu kvadrātu summu, kuras aprēķinātas no to izlašu vidējā",
		"ad": "ir 1 līdz 255 argumentu vai masīvu vai masīvu atsauču, kurām funkcija DEVSQ varētu veikt aprēķinu"
	},
	"EXPONDIST": {
		"a": "(x; lambda; kumulatīvā)",
		"d": "Atgriež eksponenciālo sadalījumu",
		"ad": "ir funkcijas vērtība, nenegatīvs skaitlis!ir parametra vērtība, pozitīvs skaitlis!ir loģiskā vērtība, kas funkcijai ir jāatgriež: kumulatīvā sadalījuma funkcija = TRUE; varbūtības blīvuma funkcija = FALSE"
	},
	"EXPON.DIST": {
		"a": "(x; lambda; kumulatīva)",
		"d": "Atgriež eksponenciālo sadalījumu",
		"ad": "ir funkcijas vērtība, nenegatīvs skaitlis!ir parametra vērtība, pozitīvs skaitlis!ir loģiskā vērtība, kas funkcijai ir jāatgriež: kumulatīvā sadalījuma funkcija = TRUE; varbūtības blīvuma funkcija = FALSE"
	},
	"FDIST": {
		"a": "(x; brīvības_pakāpe1; brīvības_pakāpe2)",
		"d": "Atgriež divu datu kopu (labā zara) F varbūtības sadalījumu (atšķirības pakāpi)",
		"ad": "ir vērtība, kurā jāaprēķina funkcija, nenegatīvs skaitlis!ir skaitītāja brīvības pakāpes, skaitlis no 1 līdz 10^10, neieskaitot 10^10!ir saucēja brīvības pakāpes, skaitlis no 1 līdz 10^10, neieskaitot 10^10"
	},
	"FINV": {
		"a": "(varbūtība; brīvības_pak1; brīvības_pak2)",
		"d": "Atgriež apgrieztu (labā zara) F varbūtības sadalījumu: ja p = FDIST(x,...), FINV(p,...) = x",
		"ad": "ir varbūtība, kas saistīta ar F kumulatīvo sadalījumu; tas ir skaitlis no 0 līdz 1 ieskaitot!ir brīvības pakāpju skaitītājs - skaitlis no 1 līdz 10^10, neieskaitot 10^10!ir brīvības pakāpju saucējs - skaitlis no 1 līdz 10^10, neieskaitot 10^10"
	},
	"FTEST": {
		"a": "(masīvs1; masīvs2)",
		"d": "Atgriež F testa rezultātus - divu zaru varbūtību, ka dispersijas Masīvā1 un Masīvā2 nav nozīmīgi atšķirīgas",
		"ad": "ir pirmais datu masīvs vai diapazons; tie var būt skaitļi vai nosaukumi, masīvi vai atsauces, kurās ir skaitļi (atstarpes tiek ignorētas)!ir otrais datu masīvs vai diapazons; tie var būt skaitļi vai nosaukumi, masīvi vai atsauces, kurās ir skaitļi (atstarpes tiek ignorētas)"
	},
	"F.DIST": {
		"a": "(x; brīvības_pakāpe1; brīvības_pakāpe2; kumulatīvā)",
		"d": "Atgriež divu datu kopu (kreisā zara) F varbūtības sadalījumu (atšķirības pakāpi)",
		"ad": "ir vērtība, kurā jāaprēķina funkcija, nenegatīvs skaitlis!ir skaitītāja brīvības pakāpes - skaitlis no 1 līdz 10^10, neieskaitot 10^10!ir saucēja brīvības pakāpes - skaitlis no 1 līdz 10^10, neieskaitot 10^10!ir loģiskā vērtība, kas funkcijai jāatgriež: kumulatīvajai sadalījuma funkcijai = TRUE; varbūtības blīvuma funkcijai = FALSE"
	},
	"F.DIST.RT": {
		"a": "(x; brīvības_pakāpe1; brīvības_pakāpe2)",
		"d": "Atgriež divu datu kopu (labā zara) F varbūtības sadalījumu (atšķirības pakāpi)",
		"ad": "ir vērtība, kurā jāaprēķina funkcija, nenegatīvs skaitlis!ir skaitītāja brīvības pakāpes - skaitlis no 1 līdz 10^10, neieskaitot 10^10!ir saucēja brīvības pakāpes - skaitlis no 1 līdz 10^10, neieskaitot 10^10"
	},
	"F.INV": {
		"a": "(varbūtība; brīvības_pak1; brīvības_pak2)",
		"d": "Atgriež apgrieztu (kreisā zara) F varbūtības sadalījumu: ja p = F.DIST(x,...), F.INV(p,...) = x",
		"ad": "ir varbūtība, kas saistīta ar F kumulatīvo sadalījumu; tas ir skaitlis no 0 līdz 1 ieskaitot!ir brīvības pakāpju skaitītājs - skaitlis no 1 līdz 10^10, neieskaitot 10^10!ir brīvības pakāpju saucējs - skaitlis no 1 līdz 10^10, neieskaitot 10^10"
	},
	"F.INV.RT": {
		"a": "(varbūtība; brīvības_pak1; brīvības_pak2)",
		"d": "Atgriež apgrieztu (labā zara) F varbūtības sadalījumu: ja p = F.DIST.RT(x,...), F.INV.RT(p,...) = x",
		"ad": "ir varbūtība, kas saistīta ar F kumulatīvo sadalījumu; tas ir skaitlis no 0 līdz 1 ieskaitot!ir brīvības pakāpju skaitītājs - skaitlis no 1 līdz 10^10, neieskaitot 10^10!ir brīvības pakāpju saucējs - skaitlis no 1 līdz 10^10, neieskaitot 10^10"
	},
	"F.TEST": {
		"a": "(masīvs1; masīvs2)",
		"d": "Atgriež F testa rezultātus - divu zaru varbūtību, ka dispersijas Masīvā1 un Masīvā2 nav nozīmīgi atšķirīgas",
		"ad": "ir pirmais datu masīvs vai diapazons; tie var būt skaitļi vai nosaukumi, masīvi vai atsauces, kurās ir skaitļi (atstarpes tiek ignorētas)!ir otrais datu masīvs vai diapazons; tie var būt skaitļi vai nosaukumi, masīvi vai atsauces, kurās ir skaitļi (atstarpes tiek ignorētas)"
	},
	"FISHER": {
		"a": "(x)",
		"d": "Atgriež Fišera transformāciju",
		"ad": "ir vērtība, kuras transformācija jāiegūst - skaitlis no -1 un 1, neieskaitot -1 un 1"
	},
	"FISHERINV": {
		"a": "(y)",
		"d": "Atgriež apgrieztu Fišera transformāciju: ja y = FISHER(x), FISHERINV(y) = x",
		"ad": "ir vērtība, kurai jāiegūst apgrieztā transformācija"
	},
	"FORECAST": {
		"a": "(x; zināmie_y; zināmie_x)",
		"d": "Izmantojot esošās vērtības, aprēķina vai prognozē nākotnes vērtību saskaņā ar lineāru tendences līkni",
		"ad": "ir datu punkts, kuram jāprognozē vērtība; tai jābūt skaitliskai vērtībai!ir atkarīgais skaitlisku datu masīvs vai diapazons!ir neatkarīgais skaitlisku datu masīvs vai diapazons. Zināmo_x dispersija nedrīkst būt nulle"
	},
	"FORECAST.ETS": {
		"a": "(mērķa_datums; vērtības; laika_grafiks; [sezonalitāte]; [datu_pabeigšana]; [apkopojums])",
		"d": "Atgriež prognozēto vērtību konkrētam nākotnes mērķa datumam, izmantojot eksponenciālo līdzināšanas metodi.",
		"ad": "ir datu punkts, kuram Spreadsheet Editor prognozē vērtību. Tam ir jāturpina vērtību raksts laika grafikā.!ir skaitlisko vērtību masīvs vai diapazons, ko prognozējat.!ir neatkarīgais skaitlisko datu masīvs vai diapazons. Datumiem laika grafikā ir jābūt konsekventam solim starp tiem, un tas nevar būt nulle.!ir neobligāta skaitliska vērtība, kas norāda sezonālā modeļa garumu. Noklusējuma vērtība 1 norāda, ka sezonalitāte tiek konstatēta automātiski.!ir neobligāta vērtība trūkstošo vērtību apstrādei. Noklusējuma vērtība 1 aizstāj trūkstošās vērtības, izmantojot interpolāciju, bet 0 aizstāj tās ar nullēm.!ir neobligāta skaitliska vērtība vairāku vērtību apkopošanai ar vienu un to pašu laikspiedolu. Ja tā ir tukša, programma Spreadsheet Editor nosaka vidējās vērtības."
	},
	"FORECAST.ETS.CONFINT": {
		"a": "(target_date; values; timeline; [confidence_level]; [seasonality]; [data_completion]; [aggregation])",
		"d": "Atgriež ticamības intervālu prognozētajai vērtībai norādītajā mērķa datumā.",
		"ad": "ir datu punkts, kuram Spreadsheet Editor prognozē vērtību. Tam ir jāturpina vērtību raksts laika grafikā.!ir skaitlisko vērtību masīvs vai diapazons, ko prognozējat.!ir neatkarīgais skaitlisko datu masīvs vai diapazons. Datumiem laika grafikā ir jābūt konsekventam solim starp tiem, un tas nevar būt nulle.!ir skaitlis starp 0 un 1, kas norāda ticamības līmeni aprēķinātajam ticamības intervālam. Noklusējuma vērtība ir .95.!ir neobligāta skaitliska vērtība, kas norāda sezonālā modeļa garumu. Noklusējuma vērtība 1 norāda, ka sezonalitāte tiek konstatēta automātiski.!ir neobligāta vērtība trūkstošo vērtību apstrādei. Noklusējuma vērtība 1 aizstāj trūkstošās vērtības, izmantojot interpolāciju, bet 0 aizstāj tās ar nullēm.!ir neobligāta skaitliska vērtība vairāku vērtību apkopošanai ar vienu un to pašu laikspiedolu. Ja tā ir tukša, programma Spreadsheet Editor nosaka vidējās vērtības."
	},
	"FORECAST.ETS.SEASONALITY": {
		"a": "(vērtības; laika_grafiks; [datu_pabeigšana]; [apkopojums])",
		"d": "Atgriež tā atkārtotās modeļa garumu, ko programma noteica norādītajai laika sērijai.",
		"ad": "ir skaitlisku datu masīvs vai diapazons, ko prognozējat.!ir neatkarīgs skaitlisku datu masīvs vai diapazons. Datumiem laika grafikā jābūt konsekventam solim starp tiem, un tas nevar būt nulle.!ir neobligāta vērtība trūkstošo vērtību apstrādei. 0 aizstāj trūkstošās vērtības ar nullēm. Noklusējuma vērtība (1) aizstāj trūkstošās vērtības, izmantojot interpolāciju, bet 0 tās aizstāj ar nullēm.!ir neobligāta skaitliska vērtība vairāku vērtību apkopošanai ar vienu un to pašu laikspiedolu. Ja tā ir tukša, programma Spreadsheet Editor nosaka vidējās vērtības."
	},
	"FORECAST.ETS.STAT": {
		"a": "(vērtības; laika_grafiks; statistikas_tips; [sezonalitāte]; [datu_pabeigšana]; [apkopojums])",
		"d": "Atgriež pieprasīto prognozes statistiku.",
		"ad": "ir skaitlisku datu masīvs vai diapazons, ko prognozējat.!ir neatkarīgs skaitlisku datu masīvs vai diapazons. Starp datumiem laika grafikā jābūt konsekventam solim, un tas nevar būt nulle.!ir skaitlis no 1 līdz 8, kas norāda uz to, kuru statistiku Spreadsheet Editor atgriezīs aprēķinātajai prognozei. !ir neobligāta skaitliska vērtība, kas norāda sezonālā modeļa garumu. Noklusējuma vērtība (1) norāda uz to, ka sezonalitāte tiek konstatēta automātiski.!ir neobligāta vērtība trūkstošo vērtību apstrādei. 0 aizstāj trūkstošās vērtības ar nullēm. Noklusējuma vērtība (1) aizstāj trūkstošās vērtības, izmantojot interpolāciju, bet 0 tās aizstāj ar nullēm.!ir neobligāta skaitliska vērtība vairāku vērtību apkopošanai ar vienu un to pašu laikspiedolu. Ja tā ir tukša, programma Spreadsheet Editor nosaka vidējās vērtības."
	},
	"FORECAST.LINEAR": {
		"a": "(x; zināmie_y; zināmie_x)",
		"d": "Izmantojot esošās vērtības, aprēķina vai prognozē nākotnes vērtību saskaņā ar lineāru tendences līkni",
		"ad": "ir datu punkts, kuram jāprognozē vērtība; tai jābūt skaitliskai vērtībai!ir atkarīgais skaitlisku datu masīvs vai diapazons!ir neatkarīgais skaitlisku datu masīvs vai diapazons. Zināmo_x dispersija nedrīkst būt nulle"
	},
	"FREQUENCY": {
		"a": "(datu_masīvs; intervālu_masīvs)",
		"d": "Aprēķina, cik bieži vērtības sastopamas vērtību diapazonā un pēc tam atgriež vertikālu skaitļu masīvu, kurā ir par vienu elementu vairāk nekā Intervālu_masīvā",
		"ad": "ir vērtību kopas masīvs vai atsauce uz vērtību kopu, kurā jāaprēķina sastopamības biežums (atstarpes un teksts tiek ignorēts)!ir intervālu masīvs vai atsauce uz intervāliem, kādā jāsagrupē vērtības datu_masīvā"
	},
	"GAMMA": {
		"a": "(x)",
		"d": "Atgriež gamma funkcijas vērtību",
		"ad": "ir vērtība, kurai jāaprēķina gamma"
	},
	"GAMMADIST": {
		"a": "(x; alfa; beta; kumulatīvā)",
		"d": "Atgriež gamma sadalījumu",
		"ad": "ir vērtība, no kuras jānovērtē sadalījums; tas ir nenegatīvs skaitlis!ir sadalījuma parametrs; tas ir pozitīvs skaitlis!ir sadalījuma parametrs; tas ir pozitīvs skaitlis. Ja beta = 1, funkcija GAMMADIST atgriež standarta gamma sadalījumu!ir loģiskā vērtība: atgriezt kumulatīvo sadalījuma funkciju = TRUE; atgriezt varbūtību masas funkciju = FALSE vai izlaists"
	},
	"GAMMA.DIST": {
		"a": "(x; alfa; beta; kumulatīvā)",
		"d": "Atgriež gamma sadalījumu",
		"ad": "ir vērtība, no kuras jānovērtē sadalījums; tas ir nenegatīvs skaitlis!ir sadalījuma parametrs; tas ir pozitīvs skaitlis!ir sadalījuma parametrs; tas ir pozitīvs skaitlis. Ja beta = 1, funkcija GAMMA.DIST atgriež standarta gamma sadalījumu!ir loģiskā vērtība: atgriezt kumulatīvo sadalījuma funkciju = TRUE; atgriezt varbūtību masas funkciju = FALSE vai izlaists"
	},
	"GAMMAINV": {
		"a": "(varbūtība; alfa; beta)",
		"d": "Atgriež apgrieztu gamma kumulatīvo sadalījumu: ja p = GAMMADIST(x,...), GAMMAINV(p,...) = x",
		"ad": "ir varbūtība, kas saistīta ar gamma sadalījumu; tas ir skaitlis no 0 līdz 1 ieskaitot!ir sadalījuma parametrs; tas ir pozitīvs skaitlis!ir sadalījuma parametrs; tas ir pozitīvs skaitlis. Ja beta = 1, GAMMAINV atgriež apgrieztu standarta gamma sadalījumu"
	},
	"GAMMA.INV": {
		"a": "(varbūtība; alfa; beta)",
		"d": "Atgriež apgrieztu gamma kumulatīvo sadalījumu: ja p = GAMMA.DIST(x,...), GAMMA.INV(p,...) = x",
		"ad": "ir varbūtība, kas saistīta ar gamma sadalījumu; tas ir skaitlis no 0 līdz 1 ieskaitot!ir sadalījuma parametrs; tas ir pozitīvs skaitlis!ir sadalījuma parametrs; tas ir pozitīvs skaitlis. Ja beta = 1, GAMMA.INV atgriež apgrieztu standarta gamma sadalījumu"
	},
	"GAMMALN": {
		"a": "(x)",
		"d": "Atgriež gamma funkcijas naturālo logaritmu",
		"ad": "ir vērtība, kam jāaprēķina funkcija GAMMALN, pozitīvs skaitlis"
	},
	"GAMMALN.PRECISE": {
		"a": "(x)",
		"d": "Atgriež gamma funkcijas naturālo logaritmu",
		"ad": "ir vērtība, kam jāaprēķina funkcija GAMMALN.PRECISE, pozitīvs skaitlis"
	},
	"GAUSS": {
		"a": "(x)",
		"d": "Atgriež par 0,5 mazāk nekā standarta parastais kumulatīvais sadalījums",
		"ad": "ir vērtība, kurai jāveido sadalījums"
	},
	"GEOMEAN": {
		"a": "(skaitlis1; [skaitlis2]; ...)",
		"d": "Atgriež pozitīvu skaitlisku datu masīva vai diapazona vidējo ģeometrisko",
		"ad": "ir 1 līdz 255 skaitļu vai nosaukumu, masīvu vai atsauču, kuros ietilpst skaitļi, kam var aprēķināt vidējo"
	},
	"GROWTH": {
		"a": "(zināmie_y; [zināmie_x]; [jaunie_x]; [konst])",
		"d": "Atgriež skaitļus eksponenciālā progresijā saskaņā ar zināmo datu punktiem",
		"ad": "ir jau zināmo y vērtību kopa relācijā y=b*m^x - pozitīvu skaitļu diapazons vai masīvs!ir tādu x vērtību papildu kopa, kuras, iespējams, ir zināmas relācijā y=b*m^x - masīvs vai diapazons, kas ir tikpat liels kā Zināmie_y!ir jaunas x vērtības, kurām funkcijai GROWTH jāatgriež atbilstošās y vērtības!ir loģiskā vērtība: konstante b tiek aprēķināta kā parasti, ja Konst = TRUE; b tiek iestatīts vienāds ar 1, ja Konst = FALSE vai izlaists"
	},
	"HARMEAN": {
		"a": "(skaitlis1; [skaitlis2]; ...)",
		"d": "Atgriež pozitīvu skaitļu kopas vidējo harmonisko: apgriezto skaitļu apgriezto vidējo aritmētisko",
		"ad": "ir 1 līdz 255 skaitļu vai nosaukumu, masīvu vai atsauču, kuros ietilpst skaitļi, kam aprēķināms vidējais harmoniskais"
	},
	"HYPGEOM.DIST": {
		"a": "(izlase_labvēlizn; skaits_izlasē; populācija_labvēlizn; skaits_pop; kumulatīvā)",
		"d": "Atgriež hiperģeometrisko sadalījumu",
		"ad": "ir labvēlīgu iznākumu skaits izlasē!ir izlases lielums!ir labvēlīgu iznākumu skaits populācijā!ir populācijas lielums!ir loģiskā vērtība: kumulatīvajai sadalījuma funkcijai izmantojiet TRUE; varbūtības blīvuma funkcijai izmantojiet FALSE"
	},
	"HYPGEOMDIST": {
		"a": "(izlase_labvēlizn; skaitlis_izlase; populācija_labvēlizn; skaitlis_pop)",
		"d": "Atgriež hiperģeometrisku sadalījumu",
		"ad": "ir labvēlīgu iznākumu skaits izlasēs!ir izlases lielums!ir labvēlīgu iznākumu skaits populācijā!ir populācijas lielums"
	},
	"INTERCEPT": {
		"a": "(zināmie_y; zināmie_x)",
		"d": "Izmantojot regresijas taisni, kas novilkta caur zināmajām x vērtībām un y vērtībām un visvairāk tām atbilst, aprēķina punktu, kurā taisne krustosies ar y asi",
		"ad": "ir atkarīgā novērojumu vai datu kopa; tie var būt skaitļi vai nosaukumi, masīvi vai atsauces, kurās ir skaitļi!ir neatkarīgā novērojumu vai datu kopa; tie var būt skaitļi vai nosaukumi, masīvi vai atsauces, kurās ir skaitļi"
	},
	"KURT": {
		"a": "(skaitlis1; [skaitlis2]; ...)",
		"d": "Atgriež datu kopas ekscesa koeficientu",
		"ad": "ir 1 līdz 255 skaitļu vai nosaukumu, masīvu vai atsauču, kurās ietilpst skaitļi, kam aprēķināms ekscesa koeficients"
	},
	"LARGE": {
		"a": "(masīvs; k)",
		"d": "Atgriež datu kopas k-to lielāko vērtību. Piemēram, piekto lielāko skaitli",
		"ad": "ir datu masīvs vai diapazons, kam jānosaka k-tā lielākā vērtība!ir atgriežamās vērtības pozīcija (sākot ar lielāko) masīvā vai šūnu diapazonā"
	},
	"LINEST": {
		"a": "(zināmie_y; [zināmie_x]; [konst]; [statist])",
		"d": "Atgriež statistiku, kas raksturo lineāru tendences līkni pa zināmo datu punktiem, novelkot taisni ar mazāko kvadrātu metodi",
		"ad": "ir y vērtību kopa, kas jau zināma relācijā y=mx+b!ir x vērtību papildu kopa, kuras, iespējams, jau ir zināmas relācijā y=mx+b!ir loģiskā vērtība: konstante b tiek aprēķināta kā parasti, ja Konst = TRUE vai izlaists; b tiek iestatīts vienāds ar nulli, ja Konst = FALSE!ir loģiskā vērtība: atgriež papildu regresijas statistiku = TRUE; atgriež m koeficientus un konstanti b = FALSE vai izlaists"
	},
	"LOGEST": {
		"a": "(zināmie_y; [zināmie_x]; [konst]; [statist])",
		"d": "Atgriež statistiku, kas raksturo ar zināmajiem datu punktiem saskanošo eksponentlīkni",
		"ad": "ir jau zināmo y vērtību kopa relācijā y=b*m^x!ir to x vērtību papildkopa, kuras, iespējams, jau ir zināmas relācijā y=b*m^x!ir loģiskā vērtība: konstante b tiek aprēķināta kā parasti, ja Konst = TRUE vai izlaists; b tiek iestatīts vienāds ar 1, ja Konst = FALSE!ir loģiskā vērtība: atgriež papildu regresijas statistiku = TRUE; atgriež m koeficientus un koeficientu b = FALSE vai izlaiž"
	},
	"LOGINV": {
		"a": "(varbūtība; vidējais; standartnovirze)",
		"d": "Atgriež apgrieztu logaritmiski normālu kumulatīvu x sadalījuma funkciju, kur ln(x) parasti ir sadalīts ar parametriem Vidējais un Standartnovirze",
		"ad": "ir varbūtība, kas saistīta ar logaritmiski normālu sadalījumu; tas ir skaitlis no 0 līdz 1 ieskaitot!ir ln(x) vidējais!ir ln(x) standartnovirze; tas ir pozitīvs skaitlis"
	},
	"LOGNORM.DIST": {
		"a": "(x; vidējais; standartnovirze; kumulatīvā)",
		"d": "Atgriež x logaritmiski normālo sadalījumu, kur ln(x) ir normāli sadalīts ar parametriem Vidējais un Standartnovirze",
		"ad": "ir vērtība, kurā jāaprēķina funkcija - pozitīvs skaitlis!ir ln(x) vidējais!ir ln(x) standartnovirze - pozitīvs skaitlis!ir loģiskā vērtība: kumulatīvajai sadalījuma funkcijai izmantojiet TRUE; varbūtības blīvuma funkcijai izmantojiet FALSE"
	},
	"LOGNORM.INV": {
		"a": "(varbūtība; vidējais; standartnovirze)",
		"d": "Atgriež apgrieztu logaritmiski normālu kumulatīvu x sadalījuma funkciju, kur ln(x) ir normāli sadalīts ar parametriem Vidējais un Standartnovirze",
		"ad": "ir varbūtība, kas saistīta ar logaritmiski normālu sadalījumu; tas ir skaitlis no 0 līdz 1 ieskaitot!ir ln(x) vidējais!ir ln(x) standartnovirze; tas ir pozitīvs skaitlis"
	},
	"LOGNORMDIST": {
		"a": "(x; vidējais; standartnovirze)",
		"d": "Atgriež kumulatīvo logaritmiski normālo x sadalījumu, kur ln(x) parasti ir sadalīts ar parametriem Vidējais un Standartnovirze",
		"ad": "ir vērtība, kurā jānovērtē funkcija; tas ir pozitīvs skaitlis!ir ln(x) vidējais!ir ln(x) standartnovirze; tas ir pozitīvs skaitlis"
	},
	"MAX": {
		"a": "(skaitlis1; [skaitlis2]; ...)",
		"d": "Atgriež vislielāko vērtību no vērtību kopas. Ignorē loģiskās vērtības un tekstu",
		"ad": "ir 1 līdz 255 skaitļu, tukšu šūnu, loģisko vērtību vai teksta skaitļu, no kuriem iegūstams lielākais"
	},
	"MAXA": {
		"a": "(vērtība1; [vērtība2]; ...)",
		"d": "Atgriež lielāko vērtību kopas vērtību. Neignorē loģiskās vērtības un tekstu",
		"ad": "ir 1 līdz 255 skaitļu, tukšu šūnu, loģisko vērtību vai teksta skaitļu, kam jānoskaidro maksimālā vērtība"
	},
	"MAXIFS": {
		"a": "(maksimālais_diapazons; kritēriju_diapazons; kritēriji; ...)",
		"d": "Atgriež maksimālo vērtību šūnās, ko norāda attiecīgā nosacījumu vai kritēriju kopa",
		"ad": "šūnas, kurās noteikt maksimālo vērtību!ir to šūnu diapazons, kuras vēlaties novērtēt konkrētajam nosacījumam!ir nosacījums vai kritērijs skaitļa, izteiksmes vai teksta formā, kas definē to, kuras šūnas tiks iekļautas, nosakot maksimālo vērtību"
	},
	"MEDIAN": {
		"a": "(skaitlis1; [skaitlis2]; ...)",
		"d": "Atgriež mediānu jeb skaitli norādīto skaitļu kopas vidū",
		"ad": "ir 1 līdz 255 skaitļu vai nosaukumu, masīvu vai atsauču, kurās ir skaitļi, kam jāuzzina mediāna"
	},
	"MIN": {
		"a": "(skaitlis1; [skaitlis2]; ...)",
		"d": "Atgriež vismazāko skaitli vērtību kopā. Ignorē loģiskās vērtības un tekstu",
		"ad": "ir 1 līdz 255 skaitļu, tukšu šūnu, loģisko vērtību vai teksta skaitļu, no kuriem iegūstams mazākais"
	},
	"MINA": {
		"a": "(vērtība1; [vērtība2]; ...)",
		"d": "Atgriež mazāko vērtību kopas vērtību. Neignorē loģiskās vērtības un tekstu",
		"ad": "ir 1 līdz 255 skaitļu, tukšu šūnu, loģisko vērtību vai teksta skaitļu, kam jānoskaidro minimālā vērtība"
	},
	"MINIFS": {
		"a": "(minimālais_diapazons; kritēriju_diapazons; kritēriji; ...)",
		"d": "Atgriež minimālo vērtību šūnās, ko norāda attiecīgā nosacījumu vai kritēriju kopa",
		"ad": "šūnas, kurās noteikt minimālo vērtību!ir to šūnu diapazons, kuras vēlaties novērtēt konkrētajam nosacījumam!ir nosacījums vai kritērijs skaitļa, izteiksmes vai teksta formā, kas definē to, kuras šūnas tiks iekļautas, nosakot minimālo vērtību"
	},
	"MODE": {
		"a": "(skaitlis1; [skaitlis2]; ...)",
		"d": "Atgriež datu masīvā vai diapazonā visbiežāk sastopamo vai atkārtoto vērtību",
		"ad": "ir no 1 līdz 255 skaitļiem vai nosaukumiem, masīviem vai atsaucēm, kurām aprēķināma moda"
	},
	"MODE.MULT": {
		"a": "(skaitlis1; [skaitlis2]; ...)",
		"d": "Atgriež vertikālu visbiežāk sastopamo vai atkārtojošos vērtību masīvu kā datu masīvu vai diapazonu. Horizontālam masīvam izmantojiet =TRANSPOSE(MODE.MULT(skaitlis1,skaitlis2,...))",
		"ad": "ir no 1 līdz 255 skaitļiem vai nosaukumiem, masīviem vai atsaucēm, kurās ir skaitļi, kam aprēķināma moda"
	},
	"MODE.SNGL": {
		"a": "(skaitlis1; [skaitlis2]; ...)",
		"d": "Atgriež datu masīvā vai diapazonā visbiežāk sastopamo vai atkārtoto vērtību",
		"ad": "ir no 1 līdz 255 skaitļiem vai nosaukumiem, masīviem vai atsaucēm, kurās ir skaitļi, kam aprēķināma moda"
	},
	"NEGBINOM.DIST": {
		"a": "(nelabvēlizn_skaits; labvēlizn_skaits; labvēlizn_varbūtība; kumulatīvā)",
		"d": "Atgriež negatīvu binomiālo sadalījumu, varbūtību, ka būs (nelabvēlizn_ skaits) nelabvēlīgi iznākumi pirms (labvēlizn_skaits). labvēlīgā iznākuma ar (labvēlizn_varbūtība) varbūtību",
		"ad": "ir nelabvēlīgu iznākumu skaits!ir labvēlīgu iznākumu skaita slieksnis!ir labvēlīgu iznākumu varbūtība - skaitlis no 0 līdz 1!ir loģiskā vērtība: kumulatīvajai sadalījuma funkcijai izmantojiet TRUE; varbūtību masas funkcijai izmantojiet FALSE"
	},
	"NEGBINOMDIST": {
		"a": "(nelabvēlizn_skaits; labvēlizn_skaits; labvēlizn_varbūtība)",
		"d": "Atgriež negatīvu binomiālo sadalījumu, varbūtību, ka būs (nelabvēlizn_skaits) nelabvēlīgi iznākumi pirms (labvēlizn_skaits). labvēlīgā iznākumā ar (labvēlizn_varbūtība) varbūtību",
		"ad": "ir nelabvēlīgu iznākumu skaits!ir labvēlīgu iznākumu skaita slieksnis!ir labvēlīgu iznākumu varbūtība - skaitlis no 0 līdz 1"
	},
	"NORM.DIST": {
		"a": "(x; vidējais; standartnovirze; kumulatīvā)",
		"d": "Atgriež norādītā vidējā lieluma un standartnovirzes normālo sadalījumu",
		"ad": "ir vērtība, kam jāiegūst sadalījums!ir sadalījuma vidējais aritmētiskais!ir sadalījuma standartnovirze; tas ir pozitīvs skaitlis!ir loģiskā vērtība: kumulatīvajai sadalījuma funkcijai izmantojiet TRUE; varbūtības blīvuma funkcijai izmantojiet FALSE"
	},
	"NORMDIST": {
		"a": "(x; vidējais; standartnovirze; kumulatīvā)",
		"d": "Atgriež norādītā vidējā lieluma un standartnovirzes normālo kumulatīvo sadalījumu",
		"ad": "ir vērtība, kam jāiegūst sadalījums!ir sadalījuma vidējais aritmētiskais!ir sadalījuma standartnovirze; tas ir pozitīvs skaitlis!ir loģiskā vērtība: kumulatīvajai sadalījuma funkcijai izmantojiet TRUE; varbūtības blīvuma funkcijai izmantojiet FALSE"
	},
	"NORM.INV": {
		"a": "(varbūtība; vidējais; standartnovirze)",
		"d": "Atgriež apgrieztu norādītās vidējās vērtības un standartnovirzes normālo kumulatīvo sadalījumu",
		"ad": "ir varbūtība, kas atbilst normālajam sadalījumam; tas ir skaitlis no 0 līdz 1 ieskaitot!ir sadalījuma vidējais aritmētiskais!ir sadalījuma standartnovirze; tas ir pozitīvs skaitlis"
	},
	"NORMINV": {
		"a": "(varbūtība; vidējais; standartnovirze)",
		"d": "Atgriež norādītās vidējās vērtības un standartnovirzes apgrieztu normālo kumulatīvo sadalījumu",
		"ad": "ir varbūtība, kas atbilst normālajam sadalījumam; tas ir skaitlis no 0 līdz 1 ieskaitot!ir sadalījuma vidējais aritmētiskais!ir sadalījuma standartnovirze; tas ir pozitīvs skaitlis"
	},
	"NORM.S.DIST": {
		"a": "(z; kumulatīvā)",
		"d": "Atgriež standarta normālo sadalījumu (tā vidējais ir nulle, bet standartnovirze - viens)",
		"ad": "ir vērtība, kam jāaprēķina sadalījums!ir loģiskā vērtība, kas funkcijai jāatgriež: kumulatīvajai sadalījuma funkcijai = TRUE; varbūtības blīvuma funkcijai = FALSE"
	},
	"NORMSDIST": {
		"a": "(z)",
		"d": "Atgriež standarta normālo kumulatīvo sadalījumu (tā vidējais ir nulle, bet standartnovirze - viens)",
		"ad": "ir vērtība, kurai jāiegūst sadalījums"
	},
	"NORM.S.INV": {
		"a": "(varbūtība)",
		"d": "Atgriež apgrieztu standarta normālo kumulatīvo sadalījumu (tā vidējais ir nulle, bet standartnovirze - viens)",
		"ad": "ir varbūtība, kas atbilst normālajam sadalījumam; tas ir skaitlis no 0 līdz 1 ieskaitot"
	},
	"NORMSINV": {
		"a": "(varbūtība)",
		"d": "Atgriež apgrieztu standarta normālo kumulatīvo sadalījumu (tā vidējais ir nulle, bet standartnovirze - viens)",
		"ad": "ir varbūtība, kas atbilst normālajam sadalījumam; tas ir skaitlis no 0 līdz 1 ieskaitot"
	},
	"PEARSON": {
		"a": "(masīvs1; masīvs2)",
		"d": "Atgriež Pīrsona korelācijas koeficientu r",
		"ad": "ir neatkarīgu vērtību kopa!ir atkarīgu vērtību kopa"
	},
	"PERCENTILE": {
		"a": "(masīvs; k)",
		"d": "Atgriež diapazona vērtību k-to procentili",
		"ad": "ir datu masīvs vai diapazons, kas definē relatīvo novietojumu!ir procentiles vērtība no 0 līdz 1 ieskaitot"
	},
	"PERCENTILE.EXC": {
		"a": "(masīvs; k)",
		"d": "Atgriež diapazona vērtību k-to procentili, kur k ir diapazons no 0 līdz 1 neieskaitot",
		"ad": "ir datu masīvs vai diapazons, kas definē relatīvo novietojumu!ir procentiles vērtība no 0 līdz 1 ieskaitot"
	},
	"PERCENTILE.INC": {
		"a": "(masīvs; k)",
		"d": "Atgriež diapazona vērtību k-to procentili, kur k ir diapazons no 0 līdz 1 ieskaitot",
		"ad": "ir datu masīvs vai diapazons, kas definē relatīvo novietojumu!ir procentiles vērtība no 0 līdz 1 ieskaitot"
	},
	"PERCENTRANK": {
		"a": "(masīvs; x; [nozīmība])",
		"d": "Atgriež datu kopā ietilpstošas vērtības rangu procentuāli no datu kopas",
		"ad": "ir datu masīvs vai diapazons, kurā skaitliskās vērtības definē relatīvo novietojumu!ir vērtība, kam noskaidrojams rangs!ir neobligāta vērtība, kas identificē nozīmīgu ciparu skaitu atgrieztajā procentuālajā vērtībā; ja izlaiž, tie ir trīs cipari (0,xxx%)"
	},
	"PERCENTRANK.EXC": {
		"a": "(masīvs; x; [nozīmība])",
		"d": "Atgriež datu kopā ietilpstošas vērtības rangu kā procentu (no 0 līdz 1 neieskaitot) no datu kopas",
		"ad": "ir datu masīvs vai diapazons, kurā skaitliskās vērtības definē relatīvo novietojumu!ir vērtība, kam noskaidrojams rangs!ir neobligāta vērtība, kas identificē nozīmīgu ciparu skaitu atgrieztajā procentuālajā vērtībā; ja izlaiž, tie ir trīs cipari (0,xxx%)"
	},
	"PERCENTRANK.INC": {
		"a": "(masīvs; x; [nozīmība])",
		"d": "Atgriež datu kopā ietilpstošas vērtības rangu kā procentu (no 0 līdz 1 ieskaitot) no datu kopas",
		"ad": "ir datu masīvs vai diapazons, kurā skaitliskās vērtības definē relatīvo novietojumu!ir vērtība, kam noskaidrojams rangs!ir neobligāta vērtība, kas identificē nozīmīgu ciparu skaitu atgrieztajā procentuālajā vērtībā; ja izlaiž, tie ir trīs cipari (0,xxx%)"
	},
	"PERMUT": {
		"a": "(skaitlis; izvēlētais_skaitlis)",
		"d": "Atgriež no visiem objektiem izvēlēta noteikta objektu skaita permutāciju skaitu",
		"ad": "ir objektu kopskaits!ir objektu skaits katrā permutācijā"
	},
	"PERMUTATIONA": {
		"a": "(skaitlis; izvēlētais_skaitlis)",
		"d": "Atgriež no visiem objektiem izvēlēta noteikta objektu skaita permutāciju skaitu",
		"ad": "ir objektu kopskaits!ir objektu skaits katrā permutācijā"
	},
	"PHI": {
		"a": "(x)",
		"d": "Atgriež standarta normālā sadalījuma blīvuma funkcijas vērtību",
		"ad": "ir skaitlis, kuram jāaprēķina standarta normālā sadalījuma blīvums"
	},
	"POISSON": {
		"a": "(x; vidējais; kumulatīvā)",
		"d": "Atgriež Puasona sadalījumu",
		"ad": "ir notikumu skaits!ir sagaidāmā skaitliskā vērtība; tas ir pozitīvs skaitlis!ir loģiskā vērtība: kumulatīvajai Puasona varbūtībai izmantojiet TRUE; Puasona varbūtību masas sadalījuma funkcijai izmantojiet FALSE"
	},
	"POISSON.DIST": {
		"a": "(x; vidējais; kumulatīvā)",
		"d": "Atgriež Puasona sadalījumu",
		"ad": "ir notikumu skaits!ir sagaidāmā skaitliskā vērtība; tas ir pozitīvs skaitlis!ir loģiskā vērtība: kumulatīvajai Puasona varbūtībai izmantojiet TRUE; Puasona varbūtību masas funkcijai izmantojiet FALSE"
	},
	"PROB": {
		"a": "(x_diapazons; varb_diapazons; zemākā_robeža; [augstākā_robeža])",
		"d": "Atgriež varbūtību, ka vērtības diapazonā atrodas starp abām robežām vai ir vienādas ar zemāko robežu",
		"ad": "ir skaitlisko vērtību x diapazons, ar kuru ir saistītas varbūtības!ir to varbūtību kopa, kuras saistītas ar vērtībām X_diapazonā, vērtības no 0 līdz 1, neieskaitot 0!ir vērtības zemākā robeža, kam jānoskaidro varbūtība!ir neobligāta vērtības augšējā robeža, Funkcija PROB atgriež varbūtību, ka X_diapazona vērtības ir vienādas ar Zemāko_robežu"
	},
	"QUARTILE": {
		"a": "(masīvs; kvartile)",
		"d": "Atgriež datu kopas kvartili",
		"ad": "ir skaitlisku vērtību masīvs vai šūnu diapazons, kam aprēķināma kvartiles vērtība!ir skaitlis: minimālā vērtība = 0; 1. kvartile = 1; mediānas vērtība = 2; 3. kvartile = 3; maksimālā vērtība = 4"
	},
	"QUARTILE.INC": {
		"a": "(masīvs; kvartile)",
		"d": "Atgriež datu kopas kvartili, izmantojot procentiles vērtības no 0 līdz 1 ieskaitot",
		"ad": "ir skaitlisku vērtību masīvs vai šūnu diapazons, kam aprēķināma kvartiles vērtība!ir skaitlis: minimālā vērtība = 0; 1. kvartile = 1; mediānas vērtība = 2; 3. kvartile = 3; maksimālā vērtība = 4"
	},
	"QUARTILE.EXC": {
		"a": "(masīvs; kvartile)",
		"d": "Atgriež datu kopas kvartili, izmantojot procentiles vērtības no 0 līdz 1 neieskaitot",
		"ad": "ir skaitlisku vērtību masīvs vai šūnu diapazons, kam aprēķināma kvartiles vērtība!ir skaitlis: minimālā vērtība = 0; 1. kvartile = 1; mediānas vērtība = 2; 3. kvartile = 3; maksimālā vērtība = 4"
	},
	"RANK": {
		"a": "(skaitlis; ats; [kārtība])",
		"d": "Atgriež skaitļa rangu skaitļu sarakstā: tā lielumu attiecībā pret pārējām vērtībām sarakstā",
		"ad": "ir skaitlis, kura rangs ir jāatrod!ir skaitļu saraksta masīvs vai atsauce uz to. Vērtības, kas nav skaitliskas, tiek ignorētas!ir skaitlis: rangs dilstošā secībā kārtotā sarakstā = 0 vai izlaists; rangs augošā secībā kārtotā sarakstā = jebkura vērtība, kas nav nulle"
	},
	"RANK.AVG": {
		"a": "(skaitlis; ats; [kārtība])",
		"d": "Atgriež skaitļa rangu skaitļu sarakstā: tā lielumu attiecībā pret pārējām vērtībām sarakstā; ja vairākām vērtībām ir vienāds rangs, tiek atgriezts vidējais rangs",
		"ad": "ir skaitlis, kura rangs ir jāatrod!ir skaitļu saraksta masīvs vai atsauce uz to. Vērtības, kas nav skaitliskas, tiek ignorētas!ir skaitlis: rangs dilstošā secībā kārtotā sarakstā = 0 vai izlaists; rangs augošā secībā kārtotā sarakstā = jebkura vērtība, kas nav nulle"
	},
	"RANK.EQ": {
		"a": "(skaitlis; ats; [kārtība])",
		"d": "Atgriež skaitļa rangu skaitļu sarakstā: tā lielumu attiecībā pret pārējām vērtībām sarakstā; ja vairākām vērtībām ir rangs, tiek atgriezts augstākais šīs vērtību kopas rangs",
		"ad": "ir skaitlis, kura rangs ir jāatrod!ir skaitļu saraksta masīvs vai atsauce uz to. Vērtības, kas nav skaitliskas, tiek ignorētas!ir skaitlis: rangs dilstošā secībā kārtotā sarakstā = 0 vai izlaists; rangs augošā secībā kārtotā sarakstā = jebkura vērtība, kas nav nulle"
	},
	"RSQ": {
		"a": "(zināmie_y; zināmie_x)",
		"d": "Atgriež Pīrsona korelācijas koeficienta kvadrātu norādītajos datu punktos",
		"ad": "ir datu punktu masīvs vai diapazons; tie var būt skaitļi vai nosaukumi, masīvi vai atsauces, kurās ietilpst skaitļi!ir datu punktu masīvs vai diapazons; tie var būt skaitļi vai nosaukumi, masīvi vai atsauces, kurās ietilpst skaitļi"
	},
	"SKEW": {
		"a": "(skaitlis1; [skaitlis2]; ...)",
		"d": "Atgriež sadalījuma asimetriju: sadalījuma asimetrijas pakāpi attiecībā pret vidējo",
		"ad": "ir 1 līdz 255 skaitļu vai nosaukumu, masīvu vai atsauču, kurās ietilpst skaitļi, kam aprēķināma asimetrija"
	},
	"SKEW.P": {
		"a": "(skaitlis1; [skaitlis2]; ...)",
		"d": "Atgriež sadalījuma asimetriju, pamatojoties uz kopskaitu: sadalījuma asimetrijas pakāpi attiecībā pret vidējo",
		"ad": "ir 1 līdz 254 skaitļi vai nosaukumi, masīvi vai atsauces, kurās ietilpst skaitļi, kam aprēķināma asimetrija"
	},
	"SLOPE": {
		"a": "(zināmie_y; zināmie_x)",
		"d": "Atgriež lineārās regresijas taisnes slīpumu caur norādītajiem datu punktiem",
		"ad": "ir skaitlisku atkarīgu datu punktu masīvs vai šūnu diapazons; tie var būt skaitļi vai nosaukumi, masīvi vai atsauces, kurās ietilpst skaitļi!ir neatkarīgu datu punktu kopa, tie var būt skaitļi vai nosaukumi, masīvi vai atsauces, kurās ietilpst skaitļi"
	},
	"SMALL": {
		"a": "(masīvs; k)",
		"d": "Atgriež datu kopas k-to mazāko vērtību. Piemēram, piekto mazāko skaitli",
		"ad": "ir datu masīvs vai diapazons, kam jānosaka k-tā mazākā vērtība!ir atgriežamās vērtības pozīcija (sākot ar mazāko) masīvā vai šūnu diapazonā"
	},
	"STANDARDIZE": {
		"a": "(x; vidējais; standartnovirze)",
		"d": "Atgriež tāda sadalījuma normalizētu vērtību, kuru raksturo vidējais un standartnovirze",
		"ad": "ir normalizējamā vērtība!ir sadalījuma vidējais aritmētiskais!ir sadalījuma standartnovirze; tas ir pozitīvs skaitlis"
	},
	"STDEV": {
		"a": "(skaitlis1; [skaitlis2]; ...)",
		"d": "Aprēķina standartnovirzi, izmantojot izlasi (izlasē ignorē loģiskās vērtības un tekstu)",
		"ad": "ir no 1 līdz 255 skaitļiem, kas atbilst populācijas izlasei un kas var būt skaitļi vai atsauces, kurās ir skaitļi"
	},
	"STDEV.P": {
		"a": "(skaitlis1; [skaitlis2]; ...)",
		"d": "Aprēķina standartnovirzi, izmantojot visu populāciju kā argumentus (ignorē loģiskās vērtības un tekstu)",
		"ad": "ir no 1 līdz 255 skaitļiem, kas atbilst populācijai un kas var būt skaitļi vai atsauces, kurās ietilpst skaitļi"
	},
	"STDEV.S": {
		"a": "(skaitlis1; [skaitlis2]; ...)",
		"d": "Aprēķina standartnovirzi, izmantojot izlasi (izlasē ignorē loģiskās vērtības un tekstu)",
		"ad": "ir no 1 līdz 255 skaitļiem, kas atbilst populācijas izlasei un kas var būt skaitļi vai atsauces, kurās ir skaitļi"
	},
	"STDEVA": {
		"a": "(vērtība1; [vērtība2]; ...)",
		"d": "Aplēš standartnovirzi, ņemot vērā izlasi, ieskaitot loģiskās vērtības un tekstu. Tekstam un loģiskajai vērtībai FALSE ir vērtība 0; loģiskajai vērtībai TRUE ir vērtība 1",
		"ad": "ir 1 līdz 255 vērtību, kuras atbilst populācijas izlasei un kuras var būt vērtības vai nosaukumi vai atsauces uz vērtībām"
	},
	"STDEVP": {
		"a": "(skaitlis1; [skaitlis2]; ...)",
		"d": "Aprēķina standartnovirzi, izmantojot visu populāciju kā argumentus (ignorē loģiskās vērtības un tekstu)",
		"ad": "ir no 1 līdz 255 skaitļiem, kas atbilst populācijai un kas var būt skaitļi vai atsauces, kurās ietilpst skaitļi"
	},
	"STDEVPA": {
		"a": "(vērtība1; [vērtība2]; ...)",
		"d": "Aprēķina standartnovirzi, ņemot vērā visu populāciju, arī loģiskās vērtības un tekstu. Tekstam un loģiskajai vērtībai FALSE ir vērtība 0; loģiskajai vērtībai TRUE ir vērtība 1",
		"ad": "ir 1 līdz 255 vērtību, kuras atbilst populācijai un kuras var būt vērtības, nosaukumi, masīvi vai atsauces, kurās ietilpst vērtības"
	},
	"STEYX": {
		"a": "(zināmie_y; zināmie_x)",
		"d": "Atgriež regresijas katra zināmā x prognozētās y vērtības standarta kļūdu",
		"ad": "ir atkarīgu datu punktu masīvs vai diapazons; tie var būt skaitļi vai nosaukumi, masīvi vai atsauces, kurās ietilpst skaitļi!ir neatkarīgu datu punktu masīvs vai diapazons; tie var būt skaitļi vai nosaukumi, masīvi vai atsauces, kurās ietilpst skaitļi"
	},
	"TDIST": {
		"a": "(x; brīvības_pak; zari)",
		"d": "Atgriež Stjūdenta t sadalījumu",
		"ad": "ir skaitliskā vērtība, kurā jānovērtē sadalījums!ir vesels skaitlis, kas norāda sadalījumu raksturojošo brīvības pakāpju skaitu!norāda atgriežamo sadalījuma zaru skaitu: viena zara sadalījums = 1; divu zaru sadalījums = 2"
	},
	"TINV": {
		"a": "(varbūtība; brīvības_pakāpe)",
		"d": "Atgriež divu zaru apgriezto Stjūdenta t sadalījumu",
		"ad": "ir varbūtība, kas saistīta ar divu zaru Stjūdenta t sadalījumu - skaitlis no 0 līdz 1 ieskaitot!ir vesels pozitīvs skaitlis, kas norāda sadalījumu raksturojošo brīvības pakāpju skaitu"
	},
	"T.DIST": {
		"a": "(x; brīvības_pakāpe; kumulatīvā)",
		"d": "Atgriež kreisā zara Stjūdenta t sadalījumu",
		"ad": "ir skaitliska vērtība, kurā novērtēt sadalījumu!ir vesels skaitlis, kas norāda sadalījumu raksturojošo brīvības pakāpju skaitu!ir loģiskā vērtība: kumulatīvajai sadalījuma funkcijai izmantojiet TRUE; varbūtības blīvuma funkcijai izmantojiet FALSE"
	},
	"T.DIST.2T": {
		"a": "(x; brīvības_pakāpe)",
		"d": "Atgriež divu zaru Stjūdenta t sadalījumu",
		"ad": "ir skaitliska vērtība, kurā novērtēt sadalījumu!ir vesels skaitlis, kas norāda sadalījumu raksturojošo brīvības pakāpju skaitu"
	},
	"T.DIST.RT": {
		"a": "(x; brīvības_pakāpe)",
		"d": "Atgriež labā zara Stjūdenta t sadalījumu",
		"ad": "ir skaitliska vērtība, kurā novērtēt sadalījumu!ir vesels skaitlis, kas norāda sadalījumu raksturojošo brīvības pakāpju skaitu"
	},
	"T.INV": {
		"a": "(varbūtība; brīvības_pakāpe)",
		"d": "Atgriež kreisā zara apgriezto Stjūdenta t sadalījumu",
		"ad": "ir varbūtība, kas saistīta ar divu zaru Stjūdenta t sadalījumu - skaitlis no 0 līdz 1 ieskaitot!ir vesels pozitīvs skaitlis, kas norāda sadalījumu raksturojošo brīvības pakāpju skaitu"
	},
	"T.INV.2T": {
		"a": "(varbūtība; brīvības_pakāpe)",
		"d": "Atgriež divu zaru apgriezto Stjūdenta t sadalījumu",
		"ad": "ir varbūtība, kas saistīta ar divu zaru Stjūdenta t sadalījumu - skaitlis no 0 līdz 1 ieskaitot!ir vesels pozitīvs skaitlis, kas norāda sadalījumu raksturojošo brīvības pakāpju skaitu"
	},
	"T.TEST": {
		"a": "(masīvs1; masīvs2; zari; tips)",
		"d": "Atgriež Stjūdenta t testam atbilstošu varbūtību",
		"ad": "ir pirmā datu kopa!ir otrā datu kopa!norāda atgriežamo sadalījuma zaru skaitu: viena zara sadalījums = 1; divu zaru sadalījums = 2!ir t testa tips: pāra = 1, divu izlašu vienāda dispersija (homoskedastiska) = 2, divu izlašu nevienāda dispersija = 3"
	},
	"TREND": {
		"a": "(zināmie_y; [zināmie_x]; [jaunie_x]; [konst])",
		"d": "Izmantojot mazāko kvadrātu metodi, atgriež skaitļus lineārā līknē, kas atbilst zināmiem datu punktiem",
		"ad": "ir tādu y vērtību diapazons vai masīvs, kuras jau ir zināmas relācijā y=mx+b!ir papildu diapazons vai masīvs ar x vērtībām, kuras jau ir zināmas relācijā y=mx+b, masīvs, kurš ir tikpat liels kā Zināmie_y!ir diapazons vai masīvs ar jaunām x vērtībām, kurām funkcijai TREND jāatgriež atbilstošās y vērtības!is loģiskā vērtība: konstante b tiek aprēķināta kā parasti, ja Konst = TRUE vai izlaists; b tiek iestatīts vienāds ar 0, ja Konst = FALSE"
	},
	"TRIMMEAN": {
		"a": "(masīvs; procents)",
		"d": "Atgriež datu vērtības kopas iekšējās daļas vidējo",
		"ad": "ir tādu vērtību diapazons vai masīvs, kuras ir apstrādājamas vidējā iegūšanai!ir no datu kopas augšdaļas un lejasdaļas izslēdzamu datu punktu daļskaitlis"
	},
	"TTEST": {
		"a": "(masīvs1; masīvs2; zari; tips)",
		"d": "Atgriež Stjūdenta t testam atbilstošu varbūtību",
		"ad": "ir pirmā datu kopa!ir otrā datu kopa!norāda atgriežamo sadalījuma zaru skaitu: viena zara sadalījums = 1; divu zaru sadalījums = 2!ir t testa tips: pāru = 1, divu izlašu vienāda dispersija (homoskedastiska)= 2, divu izlašu nevienāda dispersija = 3"
	},
	"VAR": {
		"a": "(skaitlis1; [skaitlis2]; ...)",
		"d": "Aprēķina dispersiju, izmantojot izlasi (izlasē ignorē loģiskās vērtības un tekstu)",
		"ad": "ir no 1 līdz 255 skaitliskiem argumentiem, kas atbilst populācijas izlasei"
	},
	"VAR.P": {
		"a": "(skaitlis1; [skaitlis2]; ...)",
		"d": "Aprēķina dispersiju, izmantojot visu populāciju (ignorē loģiskās vērtības un tekstu populācijā)",
		"ad": "ir no 1 līdz 255 skaitliskiem argumentiem, kas atbilst populācijai"
	},
	"VAR.S": {
		"a": "(skaitlis1; [skaitlis2]; ...)",
		"d": "Aprēķina dispersiju, izmantojot izlasi (izlasē ignorē loģiskās vērtības un tekstu)",
		"ad": "ir no 1 līdz 255 skaitliskiem argumentiem, kas atbilst populācijas izlasei"
	},
	"VARA": {
		"a": "(vērtība1; [vērtība2]; ...)",
		"d": "Aplēš dispersiju, ņemot vērā izlasi, ieskaitot loģiskās vērtības un tekstu. Tekstam un loģiskajai vērtībai FALSE ir vērtība 0; loģiskajai vērtībai TRUE ir vērtība 1",
		"ad": "ir 1 līdz 255 vērtību, kuras atbilst populācijas izlasei"
	},
	"VARP": {
		"a": "(skaitlis1; [skaitlis2]; ...)",
		"d": "Aprēķina dispersiju, izmantojot visu populāciju (ignorē loģiskās vērtības un tekstu populācijā)",
		"ad": "ir no 1 līdz 255 skaitliskiem argumentiem, kas atbilst populācijai"
	},
	"VARPA": {
		"a": "(vērtība1; [vērtība2]; ...)",
		"d": "Aprēķina dispersiju, ņemot vērā visu populāciju, arī loģiskās vērtības un tekstu. Tekstam un loģiskajai vērtībai FALSE ir vērtība 0; loģiskajai vērtībai TRUE ir vērtība 1",
		"ad": "ir 1 līdz 255 argumentu, kuri atbilst populācijai"
	},
	"WEIBULL": {
		"a": "(x; alfa; beta; kumulatīvā)",
		"d": "Atgriež Veibula sadalījumu",
		"ad": "ir vērtība, kurā jānovērtē funkcija, tas ir nenegatīvs skaitlis!ir sadalījuma parametrs; tas ir pozitīvs skaitlis!ir sadalījuma parametrs; tas ir pozitīvs skaitlis!ir loģiskā vērtība: kumulatīvajai sadalījuma funkcijai izmantojiet TRUE; varbūtību masas funkcijai izmantojiet FALSE"
	},
	"WEIBULL.DIST": {
		"a": "(x; alfa; beta; kumulatīvā)",
		"d": "Atgriež Veibula sadalījumu",
		"ad": "ir vērtība, kurā jānovērtē funkcija, tas ir nenegatīvs skaitlis!ir sadalījuma parametrs; tas ir pozitīvs skaitlis!ir sadalījuma parametrs; tas ir pozitīvs skaitlis!ir loģiskā vērtība: kumulatīvajai sadalījuma funkcijai izmantojiet TRUE; varbūtību masas funkcijai izmantojiet FALSE"
	},
	"Z.TEST": {
		"a": "(masīvs; x; [sigma])",
		"d": "Atgriež viena zara z testa P vērtību",
		"ad": "ir datu masīvs vai diapazons, attiecībā pret kuru jāpārbauda X!ir pārbaudāmā vērtība!ir populācijas (zināmās) standartnovirze. Ja izlaista, tiek izmantota izlases standartnovirze"
	},
	"ZTEST": {
		"a": "(masīvs; x; [sigma])",
		"d": "Atgriež viena zara z testa P vērtību",
		"ad": "ir datu masīvs vai diapazons, attiecībā pret kuru jāpārbauda X!ir pārbaudāmā vērtība!ir populācijas (zināmās) standartnovirze. Ja izlaista, tiek izmantota izlases standartnovirze"
	},
	"ACCRINT": {
		"a": "(emisija; pirmie_procenti; apmaksa; likme; nom; biežums; [bāze]; [apr_metode])",
		"d": "Atgriež tāda vērtspapīra uzkrātos procentus, par kuru tiek periodiski maksāti procenti.",
		"ad": "ir vērtspapīra emisijas datums, kas izteikts kā datuma sērijas numurs!ir vērtspapīra pirmo procentu datums, kas izteikts kā datuma sērijas numurs!ir vērtspapīra apmaksas datums, kas izteikts kā datuma sērijas numurs!ir vērtspapīra ikgadējā kupona likme!ir vērtspapīra nominālvērtība!ir kuponu maksājumu skaits gadā!ir lietojamais dienu skaitīšanas pamata tips!ir loģiskā vērtība: no emisijas datuma uzkrātiem procentiem = TRUE vai izlaists; aprēķinam no pēdēja kupona apmaksas datuma = FALSE"
	},
	"ACCRINTM": {
		"a": "(emisija; apmaksa; likme; nom; [pamats])",
		"d": "Atgriež tāda vērtspapīra uzkrātos procentus, kuru dzēšot, tiek maksāti procenti",
		"ad": "ir vērtspapīra emisijas datums, kas izteikts kā datuma sērijas numurs!ir vērtspapīra dzēšanas datums, kas izteikts kā datuma sērijas numurs!ir vērtspapīra ikgadējā kupona likme!ir vērtspapīra nominālvērtība!ir lietojamais dienu skaitīšanas bāzes tips"
	},
	"AMORDEGRC": {
		"a": "(cena; datums_iegādāts; pirmais_periods; likvidācija; periods; likme; [pamats])",
		"d": "Atgriež katra grāmatošanas perioda proporcionāli sadalītu lineāru aktīvu amortizāciju.",
		"ad": "ir aktīvu cena!ir aktīvu iegādes datums!ir pirmā perioda beigu datums!ir aktīva likvidācijas vērtība tā kalpošanas beigās.!ir periods!ir amortizācijas likme!gada_pamats: 0 gadam ar 360 dienām, 1 faktiskais, 3 gadam ar 365 dienām."
	},
	"AMORLINC": {
		"a": "(cena; datums_iegādāts; pirmais_periods; likvidācija; periods; likme; [pamats])",
		"d": "Atgriež katra grāmatošanas perioda proporcionāli sadalītu lineāru aktīvu amortizāciju.",
		"ad": "ir aktīvu cena!ir aktīvu iegādes datums!ir pirmā perioda beigu datums!ir aktīva likvidācijas vērtība tā kalpošanas beigās.!ir periods!ir amortizācijas likme!gada_pamats: 0 gadam ar 360 dienām, 1 faktiskais, 3 gadam ar 365 dienām."
	},
	"COUPDAYBS": {
		"a": "(apmaksa; dzēšanas_datums; biežums; [bāze])",
		"d": "Atgriež dienu skaitu no kupona perioda sākuma līdz apmaksas datumam",
		"ad": "ir vērtspapīra apmaksas datums, kas izteikts kā datuma sērijas numurs!ir vērtspapīra dzēšanas datums, kas izteikts kā datuma sērijas numurs!ir kupona maksājumu skaits gadā!ir lietojamā dienu skaitīšanas bāze"
	},
	"COUPDAYS": {
		"a": "(apmaksa; dzēšanas_datums; biežums; [bāze])",
		"d": "Atgriež dienu skaitu kupona periodā, ietverot apmaksas datumu",
		"ad": "ir vērtspapīra apmaksas datums, kas izteikts kā datuma sērijas numurs!ir vērtspapīra dzēšanas datums, kas izteikts kā datuma sērijas numurs!ir kupona maksājumu skaits gadā!ir lietojamā dienu skaitīšanas bāze"
	},
	"COUPDAYSNC": {
		"a": "(apmaksa; dzēšanas_datums; biežums; [bāze])",
		"d": "Atgriež dienu skaitu no apmaksas datuma līdz nākamajam kupona datumam",
		"ad": "ir vērtspapīra apmaksas datums, kas izteikts kā datuma sērijas numurs!ir vērtspapīra dzēšanas datums, kas izteikts kā datuma sērijas numurs!ir kupona maksājumu skaits gadā!ir lietojamā dienu skaitīšanas bāze"
	},
	"COUPNCD": {
		"a": "(apmaksa; dzēšanas_datums; biežums; [bāze])",
		"d": "Atgriež nākamo kupona datumu pēc apmaksas dienas",
		"ad": "ir vērtspapīra apmaksas datums, kas izteikts kā datuma sērijas numurs!ir vērtspapīra dzēšanas datums, kas izteikts kā datuma sērijas numurs!ir kupona maksājumu skaits gadā!ir lietojamā dienu skaitīšanas bāze"
	},
	"COUPNUM": {
		"a": "(apmaksa; dzēšanas_datums; biežums; [bāze])",
		"d": "Atgriež kuponu skaitu, kas maksājami no apmaksas datuma līdz dzēšanas datumam",
		"ad": "ir vērtspapīra apmaksas datums, kas izteikts kā datuma sērijas numurs!ir vērtspapīra dzēšanas datums, kas izteikts kā datuma sērijas numurs!ir kupona maksājumu skaits gadā!ir lietojamā dienu skaitīšanas bāze"
	},
	"COUPPCD": {
		"a": "(apmaksa; dzēšanas_datums; biežums; [bāze])",
		"d": "Atgriež iepriekšējo kupona datumu pirms apmaksas datuma",
		"ad": "ir vērtspapīra apmaksas datums, kas izteikts kā datuma sērijas numurs!ir vērtspapīra dzēšanas datums, kas izteikts kā datuma sērijas numurs!ir kupona maksājumu skaits gadā!ir lietojamā dienu skaitīšanas bāze"
	},
	"CUMIPMT": {
		"a": "(likme; skg; pv; sākuma_periods; beigu_periods; tips)",
		"d": "Atgriež kumulatīvos procentus, kas maksāti par aizdevumu starp diviem periodiem",
		"ad": "ir procentu likme!ir kopējais maksājuma periodu skaits!ir pašreizējā vērtība!ir pirmais aprēķina periods!ir pēdējais aprēķina periods!ir noteiktais maksājuma laiks"
	},
	"CUMPRINC": {
		"a": "(likme; skg; pv; sākuma_periods; beigu_periods; tips)",
		"d": "Atgriež kumulatīvo pamatsummu, kas maksāta par aizdevumu starp diviem periodiem",
		"ad": "ir procentu likme!ir kopējais maksājuma periodu skaits!ir pašreizējā vērtība!ir pirmais aprēķina periods!ir pēdējais aprēķina periods!ir noteiktais maksājuma laiks"
	},
	"DB": {
		"a": "(vērtība; likvidācijas_vērt; kalpošanas_laiks; periods; [mēnesis])",
		"d": "Atgriež aktīvu amortizāciju noteiktā periodā, izmantojot aritmētiski degresīvo nolietojuma aprēķināšanas metodi",
		"ad": "ir sākotnējās aktīvu izmaksas!ir likvidācijas vērtība aktīvu kalpošanas laika beigās!ir periodu skaits, kuru laikā aktīvi tiek amortizēti (to dēvē arī par aktīvu lietderīgo kalpošanas laiku)!ir periods, kurā amortizācija ir jāaprēķina. Periods jānorāda tādās pašās vienībās kā kalpošanas laiks!ir pirmā gada mēnešu skaits. Ja mēnesis ir izlaists, tiek pieņemts, ka skaits ir 12"
	},
	"DDB": {
		"a": "(vērtība; likvidācijas_vērt; kalpošanas_laiks; periods; [koeficients])",
		"d": "Atgriež aktīvu amortizāciju norādītā periodā, izmantojot ģeometriski degresīvo nolietojuma aprēķināšanas metodi vai kādu citu norādīto metodi",
		"ad": "ir aktīvu sākotnējā vērtība!ir likvidācijas vērtība aktīvu kalpošanas laika beigās!ir periodu skaits, kuru laikā aktīvi tiek amortizēti (to dēvē arī par aktīvu lietderīgo kalpošanas laiku)!ir periods, kas jānorāda tādās pašās vienībās kā kalpošanas laiks!ir nolietojuma aprēķināšanas koeficients. Ja Koeficients ir izlaists, pieņem, ka tas ir 2 (ģeometriski degresīvā nolietojuma aprēķināšanas metode)"
	},
	"DISC": {
		"a": "(apmaksa; dzēšanas_datums; c; izpirkšana; [bāze])",
		"d": "Atgriež vērtspapīra diskonta likmi",
		"ad": "ir vērtspapīra apmaksas datums, kas izteikts kā datuma sērijas numurs!ir vērtspapīra dzēšanas datums, kas izteikts kā datuma sērijas numurs!ir vērtspapīra cena par 100 EUR nominālvērtību!ir vērtspapīra izpirkšanas vērtība par 100 EUR nominālvērtību!ir lietojamais dienu skaitīšanas bāzes tips"
	},
	"DOLLARDE": {
		"a": "(daļa_dolārs; daļa)",
		"d": "Konvertē cenu dolāros, kas izteikta kā daļa, dolāra cenā, kas izteikta kā decimālskaitlis",
		"ad": "ir skaitlis, kas izteikts kā daļskaitlis!ir vesels skaitlis, ko lieto kā daļskaitļa saucēju"
	},
	"DOLLARFR": {
		"a": "(decimāldaļskailis_dolārs; daļa)",
		"d": "Konvertē cenu dolāros, kas izteikta kā decimālskaitlis, dolāra cenā, kas izteikta kā daļskaitlis",
		"ad": "ir decimālskaitlis!ir vesels skaitlis, ko lieto kā daļskaitļa saucēju"
	},
	"DURATION": {
		"a": "(apmaksa; dzēšanas_datums; kupons; peļņa; biežums; [bāze])",
		"d": "Atgriež vērtspapīra ikgadējo ilgumu ar periodiskiem procentu maksājumiem",
		"ad": "ir vērtspapīra apmaksas datums, kas izteikts kā datuma sērijas numurs!ir vērtspapīra dzēšanas datums, kas izteikts kā datuma sērijas numurs!ir vērtspapīra ikgadējā kupona likme!ir vērtspapīra ikgadējā peļņa!ir kuponu maksājumu skaits gadā!ir lietojamais dienu skaitīšanas bāzes tips"
	},
	"EFFECT": {
		"a": "(nomināls_likme; skg)",
		"d": "Atgriež faktisko ikgadējo procentu likmi",
		"ad": "ir nominālā procentu likme!ir salikto periodu skaits gadā"
	},
	"FV": {
		"a": "(likme; per_sk; maks; [nv]; [tips])",
		"d": "Atgriež tādas investīcijas nākotnes vērtību, kuras pamatā ir periodiski, konstanti maksājumi un konstanta procentu likme",
		"ad": "ir procentu likme periodā. Piemēram, izmantojiet 6%/4, ja tiek veikti ikceturkšņa maksājumi ar ikgadējo procentu likmi (APR) 6%!ir investīcijas maksājuma periodu kopskaits!ir maksājums, kas tiek veikts katru periodu; to nevar mainīt visa investīcijas perioda laikā!ir pašreizējā vērtība jeb pilnā summa, ko šobrīd ir vērta nākotnē veicamu maksājumu virkne. Ja izlaists, Nv = 0!ir vērtība, kas apzīmē maksājuma laiku: maksājums perioda sākumā = 1; maksājums perioda beigās = 0 vai izlaists"
	},
	"FVSCHEDULE": {
		"a": "(pamatsumma; grafiks)",
		"d": "Atgriež sākotnējās pamatsummas nākotnes vērtību pēc salikto procentu likmju sērijas lietošanas",
		"ad": "ir pašreizējā vērtība! ir lietojamo procenta likmju masīvs"
	},
	"INTRATE": {
		"a": "(apmaksa; dzēšanas_datums; investīcijas; izpirkšana; [bāze])",
		"d": "Atgriež pilnībā investēta vērtspapīra procentu likmi",
		"ad": "ir vērtspapīra apmaksas datums, kas izteikts kā datumu sērijas numurs!ir vērtspapīra dzēšanas datums, kas izteikts kā datumu sērijas numurs!ir vērtspapīrā investētā summa!ir dzēšanas datumā saņemamā summa!ir lietojamais dienu skaitīšanas bāzes tips"
	},
	"IPMT": {
		"a": "(likme; per; per_sk; pv; [nv]; [tips])",
		"d": "Atgriež noteikta perioda procentu maksājumus par investīciju, ja tiek veikti periodiski, konstanti maksājumi un ir konstanta procentu likme",
		"ad": "ir procentu likme vienā periodā. Piemēram, izmantojiet 6%/4, ja tiek veikti ikceturkšņa maksājumi ar ikgadējo procentu likmi (APR) 6%!ir periods, kur procenti jānoskaidro; tam jābūt robežās no 1 līdz Per_sk!ir maksājumu periodu kopskaits par investīciju!ir pašreizējā vērtība jeb pilnā summa, ko šobrīd ir vērta nākotnē veicamu maksājumu virkne!ir nākotnes vērtība jeb naudas summa, kuru plāno iegūt pēc pēdējā maksājuma veikšanas. Ja izlaists, F = 0!ir loģiskā vērtība, kas apzīmē maksājuma laikus: perioda beigās = 0 vai izlaists, perioda sākumā = 1"
	},
	"IRR": {
		"a": "(vērtības; [minējums])",
		"d": "Atgriež iekšējo ienākumu normu (internal rate of return, IRR) sērijai naudas plūsmas",
		"ad": "ir masīvs vai atsauce uz šūnām, kurās ietilpst skaitļi, kam jāaprēķina iekšējā ienākumu norma!ir skaitlis, kas tiek minēts un ir tuvu IRR; 0,1 (10 procenti) ja izlaists"
	},
	"ISPMT": {
		"a": "(likme; per; persk; pv)",
		"d": "Atgriež procentus, kas jāmaksā noteiktā investīcijas periodā",
		"ad": "procentu likme vienā periodā. Piemēram, izmantojiet 6%/4, ja tiek veikti ikceturkšņa maksājumi ar ikgadējo procentu likmi (APR) 6%!periods, kuram jāaprēķina procenti!maksājuma periodu skaits investīcijas laikā!Kopējā naudas summa, cik šobrīd ir vērta virkne turpmāk veicamo maksājumu"
	},
	"MDURATION": {
		"a": "(apmaksa; dzēšanas_datums; kupons; peļņa; biežums; [pamats])",
		"d": "Atgriež Makaolija modificēto vērtspapīra ilgumu ar 100 EUR pieņemtu nominālvērtību",
		"ad": "ir vērtspapīra apmaksas datums, kas izteikts kā datuma sērijas numurs!ir vērtspapīra dzēšanas datums, kas izteikts kā datuma sērijas numurs!ir vērtspapīra ikgadējā kupona likme!ir vērtspapīra ikgadējā peļņa!ir kuponu maksājumu skaits gadā!ir lietojamais dienu skaitīšanas pamata tips"
	},
	"MIRR": {
		"a": "(vērtības; finansiālā_likme; pārinvest_likme)",
		"d": "Atgriež iekšējo ienākumu normu (internal rate of return) sērijai periodisku naudas plūsmu, ņemot vērā gan investīcijas izmaksas, gan procentus par naudas pārinvestēšanu",
		"ad": "ir masīvs vai atsauce uz šūnām, kurās ietilpst skaitļi, kas apzīmē maksājumu (negatīvi) un ienākumu (pozitīvi) sēriju regulāros intervālos!ir procentu likme, kas tiek maksāta par naudas plūsmā izmantoto naudu!ir procentu likme, ko saņem par naudas pārinvestēšanu"
	},
	"NOMINAL": {
		"a": "(faktiskā_likme; skg)",
		"d": "Atgriež ikgadējo nominālo procentu likmi",
		"ad": "ir faktiskā procentu likme!ir salikto periodu skaits gadā"
	},
	"NPER": {
		"a": "(likme; maks; pv; [nv]; [tips])",
		"d": "Atgriež investīcijas periodu skaitu, ja tiek veikti periodiski, konstanti maksājumi un ir konstanta procentu likme",
		"ad": "ir procentu likme par vienu periodu. Piemēram, izmantojiet 6%/4, ja tiek veikti ikceturkšņa maksājumi ar ikgadējo procentu likmi (APR) 6%!ir maksājums, kas tiek veikts katru periodu; tas netiek mainīts visa investīcijas perioda laikā!ir pašreizējā vērtība jeb pilnā summa, ko šobrīd ir vērta nākotnē veicamu maksājumu virkne!ir nākotnes vērtība jeb naudas summa, kuru plāno iegūt pēc pēdējā maksājuma veikšanas. Ja izlaists, tiek izmantota nulle!ir loģiskā vērtība: maksājums perioda sākumā = 1; maksājums perioda beigās = 0 vai izlaists"
	},
	"NPV": {
		"a": "(likme; vērtība1; [vērtība2]; ...)",
		"d": "Atgriež investīcijas pašreizējo neto vērtību, izmantojot diskonta likmi un turpmāku maksājumu virkni (negatīvas vērtības) un ienākumus (pozitīvas vērtības)",
		"ad": "ir diskonta likme viena perioda garumā!ir 1 līdz 254 maksājumu un ienākumu, kas ir vienmērīgi sadalīti laikā un tiek veikti katra perioda beigās"
	},
	"ODDFPRICE": {
		"a": "(apmaksa; dzēšanas_datums; emisija; pirmais_kupons; likme; peļņa; izpirkšana; biežums; [bāze])",
		"d": "Atgriež tāda vērtspapīra cenu par 100 EUR nominālvērtību, kura pirmais periods ir nepāra",
		"ad": "ir vērtspapīra apmaksas datums, kas izteikts kā datuma sērijas numurs!ir vērtspapīra dzēšanas datums, kas izteikts kā datuma sērijas numurs!ir vērtspapīra emisijas datums, kas izteikts kā datuma sērijas numurs!ir vērtspapīra pirmā kupona datums, kas izteikts kā datuma sērijas numurs!ir vērtspapīra procentu likme!ir vērtspapīra ikgadējā peļņa!ir vērtspapīra izpirkšanas vērtība par 100 EUR nominālvērtību!ir kupona maksājumu skaits gadā!ir lietojamais dienu skaitīšanas bāzes tips"
	},
	"ODDFYIELD": {
		"a": "(apmaksa; dzēšanas_datums; emisija; pirmais_kupons; likme; pr; izpirkšana; biežums; [bāze])",
		"d": "Atgriež tāda vērtspapīra peļņu, kura pirmais periods ir nepāra",
		"ad": "ir vērtspapīra apmaksas datums, kas izteikts kā datuma sērijas numurs!ir vērtspapīra dzēšanas datums, kas izteikts kā datuma sērijas numurs!ir vērtspapīra emisijas datums, kas izteikts kā datuma sērijas numurs!ir vērtspapīra pirmā kupona datums, kas izteikts kā datuma sērijas numurs!ir vērtspapīra procentu likme!ir vērtspapīra cena!ir vērtspapīra izpirkšanas vērtība par 100 EUR nominālvērtību!ir kupona maksājumu skaits gadā!ir lietojamais dienu skaitīšanas bāzes tips"
	},
	"ODDLPRICE": {
		"a": "(apmaksa; dzēšanas_datums; pēdējie_procenti; likme; peļņa; izpirkšana; biežums; [bāze])",
		"d": "Atgriež tāda vērtspapīra cenu uz 100 EUR nominālvērtību, kura pēdējais periods ir nepāra",
		"ad": "ir vērtspapīra apmaksas datums, kas izteikts kā datuma sērijas numurs!ir vērtspapīra dzēšanas datums, kas izteikts kā datuma sērijas numurs!ir vērtspapīra pēdējā kupona datums, kas izteikts kā datuma sērijas numurs!ir vērtspapīra procentu likme!ir vērtspapīra ikgadējā peļņa!ir vērtspapīra izpirkšanas vērtība par 100 EUR nominālvērtību!ir kupona maksājumu skaits gadā!ir lietojamais dienu skaitīšanas bāzes tips"
	},
	"ODDLYIELD": {
		"a": "(apmaksa; dzēšanas_datums; pēdējie_procenti; likme; pr; izpirkšana; biežums; [bāze])",
		"d": "Atgriež tāda vērtspapīra cenu, kura pēdējais periods ir nepāra",
		"ad": "ir vērtspapīra apmaksas datums, kas izteikts kā datuma sērijas numurs!ir vērtspapīra dzēšanas datums, kas izteikts kā datuma sērijas numurs!ir vērtspapīra pēdējā kupona datums, kas izteikts kā datuma sērijas numurs!ir vērtspapīra procentu likme!ir vērtspapīra cena!ir vērtspapīra izpirkšanas vērtība par 100 EUR nominālvērtību!ir kupona maksājumu skaits gadā!ir lietojamais dienu skaitīšanas bāzes tips"
	},
	"PDURATION": {
		"a": "(likme; pv; nv)",
		"d": "Atgriež periodu skaitu, kuru laikā ieguldījums sasniedz noteiktu vērtību",
		"ad": "ir procentu likme periodā.!ir ieguldījuma pašreizējā vērtība!ir ieguldījuma vēlamā nākotnes vērtība"
	},
	"PMT": {
		"a": "(likme; persk; pv; [nv]; [tips])",
		"d": "Aprēķina aizdevuma atmaksāšanu, ja tiek veikti konstanti maksājumi ar konstantu procentu likmi",
		"ad": "ir aizdevuma procentu likme vienā periodā. Piemēram, izmantojiet 6%/4, ja tiek veikti ikceturkšņa maksājumi ar ikgadējo procentu likmi (APR) 6%!ir maksājumu kopskaits, kas jāveic par aizdevumu!ir pašreizējā vērtība: kopsumma, kuru šobrīd ir vērta nākotnē veicamu maksājumu virkne!ir nākotnes vērtība jeb naudas summa, kuru plānots iegūt pēc pēdējā maksājuma veikšanas, 0 (nulle) ja izlaists!ir loģiskā vērtība: maksājums perioda sākumā = 1; maksājums perioda beigās = 0 vai izlaists"
	},
	"PPMT": {
		"a": "(likme; per; per_sk; pv; [nv]; [tips])",
		"d": "Atgriež noteiktas investīcijas pamatsummas maksājumus, ja tiek veikti periodiski, konstanti maksājumi un ir konstanta procentu likme",
		"ad": "ir procentu likme vienā periodā. Piemēram, izmantojiet 6%/4, ja tiek veikti ikceturkšņa maksājumi ar ikgadējo procentu likmi (APR) 6%!norāda periodu un tam jābūt robežās no 1 līdz Per_sk!ir maksājuma periodu kopskaits par investīciju!ir pašreizējā vērtība ir pašreizējā vērtība: kopējā summa, ko šobrīd ir vērta nākotnē veicamu maksājumu virkne!ir nākotnes vērtība jeb naudas summa, kuru plāno iegūt pēc pēdējā maksājuma veikšanas!ir loģiskā vērtība: maksājums perioda sākumā = 1; maksājums perioda beigās = 0 vai izlaists"
	},
	"PRICE": {
		"a": "(apmaksa; dzēšanas_datums; likme; peļņa; izpirkšana; biežums; [bāze])",
		"d": "Atgriež vērtspapīra cenu par 100 EUR nominālvērtību, maksājot periodiskus procentus",
		"ad": "ir vērtspapīra apmaksas datums, kas izteikts kā datuma sērijas numurs!ir vērtspapīra dzēšanas datums, kas izteikts kā datuma sērijas numurs!ir vērtspapīra ikgadējā kupona likme!ir vērtspapīra ikgadējā peļņa!ir vērtspapīra izpirkšanas vērtība par 100 EUR nominālvērtību!ir kupona maksājumu skaits gadā!ir lietojamais dienu skaitīšanas bāzes tips"
	},
	"PRICEDISC": {
		"a": "(apmaksa; dzēšanas_datums; diskonts; izpirkšana; [bāze])",
		"d": "Atgriež diskontēta vērtspapīra cenu par 100 EUR nominālvērtību",
		"ad": "ir vērtspapīra apmaksas datums, kas izteikts kā datuma sērijas numurs!ir vērtspapīra dzēšanas datums, kas izteikts kā datuma sērijas numurs!ir vērtspapīra diskonta likme!ir vērtspapīra izpirkšanas vērtība par 100 EUR nominālvērtību!ir lietojamais dienu skaitīšanas bāzes tips"
	},
	"PRICEMAT": {
		"a": "(apmaksa; dzēšanas_datums; emisija; likme; peļņa; [bāze])",
		"d": "Atgriež cenu vērtspapīram par 100 EUR nominālvērtību, par kuru procentus maksā dzēšot",
		"ad": "ir vērtspapīra apmaksas datums, kas izteikts kā datuma sērijas numurs!ir vērtspapīra dzēšanas datums, kas izteikts kā datuma sērijas numurs!ir vērtspapīra emisijas datums, kas izteikts kā datuma sērijas numurs!ir vērtspapīra procentu likme emisijas datumā!ir vērtspapīra ikgadējā peļņa!ir lietojamais dienu skaitīšanas bāzes tips"
	},
	"PV": {
		"a": "(likme; per_sk; maks; [nv]; [tips])",
		"d": "Atgriež investīcijas pašreizējo vērtību: turpmāk veicamu maksājumu virknes vērtības kopsumma šobrīd",
		"ad": "ir procentu likme vienā periodā. Piemēram, izmantojiet 6%/4, ja tiek veikti ikceturkšņa maksājumi ar ikgadējo procentu likmi (APR) 6%!ir investīcijas maksājuma periodu skaits!ir maksājums, kas tiek veikts katru periodu un kas nemainās visa investīcijas perioda laikā!ir nākotnes vērtība jeb naudas summa, kuru plāno iegūt pēc pēdējā maksājuma veikšanas!ir loģiskā vērtība: maksājums perioda sākumā = 1; maksājums perioda beigās = 0 vai izlaists"
	},
	"RATE": {
		"a": "(per_sk; maks; pv; [nv]; [tips]; [minējums])",
		"d": "Atgriež viena perioda procentu likmi aizdevuma vai investīcijas perioda laikā. Piemēram, izmantojiet 6%/4, ja tiek veikti ikceturkšņa maksājumi ar ikgadējo procentu likmi (APR) 6%",
		"ad": "ir maksājuma periodu kopskaits par aizdevumu vai investīciju!ir maksājums, kas tiek veikts katru periodu un kas nemainās visa aizdevuma vai investīcijas perioda laikā!ir pašreizējā vērtība: pilnā summa, ko šobrīd ir vērta nākotnē veicamu maksājumu virkne!ir nākotnes vērtība jeb naudas summa, kuru plānots iegūt pēc pēdējā maksājuma veikšanas. Ja izlaista, izmanto Nv = 0!ir loģiskā vērtība: maksājums perioda sākumā = 1; maksājums perioda beigās = 0 vai izlaista!ir minējums par to, kāda būs likme; ja izlaists, Minējums = 0,1 (10 procenti)"
	},
	"RECEIVED": {
		"a": "(apmaksa; dzēšanas_datums; investīcijas; diskonts; [bāze])",
		"d": "Atgriež pilnībā investēta vērtspapīra dzēšanas datumā saņemamo summu",
		"ad": "ir vērtspapīra apmaksas datums, kas izteikts kā datumu sērijas numurs!ir vērtspapīra dzēšanas datums, kas izteikts kā datumu sērijas numurs!ir vērtspapīrā investētā summa!ir vērtspapīra diskonta likme!ir lietojamais dienu skaitīšanas bāzes tips"
	},
	"RRI": {
		"a": "(per_sk; pv; nv)",
		"d": "Atgriež ieguldījuma pieauguma procentu likmes ekvivalentu",
		"ad": "ir ieguldījuma periodu skaits!ir ieguldījuma pašreizējā vērtība!ir ieguldījuma nākotnes vērtība"
	},
	"SLN": {
		"a": "(vērtība; likvidācijas_vērt; kalpošanas_laiks)",
		"d": "Atgriež aktīvu lineāro amortizāciju vienā periodā",
		"ad": "ir sākotnējās aktīvu izmaksas!ir likvidācijas vērtība aktīvu kalpošanas laika beigās!ir periodu skaits, kuru laikā aktīvi tiek amortizēti (to dēvē arī par aktīvu lietderīgo kalpošanas laiku)"
	},
	"SYD": {
		"a": "(vērtība; likvidācijas_vērt; kalpošanas_laiks; per)",
		"d": "Atgriež aktīvu amortizāciju noteiktā periodā, aprēķinot ar gada ciparu summas metodi",
		"ad": "ir ir sākotnējās aktīvu izmaksas!ir likvidācijas vērtība aktīvu kalpošanas laika beigās!ir periodu skaits, kuru laikā aktīvi tiek amortizēti (to dēvē arī par aktīvu lietderīgo kalpošanas laiku)!ir periods, kas jānorāda tādās pašās vienībās kā kalpošanas laiks"
	},
	"TBILLEQ": {
		"a": "(apmaksa; dzēšanas_datums; diskonts)",
		"d": "Atgriež valsts kases vekseļa peļņu, kas ekvivalenta obligācijām",
		"ad": "ir valsts kases vekseļa apmaksas datums, kas izteikts kā datuma sērijas numurs!ir valsts kases vekseļa dzēšanas datums, kas izteikts kā datuma sērijas numurs!ir valsts kases vekseļa diskonta likme"
	},
	"TBILLPRICE": {
		"a": "(apmaksa; dzēšanas_datums; diskonts)",
		"d": "Atgriež valsts kases vekseļa cenu par 100 ASV dolāru nominālvērtību",
		"ad": "ir valsts kases vekseļa apmaksas datums, kas izteikts kā datuma sērijas numurs!ir valsts kases vekseļa dzēšanas datums, kas izteikts kā datuma sērijas numurs!ir valsts kases vekseļa diskonta likme"
	},
	"TBILLYIELD": {
		"a": "(apmaksa; dzēšanas_datums; pr)",
		"d": "Atgriež valsts kases vekseļa peļņu",
		"ad": "ir valsts kases vekseļa apmaksas datums, kas izteikts kā datuma sērijas numurs!ir valsts kases vekseļa dzēšanas datums, kas izteikts kā datuma sērijas numurs!ir valsts kases vekseļa cena par 100 ASV dolāru nominālvērtību"
	},
	"VDB": {
		"a": "(vērtība; likvidācijas_vērt; kalpošanas_laiks; sāk_periods; beigu_periods; [koeficients]; [nav_pārslēgš])",
		"d": "Atgriež aktīvu amortizāciju jebkurā norādītā periodā, arī daļējos periodos, izmantojot ģeometriski degresīvo nolietojuma aprēķināšanas metodi vai kādu citu norādītu metodi",
		"ad": "ir aktīvu sākotnējā vērtība!ir likvidācijas vērtība aktīvu kalpošanas laika beigās!ir periodu skaits, kuru laikā aktīvi tiek amortizēti (to dēvē arī par aktīvu lietderīgo kalpošanas laiku)!ir sākuma periods, kam jāaprēķina amortizācija, norādot tādās pašās vienībās kā kalpošanas laiks!ir beigu periods, kam jāaprēķina amortizācija, norādot tādās pašās vienībās kā kalpošanas laiks!ir nolietojuma aprēķināšanas koeficients, ja izlaists, tas tiek uzskatīts par 2 (ģeometriski degresīvā nolietojuma aprēķināšanas metode)!pārslēdzas uz lineārās amortizācijas metodi, ja amortizācija ir lielāka nekā sarūkošā vērtība = FALSE vai izlaists; nepārslēdzas = TRUE"
	},
	"XIRR": {
		"a": "(vērtības; datumi; [minējums])",
		"d": "Atgriež naudas plūsmas grafika iekšējo ienesīguma normu",
		"ad": "ir naudas plūsmu sērija, kas atbilst maksājumu grafikam datumos!ir maksājumu datumu grafiks, kas atbilst naudas plūsmas maksājumiem!ir skaitlis, kurš varētu būt tuvs funkcijas XIRR rezultātam"
	},
	"XNPV": {
		"a": "(likme; vērtība; datumi)",
		"d": "Atgriež naudas plūsmas grafika pašreizējo neto vērtību",
		"ad": "ir diskonta likme, ko lieto naudas plūsmai!ir naudas plūsmas sērija, kas attiecas uz maksājumu grafiku datumos!ir maksājumu datumu grafiks, kas attiecas uz naudas plūsmas maksājumiem"
	},
	"YIELD": {
		"a": "(apmaksa; dzēšanas_datums; likme; c; izpirkšana; biežums; [bāze])",
		"d": "Atgriež peļņu, ko devis vērtspapīrs ar periodisku procentu izmaksu",
		"ad": "ir vērtspapīra apmaksas datums, kas izteikts kā datuma sērijas numurs!ir vērtspapīra dzēšanas datums, kas izteikts kā datuma sērijas numurs!ir vērtspapīra ikgadējā kupona likme!ir vērtspapīra cena par 100 EUR nominālvērtību!ir vērtspapīra izpirkšanas vērtība par 100 EUR nominālvērtību!ir kupona maksājumu skaits gadā!ir lietojamais dienu skaitīšanas bāzes tips"
	},
	"YIELDDISC": {
		"a": "(apmaksa; dzēšanas_datums; c; izpirkšana; [bāze])",
		"d": "Atgriež diskontēta vērtspapīra ikgadējo peļņu. Piemēram, valsts kases vekselis",
		"ad": "ir vērtspapīra apmaksas datums, kas izteikts kā datuma sērijas numurs!ir vērtspapīra dzēšanas datums, kas izteikts kā datuma sērijas numurs!ir vērtspapīra cena par 100 EUR nominālvērtību!ir vērtspapīra izpirkšanas vērtība par 100 EUR nominālvērtību!ir lietojamais dienu skaitīšanas bāzes tips"
	},
	"YIELDMAT": {
		"a": "(apmaksa; dzēšanas_datums; emisija; likme; c; [bāze])",
		"d": "Atgriež ikgadējo vērtspapīra peļņu, par kuru procentus maksā dzēšot",
		"ad": "ir vērtspapīra apmaksas datums, kas izteikts kā datuma sērijas numurs!ir vērtspapīra dzēšanas datums, kas izteikts kā datuma sērijas numurs!ir vērtspapīra emisijas datums, kas izteikts kā datuma sērijas numurs!ir vērtspapīra procentu likme emisijas datumā!ir vērtspapīra cena par 100 EUR nominālvērtību!ir lietojamais dienu skaitīšanas bāzes tips"
	},
	"ABS": {
		"a": "(skaitlis)",
		"d": "Atgriež skaitļa absolūto vērtību - skaitli bez zīmes",
		"ad": "ir reālais skaitlis, kam iegūstama absolūtā vērtība"
	},
	"ACOS": {
		"a": "(skaitlis)",
		"d": "Atgriež skaitļa arkkosinusu radiānos diapazonā no 0 līdz Pi. Arkkosinuss ir leņķis, kura kosinuss ir Skaitlis",
		"ad": "ir vajadzīgā leņķa kosinuss; tam jābūt no -1 līdz 1"
	},
	"ACOSH": {
		"a": "(skaitlis)",
		"d": "Atgriež skaitļa apgriezto hiperbolisko kosinusu",
		"ad": "ir jebkurš reāls skaitlis, kas vienāds vai lielāks par 1"
	},
	"ACOT": {
		"a": "(skaitlis)",
		"d": "Atgriež skaitļa arkkotangensu radiānos diapazonā no 0 līdz Pi.",
		"ad": "ir vajadzīgā leņķa kotangenss"
	},
	"ACOTH": {
		"a": "(skaitlis)",
		"d": "Atgriež skaitļa inverso hiperbolisko kotangensu",
		"ad": "ir vajadzīgā leņķa hiperboliskais kotangenss"
	},
	"AGGREGATE": {
		"a": "(funkcijas_num; opcijas; ats1; ...)",
		"d": "Atgriež apkopojumu kā sarakstu vai datu bāzi",
		"ad": "ir skaitlis no 1 līdz 19, kas norāda apkopojuma kopsavilkuma funkciju.!ir skaitlis no 0 līdz 7, kas norāda ignorējamās vērtības, kuras attiecībā uz apkopojumu ir jāignorē!ir masīvs vai skaitlisko datu diapazons, kurā aprēķināt apkopojumu!norāda pozīciju masīvā; ir k-tais lielākais, k-tais mazākais, k-tā procentile vai k-tā kvartile.!ir skaitlis no 1 līdz 19, kas norāda apkopojuma kopsavilkuma funkciju.!ir skaitlis no 0 līdz 7, kas norāda vērtības, kuras jāignorē attiecībā uz apkopojumu!ir no 1 līdz 253 diapazoniem vai atsaucēm, kurām jāiegūst apkopojums"
	},
	"ARABIC": {
		"a": "(teksts)",
		"d": "Pārvērš romiešu ciparu par arābu ciparu",
		"ad": "ir romiešu cipars, kas jāpārvērš"
	},
	"ASC": {
		"a": "(teksts)",
		"d": "Dubultbaitu rakstzīmju kopu (DBCS) valodām funkcija nomaina pilna platuma (dubultbaitu) rakstzīmes ar pusplatuma (vienbaita) rakstzīmēm",
		"ad": "ir teksts, kas jāmaina"
	},
	"ASIN": {
		"a": "(skaitlis)",
		"d": "Atgriež skaitļa arksīnusu radiānos diapazonā no -Pi/2 līdz Pi/2",
		"ad": "ir vajadzīgā leņķa sinuss; tam jābūt no -1 līdz 1"
	},
	"ASINH": {
		"a": "(skaitlis)",
		"d": "Atgriež skaitļa apgriezto hiperbolisko sinusu",
		"ad": "ir jebkurš reāls skaitlis, kas vienāds vai lielāks par 1"
	},
	"ATAN": {
		"a": "(skaitlis)",
		"d": "Atgriež skaitļa arktangensu radiānos, diapazonā no -Pi/2 līdz Pi/2",
		"ad": "ir vajadzīgais leņķa tangenss"
	},
	"ATAN2": {
		"a": "(x_num; y_num)",
		"d": "Atgriež norādīto x un y koordinātu arktangensu radiānos no -Pi un Pi, izslēdzot -Pi",
		"ad": "ir punkta x koordināta!ir punkta y koordināta"
	},
	"ATANH": {
		"a": "(skaitlis)",
		"d": "Atgriež skaitļa apgriezto hiperbolisko tangensu",
		"ad": "ir jebkurš reāls skaitlis starp -1 un 1, izslēdzot -1 un 1"
	},
	"BASE": {
		"a": "(skaitlis; bāze; [min_garums])",
		"d": "Pārvērš skaitli par teksta atveidojumu ar doto bāzi",
		"ad": "ir skaitlis, kas jāpārvērš!ir bāze, par kuru skaitlis jāpārvērš!ir atgrieztās virknes minimālais garums, ja netiek pievienotas izlaistās nulles pirms"
	},
	"CEILING": {
		"a": "(skaitlis; būtiskums)",
		"d": "Noapaļo skaitli uz augšu līdz tuvākajam būtiskjama skaitlim, kas dalās bez atlikuma",
		"ad": "ir noapaļojamā vērtība!ir skaitlis, kas dalās bez atlikuma, līdz kuram jānoapaļo"
	},
	"CEILING.MATH": {
		"a": "(skaitlis; [būtiskums]; [režīms])",
		"d": "Noapaļo skaitli uz augšu līdz tuvākajam veselajam skaitlim vai līdz tuvākajam nozīmīgajam skaitlim, kas dalās bez atlikuma",
		"ad": "ir noapaļojamā vērtība!ir skaitlis, kas dalās bez atlikuma, līdz kuram jānoapaļo!ja dota un ja nav nulle, šī funkcija noapaļos uz augšu no nulles"
	},
	"CEILING.PRECISE": {
		"a": "(skaitlis; [būtiskums])",
		"d": "Atgriež skaitli, kas noapaļots līdz tuvākajam veselajam skaitlim vai tuvākajam būtiskajam skaitlim, kas dalās bez atlikuma",
		"ad": "ir noapaļojamā vērtība!ir skaitlis, kas dalās bez atlikuma, līdz kuram jānoapaļo"
	},
	"COMBIN": {
		"a": "(skaitlis; izvēlētais_skaitlis)",
		"d": "Atgriež norādītā vienumu skaita kombināciju skaitu",
		"ad": "ir vienumu kopējais skaits!ir vienumu skaits katrā kombinācijā"
	},
	"COMBINA": {
		"a": "(skaitlis; izvēlētais_skaitlis)",
		"d": "Atgriež norādītā vienumu skaita kombināciju skaitu",
		"ad": "ir vienumu kopējais skaits!ir vienumu skaits katrā kombinācijā"
	},
	"COS": {
		"a": "(skaitlis)",
		"d": "Atgriež leņķa kosinusu",
		"ad": "ir leņķis radiānos, kam jāiegūst kosinuss"
	},
	"COSH": {
		"a": "(skaitlis)",
		"d": "Atgriež skaitļa hiperbolisko kosinusu",
		"ad": "ir jebkurš reāls skaitlis"
	},
	"COT": {
		"a": "(skaitlis)",
		"d": "atgriež leņķa kotangensu",
		"ad": "ir leņķis radiānos, kam aprēķināms kotangenss"
	},
	"COTH": {
		"a": "(skaitlis)",
		"d": "atgriež skaitļa hiperbolisko kotangensu",
		"ad": "ir leņķis radiānos, kam aprēķināms hiperboliskais kotangenss"
	},
	"CSC": {
		"a": "(skaitlis)",
		"d": "atgriež leņķa kosekansu",
		"ad": "ir leņķis radiānos, kam aprēķināms kosekanss"
	},
	"CSCH": {
		"a": "(skaitlis)",
		"d": "atgriež leņķa hiperbolisko kosekansu",
		"ad": "ir leņķis radiānos, kam aprēķināms hiperboliskais kosekanss"
	},
	"DECIMAL": {
		"a": "(skaitlis; bāze)",
		"d": "pārvērš skaitļa teksta atveidojumu dotā bāzē par decimālskaitli",
		"ad": "ir skaitlis, kas jāpārvērš!ir tā skaitļa bāze, kuru pārvēršat"
	},
	"DEGREES": {
		"a": "(leņķis)",
		"d": "Konvertē radiānus par grādiem",
		"ad": "ir konvertējamais leņķis radiānos"
	},
	"ECMA.CEILING": {
		"a": "(skaitlis; būtiskums)",
		"d": "Noapaļo skaitli uz augšu līdz tuvākajam būtiskjama skaitlim, kas dalās bez atlikuma",
		"ad": "ir noapaļojamā vērtība!ir skaitlis, kas dalās bez atlikuma, līdz kuram jānoapaļo"
	},
	"EVEN": {
		"a": "(skaitlis)",
		"d": "Noapaļo pozitīvu skaitli uz augšu, bet negatīvu - uz leju līdz tuvākajam veselajam pārskaitlim",
		"ad": "ir noapaļojamā vērtība"
	},
	"EXP": {
		"a": "(skaitlis)",
		"d": "Atgriež e, kas kāpināts norādītajā pakāpē",
		"ad": "ir bāzes e kāpinātājs. Nemainīgais ir vienāds ar 2,71828182845904 - naturālā logaritma bāzi"
	},
	"FACT": {
		"a": "(skaitlis)",
		"d": "Atgriež skaitļa faktoriālu, kas vienāds ar 1*2*3*...* Skaitlis",
		"ad": "ir nenegatīvs skaitlis, kam jāiegūst faktoriāls"
	},
	"FACTDOUBLE": {
		"a": "(skaitlis)",
		"d": "Atgriež skaitļa dubulto faktoriālu",
		"ad": "ir vērtība, kurai atgriežams dubultais faktoriāls"
	},
	"FLOOR": {
		"a": "(skaitlis; būtiskums)",
		"d": "Noapaļo skaitli uz leju līdz tuvākajam būtiskajam skaitlim, kas dalās bez atlikuma",
		"ad": "ir skaitliskā vērtība, kura jānoapaļo!ir skaitlis, kas dalās bez atlikuma, līdz kuram jānoapaļo. Gan skaitlim, gan būtiskumam ir jābūt vai nu pozitīvam, vai negatīvam"
	},
	"FLOOR.PRECISE": {
		"a": "(skaitlis; [būtiskums])",
		"d": "Atgriež skaitli, kas noapaļots uz leju līdz tuvākajam veselajam skaitlim vai tuvākajam būtiskajam skaitlim, kas dalās bez atlikuma",
		"ad": "ir noapaļojamā vērtība!ir skaitlis, kas dalās bez atlikuma, līdz kuram jānoapaļo"
	},
	"FLOOR.MATH": {
		"a": "(skaitlis; [būtiskums]; [režīms])",
		"d": "Noapaļo skaitli uz leju līdz tuvākajam veselajam skaitlim vai līdz tuvākajam nozīmīgajam skaitlim, kas dalās bez atlikuma",
		"ad": "ir noapaļojamā vērtība!ir skaitlis, kas dalās bez atlikuma, līdz kuram jānoapaļo!ja dota un ja nav nulle, šī funkcija noapaļos uz leju līdz nullei"
	},
	"GCD": {
		"a": "(skaitlis1; [skaitlis2]; ...)",
		"d": "Atgriež lielāko kopējo dalītāju",
		"ad": "ir vērtības no 1 līdz 255"
	},
	"INT": {
		"a": "(skaitlis)",
		"d": "Noapaļo skaitli līdz tuvākajam veselajam skaitlim",
		"ad": "ir reālais skaitlis, kas noapaļojams līdz veselam skaitlim"
	},
	"ISO.CEILING": {
		"a": "(skaitlis; [būtiskums])",
		"d": "Atgriež skaitli, kas noapaļots līdz tuvākajam veselajam skaitlim vai tuvākajam būtiskajam skaitlim, kas dalās bez atlikuma. Neatkarīgi no skaitļa zīmes, tas tiek noapaļots uz augšu. Taču ja skaitlis vai būtiskais skaitlis ir nulle, tiek atgriezta nulle.",
		"ad": "ir noapaļojamā vērtība!ir skaitlis, kas dalās bez atlikuma, līdz kuram jānoapaļo"
	},
	"LCM": {
		"a": "(skaitlis1; [skaitlis2]; ...)",
		"d": "Atgriež mazāko kopējo skaitli, ar kuru dalāms bez atlikuma",
		"ad": "ir vērtības no 1 līdz 255, kurām iegūstams mazākais kopējais skaitlis, ar kuru dalāms bez atlikuma"
	},
	"LN": {
		"a": "(skaitlis)",
		"d": "Atgriež skaitļa naturālo logaritmu",
		"ad": "ir pozitīvs reālais skaitlis, kam iegūstams naturālais logaritms"
	},
	"LOG": {
		"a": "(skaitlis; [bāze])",
		"d": "Atgriež skaitļa logaritmu norādītājai bāzei",
		"ad": "ir pozitīvs reāls skaitlis, kam jāuzzina logaritms!ir logaritma bāze; 10, ja izlaista"
	},
	"LOG10": {
		"a": "(skaitlis)",
		"d": "Atgriež skaitļa bāzes 10 logaritmu",
		"ad": "ir pozitīvs reālais skaitlis, kam iegūstams bāzes 10 logaritms"
	},
	"MDETERM": {
		"a": "(masīvs)",
		"d": "Atgriež masīva matricas determinantu",
		"ad": "ir skaitlisks masīvs ar vienādu rindu un kolonnu skaitu, konstantu šūnu diapazonu vai masīvu"
	},
	"MINVERSE": {
		"a": "(masīvs)",
		"d": "Atgriež masīvā glabātas matricas apgriezto matricu",
		"ad": "ir skaitlisks masīvs ar vienādu rindu un kolonnu skaitu, konstantu šūnu diapazonu vai masīvu"
	},
	"MMULT": {
		"a": "(masīvs1; masīvs2)",
		"d": "Atgriež divu masīvu reizinājumu - masīvu ar to pašu rindu skaitu kā masīvs1 un ar to pašu kolonnu skaitu kā masīvs2",
		"ad": "ir pirmais reizināmais skaitļu masīvs un tam jābūt tikpat daudz kolonnām kā masīvs2 rindām"
	},
	"MOD": {
		"a": "(skaitlis; dalītājs)",
		"d": "Atgriež atlikumu pēc skaitļa dalīšanas ar dalītāju",
		"ad": "ir skaitlis, kura atlikums pēc dalīšanas ir jāuzzina!ir skaitlis, ar kuru jādala Skaitlis"
	},
	"MROUND": {
		"a": "(skaitlis; dalāmais_skaitlis)",
		"d": "Atgriež skaitli, kas noapaļots līdz vēlamajam dalāmajam skaitlim",
		"ad": "ir noapaļojamā vērtība!ir dalāmais skaitlis, līdz kuram jānoapaļo skaitlis"
	},
	"MULTINOMIAL": {
		"a": "(skaitlis1; [skaitlis2]; ...)",
		"d": "Atgriež datu kopas multinomiālu",
		"ad": "ir vērtības no 1 līdz 255, kurām iegūstams multinomiāls"
	},
	"MUNIT": {
		"a": "(dimensija)",
		"d": "Atgriež norādītās dimensijas vienības matricu",
		"ad": "ir veselais skaitlis, kas norāda tās vienības matricas dimensiju, kura jāatgriež"
	},
	"ODD": {
		"a": "(skaitlis)",
		"d": "Noapaļo pozitīvu skaitli uz augšu, bet negatīvu - uz leju līdz tuvākajam veselajam nepāra skaitlim",
		"ad": "noapaļojamā vērtība"
	},
	"PI": {
		"a": "()",
		"d": "Atgriež vērtību Pi - 3,14159265358979 ar precizitāti līdz 15 cipariem",
		"ad": ""
	},
	"POWER": {
		"a": "(skaitlis; pakāpe)",
		"d": "Atgriež skaitļa kāpināšanas rezultātu",
		"ad": "ir bāzes skaitlis, jebkurš reāls skaitlis!ir bāzes skaitļa kāpinātājs"
	},
	"PRODUCT": {
		"a": "(skaitlis1; [skaitlis2]; ...)",
		"d": "Reizina visus skaitļus, kas sniegti kā argumenti",
		"ad": "ir 1 līdz 255 skaitļu. loģisko vērtību vai tekstuālu skaitļu atspoguļojumu, ko var sareizināt"
	},
	"QUOTIENT": {
		"a": "(skaitītājs; saucējs)",
		"d": "Atgriež dalījuma veselo daļu",
		"ad": "ir dalāmais!ir dalītājs"
	},
	"RADIANS": {
		"a": "(leņķis)",
		"d": "Konvertē grādus par radiāniem",
		"ad": "ir konvertējamais leņķis grādos"
	},
	"RAND": {
		"a": "()",
		"d": "Atgriež gadījumskaitli, kas lielāks vai vienāds ar nulli un mazāks par 1 un ir vienmērīgi sadalīts (veicot pārrēķinu, mainās)",
		"ad": ""
	},
	"RANDARRAY": {
		"a": "([rindas]; [ailes]; [min]; [max]; [vesels_skaitlis])",
		"d": "Atgriež gadījumskaitļu masīvu",
		"ad": "rindu skaits atgrieztajā masīvā!sleju skaits atgrieztajā masīvā!minimālais skaitlis, kuru vēlaties atgriezt! maksimālais skaitlis, kuru vēlaties atgriezt! atgriezt veselu skaitļu vai decimāldaļskaitļu vērtības. TRUE veselam skaitlim, FALSE decimāldaļskaitlim"
	},
	"RANDBETWEEN": {
		"a": "(mazākais; lielākais)",
		"d": "Atgriež nejauši izvēlētu skaitli starp norādītajiem skaitļiem",
		"ad": "ir mazākais veselais skaitlis RANDBETWEEN, kas tiek atgriezts!ir lielākais veselais skaitlis RANDBETWEEN, kas tiek atgriezts"
	},
	"ROMAN": {
		"a": "(skaitlis; [forma])",
		"d": "Konvertē arābu skaitļus uz romiešu skaitļiem kā tekstu",
		"ad": "ir konvertējamais arābu skaitlis!ir skaitlis, kas norāda vajadzīgā romiešu skaitļa tipu."
	},
	"ROUND": {
		"a": "(skaitlis; ciparu_skaits)",
		"d": "Noapaļo skaitli līdz norādītajam ciparu skaitam",
		"ad": "ir noapaļojamais skaitlis!ir ciparu skaits, līdz kuram jānoapaļo. Ja negatīvs, noapaļošana notiek pa kreisi no decimālzīmes; nulle - līdz tuvākajam veselajam skaitlim"
	},
	"ROUNDDOWN": {
		"a": "(skaitlis; ciparu_skaits)",
		"d": "Noapaļo skaitli uz leju virzienā uz nulli",
		"ad": "ir jebkurš reāls skaitlis, kas noapaļojams uz leju!ir ciparu skaits, līdz kuram jānoapaļo. Ja negatīvs - skaitlis tiek noapaļots pa kreisi no decimālzīmes; ja nulle vai izlaists - līdz tuvākajam veselajam skaitlim"
	},
	"ROUNDUP": {
		"a": "(skaitlis; ciparu_skaits)",
		"d": "Noapaļo skaitli uz augšu virzienā no nulles",
		"ad": "ir jebkurš reāls skaitlis, kas noapaļojams uz augšu!ir ciparu skaits, līdz kuram jānoapaļo. Ja negatīvs - skaitlis tiek noapaļots pa kreisi no decimālzīmes; ja nulle vai izlaists - līdz tuvākajam veselajam skaitlim"
	},
	"SEC": {
		"a": "(skaitlis)",
		"d": "atgriež leņķa sekanti",
		"ad": "ir leņķis radiānos, kam aprēķināma sekante"
	},
	"SECH": {
		"a": "(skaitlis)",
		"d": "atgriež leņķa hiperbolisko sekanti",
		"ad": "ir leņķis radiānos, kam aprēķināma hiperboliskā sekante"
	},
	"SERIESSUM": {
		"a": "(x; n; m; koeficienti)",
		"d": "Atgriež pakāpju sērijas summu, kas balstīta formulā",
		"ad": "ir ievades vērtība pakāpju sērijās!ir sākotnējā pakāpe, kurā kāpināms x!ir solis, par kādu palielināt n katrā sērijas izteiksmē!ir koeficientu kopa, kurā tiek reizināta katra secīgā x pakāpe"
	},
	"SIGN": {
		"a": "(skaitlis)",
		"d": "Atgriež skaitļa zīmi: 1, ja skaitlis ir pozitīvs, nulli, ja skaitlis ir nulle, vai -1, ja skaitlis ir negatīvs",
		"ad": "ir jebkurš reālais skaitlis"
	},
	"SIN": {
		"a": "(skaitlis)",
		"d": "Atgriež leņķa sinusu",
		"ad": "ir leņķis radiānos, kam jāiegūst sinuss. Grādi * PI()/180 = radiāni"
	},
	"SINH": {
		"a": "(skaitlis)",
		"d": "Atgriež skaitļa hiperbolisko sinusu",
		"ad": "ir jebkurš reāls skaitlis"
	},
	"SQRT": {
		"a": "(skaitlis)",
		"d": "Atgriež skaitļa kvadrātsakni",
		"ad": "ir skaitlis, kuram iegūstama kvadrātsakne"
	},
	"SQRTPI": {
		"a": "(skaitlis)",
		"d": "Atgriež kvadrātsakni (skaitlis * Pi)",
		"ad": "ir skaitlis, ar kuru p tiek reizināts"
	},
	"SUBTOTAL": {
		"a": "(funkcijas_num; ats1; ...)",
		"d": "Atgriež starpsummu sarakstā vai datu bāzē",
		"ad": "ir skaitlis no 1 līdz 11, kas norāda starpsummas kopsavilkuma funkciju.!ir 1 līdz 254 diapazoni vai atsauces, kam jāaprēķina starpsummas"
	},
	"SUM": {
		"a": "(skaitlis1; [skaitlis2]; ...)",
		"d": "Saskaita visus šūnu diapazonā esošos skaitļus",
		"ad": "ir 1 līdz 255 saskaitāmu skaitļu. Loģiskās vērtības un teksts, kas ir šūnās, tiek ignorēts arī tad, ja ievadīts kā argumenti"
	},
	"SUMIF": {
		"a": "(diapazons; kritēriji; [summas_diapazons])",
		"d": "Saskaita noteikta nosacījuma vai kritēriju norādītas šūnas",
		"ad": "ir novērtējamo šūnu diapazons!ir nosacījums vai kritēriji skaitļa, izteiksmes vai teksta formā, kas definē, kuras šūnas tiks saskaitītas!ir faktiskās summējamās šūnas. Ja izlaiž, tiek summētas diapazona šūnas"
	},
	"SUMIFS": {
		"a": "(summas_diapazons; kritēriju_diapazons; kritēriji; ...)",
		"d": "Pievieno šūnas, ko norāda dotā nosacījumu kopa vai kritēriji",
		"ad": "ir faktiski saskaitāmās šūnas!ir šūnu diapazons, kuru jāvērtē pēc noteiktā nosacījuma!ir nosacījums skaitļa veidā, izteiksme vai teksts, kas nosaka, kuras šūnas tiks pievienotas"
	},
	"SUMPRODUCT": {
		"a": "(masīvs1; [masīvs2]; [masīvs3]; ...)",
		"d": "Atgriež atbilstošo diapazonu vai masīvu reizinājumu summu",
		"ad": "ir 2 līdz 255 masīvu, kuri jāsareizina un pēc tam to komponenti jāsaskaita. Visiem masīviem jābūt vienādu izmēru"
	},
	"SUMSQ": {
		"a": "(skaitlis1; [skaitlis2]; ...)",
		"d": "Atgriež argumentu kvadrātu summu. Argumenti var būt skaitļi, masīvi, nosaukumi vai atsauces uz šūnām, kurās ir skaitļi",
		"ad": "ir 1 līdz 255 skaitļu, masīvu, nosaukumu vai atsauču uz masīviem, kuriem aprēķināma kvadrātu summa"
	},
	"SUMX2MY2": {
		"a": "(masīvs_x; masīvs_y)",
		"d": "Sasummē divu atbilstošu diapazonu vai masīvu kvadrātu atšķirības",
		"ad": "ir pirmais vērtību diapazons vai masīvs; tās var būt skaitļi vai nosaukumi, masīvi vai atsauces, kurās ir skaitļi!ir otrais vērtību diapazons vai masīvs; tās var būt skaitļi vai nosaukumi, masīvi vai atsauces, kurās ir skaitļi"
	},
	"SUMX2PY2": {
		"a": "(masīvs_x; masīvs_y)",
		"d": "Atgriež divu atbilstošu diapazonu vai masīvu skaitļu kvadrātu summu kopsummu",
		"ad": "ir pirmais skaitļu diapazons vai masīvs; tas var būt skaitļi vai nosaukumi, masīvi vai atsauces, kurās ir skaitļi!ir otrais skaitļu diapazons vai masīvs; tas var būt skaitļi vai nosaukumi, masīvi vai atsauces, kurās ir skaitļi"
	},
	"SUMXMY2": {
		"a": "(masīvs_x; masīvs_y)",
		"d": "Sasummē divu atbilstošu diapazonu vai masīvu atšķirību kvadrātus",
		"ad": "ir pirmais vērtību diapazons vai masīvs; tās var būt skaitļi vai nosaukumi, masīvi vai atsauces, kurās ir skaitļi!ir otrais vērtību diapazons vai masīvs; tās var būt skaitļi vai nosaukumi, masīvi vai atsauces, kurās ir skaitļi"
	},
	"TAN": {
		"a": "(skaitlis)",
		"d": "Atgriež leņķa tangensu",
		"ad": "ir leņķis radiānos, kam jāiegūst tangenss. Grādi * PI()/180 = radiāni"
	},
	"TANH": {
		"a": "(skaitlis)",
		"d": "Atgriež skaitļa hiperbolisko tangensu",
		"ad": "ir jebkurš reāls skaitlis"
	},
	"TRUNC": {
		"a": "(skaitlis; [ciparu_skaits])",
		"d": "Aprauj skaitli līdz veselam skaitlim, noņemot skaitļa decimāldaļu",
		"ad": "ir apraujamais skaitlis!ir skaitlis, kas norāda apraušanas precizitāti, 0 (nulle), ja izlaists"
	},
	"ADDRESS": {
		"a": "(rindas_num; kolonnas_num; [abs_num]; [a1]; [lapas])",
		"d": "Izveido šūnas atsauci kā tekstu, ja norādīti rindas un kolonnas numuri",
		"ad": "ir rindas numurs, kas izmantojams šūnas atsaucē: Rindas_numurs = 1 ir rindai1!ir kolonnas numurs, kas izmantojams šūnas atsaucē. Piemēram, Kolonnas_numurs = 4 ir kolonnaiD!norāda atsauces tipu: absolūtais = 1; absolūtais rindas/relatīvais kolonnas = 2; relatīvais rindas/absolūtais kolonnas = 3; relatīvais = 4!ir loģiskā vērtība, kas norāda atsauces stilu: A1 stils = 1 vai TRUE; R1K1 stils = 0 vai FALSE!ir teksts, kas norāda tās darblapas nosaukumu, kura izmantojama kā ārējā atsauce"
	},
	"CHOOSE": {
		"a": "(indeksa_num; vērtība1; [vērtība2]; ...)",
		"d": "Izvēlas vērtību vai veicamo darbību no vērtību saraksta atkarībā no indeksa skaitļa",
		"ad": "norāda, kurš vērtības arguments tiek atlasīts. Indeksa_num ir jābūt no 1 līdz 254 vai formulai vai atsaucei uz skaitli no 1 līdz 254!ir 1 līdz 254 skaitļi, atsauces uz šūnām, definēti nosaukumi, funkcijas vai teksta argumenti, no kuriem funkcija CHOOSE veic atlasi"
	},
	"COLUMN": {
		"a": "([atsauce])",
		"d": "Atgriež atsauces kolonnas numuru",
		"ad": "ir šūna vai blakusesošu šūnu diapazons, kam uzzināms kolonnas numurs. Ja izlaists, tiek izmantota šūna, kurā ir COLUMN funkcija"
	},
	"COLUMNS": {
		"a": "(masīvs)",
		"d": "Atgriež kolonnu skaitu atsaucē vai masīvā",
		"ad": "ir masīvs, masīva formula vai atsauce uz šūnu diapazonu, kam jāuzzina kolonnu skaits"
	},
	"FORMULATEXT": {
		"a": "(atsauce)",
		"d": "Atgriež formulu kā virkni",
		"ad": "ir formulas atsauce"
	},
	"HLOOKUP": {
		"a": "(uzmeklējamā_vērtība; tabulas_masīvs; rinda_indeksa_num; [diapazona_uzmeklēšana])",
		"d": "Meklē vērtību tabulas vai vērtību masīva augšējā rindā un atgriež to tajā pašā rindas kolonnā, kuru norāda",
		"ad": "ir tabulas pirmajā rindā uzmeklējamā vērtība; tā var būt vērtība, atsauce vai teksta virkne!ir teksta, skaitļu vai loģisko vērtību tabula, kurā dati tiek meklēti. Tabulas_masīvs var būt atsauce uz diapazonu vai diapazona nosaukumu!ir rindas numurs tabulas_masīvā, no kura jāatgriež atbilstīgā vērtība. Tabulas pirmā vērtību rinda ir 1. rinda!ir loģiskā vērtība: lai augšējā rindā (kārtojot augošā secībā) atrastu visvairāk atbilstošo = TRUE vai izlaists; lai atrastu pilnīgi atbilstošu = FALSE"
	},
	"HYPERLINK": {
		"a": "(saite_uz_atraš_vietu; [pazīšanas_vārds])",
		"d": "Izveido saīsni vai īsceļu, kas atver datora cietajā diskā, tīkla serverī vai internetā glabātu dokumentu",
		"ad": "ir teksts, kas norāda atveramā dokumenta ceļu un faila nosaukumu - vietu cietajā diskā, UNC adresi vai URL ceļu!ir teksts vai skaitlis, kas tiek rādīts šūnā. Ja izlaiž, šūnā tiek rādīts teksts Saite_uz_atraš_vietu"
	},
	"INDEX": {
		"a": "(masīvs; rindas_numurs; [kolonnas_numurs]!atsauce; rindas_numurs; [kolonnas_numurs]; [apgabala_numurs])",
		"d": "Atgriež vērtību vai šūnas atsauci, kas atrodas noteiktas rindas un kolonnas krustpunktā norādītajā diapazonā",
		"ad": "ir šūnu diapazons vai masīva konstante.!atlasa rindu Masīvā vai Atsauci, no kuras jāatgriež vērtība. Ja izlaists, ir nepieciešams Kolonnas_numurs!atlasa kolonnu Masīvā vai Atsauci, no kuras jāatgriež vērtība. Ja izlaists, ir nepieciešams Rindas_numurs!ir atsauce uz vienu vai vairākiem šūnu diapazoniem!atlasa rindu Masīvā vai Atsauci, no kuras jāatgriež vērtība. Ja izlaists, ir nepieciešams Kolonnas_numurs!atlasa kolonnu Masīvā vai Atsauci, no kuras jāatgriež vērtība. Ja izlaists, ir nepieciešams Rindas_numurs!atlasa diapazonu Atsaucē, no kuras jāatgriež vērtība. Pirmais atlasītais vai ievadītais apgabals ir 1. apgabals, otrais apgabals ir 2. apgabals un tā tālāk"
	},
	"INDIRECT": {
		"a": "(ats_teksts; [a1])",
		"d": "Atgriež atsauci, kas norādīta teksta virknē",
		"ad": "ir atsauce uz šūnu, kurā ietilpst A1 vai R1K1 stila atsauce, nosaukums, kas definēts kā atsauce vai atsauce uz šūnu kā teksta virkne!ir loģiskā vērtība, kas norāda atsauces tipu Ats_tekstā: R1K1 stils = FALSE; A1 stils = TRUE vai izlaists"
	},
	"LOOKUP": {
		"a": "(uzmeklējamā_vērtība; uzmeklēšanas_vektors; [rezultāta_vektors]!uzmeklējamā_vērtība; masīvs)",
		"d": "Uzmeklē vērtību vienas rindas vai vienas kolonnas diapazonā vai masīvā. Paredzēts atpakaļsaderībai",
		"ad": "ir vērtība, kuru funkcija LOOKUP meklē Uzmeklēšanas_vektorā; tas var būt skaitlis, teksts, loģiskā vērtība vai nosaukums vai atsauce uz vērtību!ir diapazons, kurā ietilpst tikai viena rinda vai viena kolonna ar tekstu, skaitļiem vai loģiskajām vērtībām, kas izkārtotas augošā secībā!ir diapazons, kurā ir tikai viena rinda vai kolonna; tas ir tikpat liels kā Uzmeklēšanas_vektors!ir vērtība, kuru funkcija LOOKUP meklē masīvā; tas var būt skaitlis, teksts, loģiskā vērtība vai nosaukums vai atsauce uz vērtību!ir šūnu diapazons, kurā ietilpst teksts, skaitlis vai loģiskās vērtības, kas jāsalīdzina ar Uzmeklējamo_vērtību"
	},
	"MATCH": {
		"a": "(uzmeklējamā_vērtība; uzmeklēšanas_masīvs; [atbilstības_tips])",
		"d": "Atgriež tāda masīva vienuma relatīvo pozīciju, kurš atbilst norādītai vērtībai norādītā kārtībā",
		"ad": "ir vērtība, ko izmanto, lai atrastu vajadzīgo vērtību masīvā, skaitli, tekstu vai loģisko vērtību, vai atsauci uz kādu no tiem!ir blakusesošu šūnu diapazons, kurā ietilpst iespējamās uzmeklējamās vērtības, vērtību masīvs vai atsauce uz masīvu!ir skaitlis 1, 0 vai -1, kas norāda atgriežamo vērtību."
	},
	"OFFSET": {
		"a": "(atsauce; rindas; kolonnas; [augstums]; [platums])",
		"d": "Atgriež atsauci uz diapazonu, kas ir noteikts rindu un kolonnu skaits no noteiktas atsauces",
		"ad": "ir atsauce, no kuras jāveido nobīde, atsauce uz šūnu vai blakusesošu šūnu diapazonu!ir rindu skaits uz augšu vai uz leju, uz kuru jāatsaucas rezultāta kreisajai augšējai šūnai!ir kolonnu skaits pa kreisi vai pa labi, uz kuru jāatsaucas rezultāta kreisajai augšējai šūnai!ir augstums rindās, kādam jābūt rezultātam; tāds pats augstums kā Atsaucei, ja izlaists!ir platums kolonnās, kādam jābūt rezultātam; tāds pats platums kā Atsaucei, ja izlaists"
	},
	"ROW": {
		"a": "([atsauce])",
		"d": "Atgriež atsauces rindas numuru",
		"ad": "ir šūna vai viens šūnu diapazons, kam uzzināms rindas numurs; ja izlaists, tiek atgriezta šūna, kurā ir RINDAS funkcija"
	},
	"ROWS": {
		"a": "(masīvs)",
		"d": "Atgriež rindu skaitu atsaucē vai masīvā",
		"ad": "ir masīvs, masīva formula vai šūnu diapazons, kam jāuzzina rindu skaits"
	},
	"TRANSPOSE": {
		"a": "(masīvs)",
		"d": "Konvertē vertikālu šūnu diapazonu par horizontālu un pretēji",
		"ad": "ir šūnu diapazons darblapā vērtību masīvs, kas jāpārvieto"
	},
	"UNIQUE": {
		"a": "(masīvs; [pēc_kolonnas]; [tieši_vienreiz])",
		"d": "Atgriež unikālās vērtības no diapazona vai masīva.",
		"ad": "diapazons vai masīvs, no kura jāatgriež unikālas rindas vai kolonnas!ir loģiska vērtība: salīdziniet rindas savā starpā un atgrieziet unikālās rindas = FALSE vai izlaists; salīdziniet kolonnas savā starpā un atgrieziet unikālās kolonnas = TRUE!ir loģiska vērtība: atgriež rindas vai kolonnas, kas parādās tieši vienreiz no masīva = TRUE; atgriezt visas atšķirīgās rindas vai kolonnas no masīva = FALSE vai izlaists"
	},
	"VLOOKUP": {
		"a": "(uzmeklējamā_vērtība; tabulas_masīvs; kolonna_indeksa_num; [diapazona_uzmeklēšana])",
		"d": "Meklē vērtību tabulas pēdējā kolonnā pa kreisi un pēc tam atgriež vērtību tajā pašā kolonnas rindā, kuru norāda. Pēc noklusējuma tabulai jābūt sakārtotai augošā secībā",
		"ad": "ir tabulas pirmajā kolonnā atrodamā vērtība; tā var būt vērtība, atsauce vai teksta virkne!ir teksta, skaitļu vai loģisko vērtību tabula, no kuras tiek izgūti dati. Tabulas_masīvs var būt atsauce uz diapazonu vai diapazona nosaukums!ir kolonnas numurs tabulas_masīvā, no kura jāatgriež atbilstīgās vērtības. Pirmā vērtību kolonna tabulā ir 1. kolonna!ir loģiskā vērtība: lai atrastu visatbilstošāko pirmajā kolonnā (kas sakārtota augošā secībā) = TRUE vai izlaista; lai atrastu pilnīgi atbilstošu = FALSE"
	},
	"XLOOKUP": {
		"a": "(uzmeklējamā_vērtība; uzmeklēšanas_masīvs; atgriešanas_masīvs; [ja_nav_atrasts]; [atbilstības_režīms]; [meklēšanas_režīms])",
		"d": "Meklē diapazonā vai masīvā atbilstību un atgriež atbilstošo vienumu no otra diapazona vai masīva. Pēc noklusējuma tiek izmantota precīza atbilstība",
		"ad": "ir meklējamā vērtība!ir masīvs vai diapazons, kurā meklēt!ir masīvs vai diapazons vērtības atgriešanai!tiek atgriezts, ja nav atrasta atbilstība!norādiet uzmeklējamās vērtības atbilstību ar vērtībām uzmeklēšanas masīvā!norādiet izmantojamo meklēšanas režīmu. Pēc noklusējuma tiks izmantota meklēšana no pirmā līdz pēdējam vienumam"
	},
	"CELL": {
		"a": "(info_tips; [atsauce])",
		"d": "Atgriež informāciju par šūnas formatējumu, atrašanās vietu vai saturu",
        "ad": "Teksta vērtība, kas norāda, kādu šūnas informācijas tipu vēlaties atgriezt!Šūna, par kuru vēlaties informāciju"
	},
	"ERROR.TYPE": {
		"a": "(kļūdas_vērt)",
		"d": "Atgriež skaitli, kas atbilst kļūdas vērtībai.",
		"ad": "ir kļūdas vērtība, kam jāuzzina identifikācijas numurs; tā var būt reālā kļūdas vērtība vai atsauce uz šūnu, kurā ietilpst kļūdas vērtība"
	},
	"ISBLANK": {
		"a": "(vērtība)",
		"d": "Pārbauda, vai atsauce nav uz tukšu šūnu un atgriež TRUE vai FALSE",
		"ad": "ir šūna, vai nosaukums, kas atsaucas uz pārbaudāmo šūnu"
	},
	"ISERR": {
		"a": "(vērtība)",
		"d": "Pārbauda, vai vērtība ir kļūda, kas nav #N/A, un atgriež TRUE vai FALSE",
		"ad": "ir pārbaudāmā vērtība. Vērtība var atsaukties uz šūnu, formulu vai uz nosaukumu, kurš atsaucas uz šūnu, formulu vai vērtību"
	},
	"ISERROR": {
		"a": "(vērtība)",
		"d": "Pārbauda, vai vērtība ir kļūda, un atgriež TRUE vai FALSE",
		"ad": "ir pārbaudāmā vērtība. Vērtība var atsaukties uz šūnu, formulu vai uz nosaukumu, kurš atsaucas uz šūnu, formulu vai vērtību"
	},
	"ISEVEN": {
		"a": "(skaitlis)",
		"d": "Atgriež TRUE, ja ir pārskaitlis",
		"ad": "ir pārbaudāmā vērtība"
	},
	"ISFORMULA": {
		"a": "(atsauce)",
		"d": "Pārbauda, vai atsauce ir uz šūnu, kurā ir formula, un atgriež TRUE vai FALSE",
		"ad": "ir atsauce uz šūnu, kura jāpārbauda.  Atsauce var būt šūnas atsauce, formula vai nosaukums, kas atsaucas uz šūnu"
	},
	"ISLOGICAL": {
		"a": "(vērtība)",
		"d": "Pārbauda, vai vērtība ir loģiskā vērtība (TRUE vai FALSE) un atgriež TRUE vai FALSE",
		"ad": "ir pārbaudāmā vērtība. Vērtība var atsaukties uz šūnu, formulu vai nosaukumu, kas atsaucas uz šūnu, formulu vai vērtību"
	},
	"ISNA": {
		"a": "(vērtība)",
		"d": "Pārbauda, vai vērtība ir #N/A un atgriež TRUE vai FALSE",
		"ad": "ir pārbaudāmā vērtība. Vērtība var atsaukties uz šūnu, formulu vai uz nosaukumu, kurš atsaucas uz šūnu, formulu vai vērtību"
	},
	"ISNONTEXT": {
		"a": "(vērtība)",
		"d": "Pārbauda, vai vērtība nav teksts (tukšas šūnas nav teksts) un atgriež TRUE vai FALSE",
		"ad": "ir pārbaudāmā vērtība: šūna, formula vai nosaukums, kas atsaucas uz šūnu, formulu vai vērtību"
	},
	"ISNUMBER": {
		"a": "(vērtība)",
		"d": "Pārbauda, vai vērtība ir skaitlis un atgriež TRUE vai FALSE",
		"ad": "ir pārbaudāmā vērtība. Vērtība var atsaukties uz šūnu, formulu vai nosaukumu, kas atsaucas uz šūnu, formulu vai vērtību"
	},
	"ISODD": {
		"a": "(skaitlis)",
		"d": "Atgriež TRUE, ja ir nepārskaitlis",
		"ad": "ir pārbaudāmā vērtība"
	},
	"ISREF": {
		"a": "(vērtība)",
		"d": "Pārbauda, vai vērtība ir atsauce un atgriež TRUE vai FALSE",
		"ad": "ir pārbaudāmā vērtība. Vērtība var atsaukties uz šūnu, formulu vai nosaukumu, kas atsaucas uz šūnu"
	},
	"ISTEXT": {
		"a": "(vērtība)",
		"d": "Pārbauda, vai vērtība ir teksts un atgriež TRUE vai FALSE",
		"ad": "ir pārbaudāmā vērtība. Vērtība var atsaukties uz šūnu, formulu vai nosaukumu, kas atsaucas uz šūnu, formulu vai vērtību"
	},
	"N": {
		"a": "(vērtība)",
		"d": "Konvertē vērtību, kas nav skaitlis, par skaitli, datumus - par seriāliem skaitļiem, TRUE uz 1, visu citu - uz 0 (nulli)",
		"ad": "ir konvertējamā vērtība"
	},
	"NA": {
		"a": "()",
		"d": "Atgriež kļūdas vērtību #N/A (vērtība nav pieejama)",
		"ad": ""
	},
	"SHEET": {
		"a": "([vērtība])",
		"d": "Atgriež atsauces lapas numuru",
		"ad": "ir lapas nosaukums vai atsauce, kurai jānorāda lapas numurs.  Ja šo izlaiž, tiek atgriezts tās lapas numurs, kurā ir šī funkcija"
	},
	"SHEETS": {
		"a": "([atsauce])",
		"d": "Atgriež lapu skaitu atsaucē",
		"ad": "ir atsauce, par kuru jānorāda tajā esošo lapu skaits. Ja šo izlaiž, tiek atgriezts tās darbgrāmatas lapu skaits, kurā ir šī funkcija"
	},
	"TYPE": {
		"a": "(vērtība)",
		"d": "Atgriež veselu skaitli, kas apzīmē vērtības datu tipu: skaitlis = 1; teksts = 2; loģiskā vērtība = 4; kļūdas vērtība = 16; masīvs = 64; saliktie dati = 128",
		"ad": "var būt jebkura vērtība"
	},
	"AND": {
		"a": "(loģiskā1; [loģiskā2]; ...)",
		"d": "Pārbauda, vai visi argumenti ir TRUE, un atgriež TRUE, ja visi argumenti ir TRUE",
		"ad": "ir 1 līdz 255 nosacījumi, kas pārbaudāmi un kas var būt TRUE vai FALSE; tie var būt loģiskās vērtības, masīvi vai atsauces"
	},
	"FALSE": {
		"a": "()",
		"d": "Atgriež loģisko vērtību FALSE",
		"ad": ""
	},
	"IF": {
		"a": "(loģiskais_tests; [vērtība_ja_true]; [vērtība_ja_false])",
		"d": "Pārbauda, vai ir ievērots nosacījums, un atgriež vienu vērtību, ja TRUE, bet citu vērtību, ja - FALSE",
		"ad": "ir jebkura vērtība vai izteiksme, kuru var novērtēt ar TRUE vai FALSE!ir vērtība, kuru atgriež, ja loģiskais_tests ir TRUE. Ja tas tiek izlaists, tiek atgriezts TRUE. Ir iespējams ligzdot līdz septiņām IF funkcijām!ir vērtība, kas tiek atgriezta, ja loģiskais_tests ir FALSE. Ja tiek izlaists, tiek atgriezts FALSE"
	},
	"IFS": {
		"a": "(loģiskais_tests; vērtība_ja_patiess; ...)",
		"d": "Pārbauda, vai ir izpildīts viens vai vairāki nosacījumi, un atgriež vērtību, kas atbilst pirmajam PATIESAJAM nosacījumam",
		"ad": "Jebkura vērtība vai izteiksme, kuru var novērtēt ar PATIESS vai APLAMS!Atgrieztā vērtība, ja loģiskais_tests ir PATIESS"
	},
	"IFERROR": {
		"a": "(vērtība; vērtība_ja_kļūda)",
		"d": "Atgriež vērtība_ja_kļūda, ja izteiksme ir kļūdaina, bet pretējā gadījumā — pašas izteiksmes vērtību",
		"ad": "ir jebkāda vērtība vai izteiksme, vai atsauce!ir jebkāda vērtība vai izteiksme, vai atsauce"
	},
	"IFNA": {
		"a": "(vērtība; vērtība_ja_nav_pieej)",
		"d": "Atgriež norādīto vērtību, ja izteiksmes atrisinājums ir #N/A; citos gadījumos atgriež izteiksmes vērtību",
		"ad": "ir jebkāda vērtībai vai izteiksme, vai atsauce!ir jebkāda vērtībai vai izteiksme, vai atsauce"
	},
	"NOT": {
		"a": "(loģiskā)",
		"d": "Maina FALSE uz TRUE vai TRUE uz FALSE",
		"ad": "ir vērtība vai izteiksme, ko var novērtēt kā TRUE vai FALSE"
	},
	"OR": {
		"a": "(loģiskā1; [loģiskā2]; ...)",
		"d": "Pārbauda, vai kāds no argumentiem ir TRUE, un atgriež TRUE vai FALSE. Atgriež FALSE tikai tad, ja visi argumenti ir FALSE",
		"ad": "ir 1 līdz 255 nosacījumi, kas pārbaudāmi un kas var būt TRUE vai FALSE"
	},
	"SWITCH": {
		"a": "(izteiksme; vērtība1; rezultāts1; [noklusējums_vai_vērtība2]; [rezultāts2]; ...)",
		"d": "Novērtē izteiksmi pret vērtību sarakstu un atgriež rezultātu, kas atbilst pirmajai atbilstošajai vērtībai. Ja atbilstības nav, tiek atgriezta neobligāta noklusējuma vērtība",
		"ad": "ir izteiksme, kas jānovērtē!ir vērtība, kas jāsalīdzina ar izteiksmi!ir rezultāts, kas jāatgriež, ja atbilstošā vērtība atbilst izteiksmei"
	},
	"TRUE": {
		"a": "()",
		"d": "Atgriež loģisko vērtību TRUE",
		"ad": ""
	},
	"XOR": {
		"a": "(loģiskā_vērtība1; [loģiskā_vērtība2]; ...)",
		"d": "No visiem argumentiem atgriež loģisko vērtību \"Izņemot/Vai\"",
		"ad": "ir 1 līdz 254 nosacījumi, kuri jāizmēģina, kuri var būt TRUE vai FALSE un kuri var būt loģiskās vērtības, masīvi vai atsauces"
	},
	"TEXTBEFORE": {
		"a": "(teksts, norobežotājs, [instances_num], [atbilstības_režīms], [atbilstības_beigas], [ja_nav_atrasts])",
		"d": "Atgriež tekstu, kas ir pirms norobežošanas rakstzīmēm.",
		"ad": "Teksts, kuru vēlaties meklēt norobežotājā.!Rakstzīme vai virkne, ko izmantot kā norobežotāju.!Vēlamais norobežotāja gadījums. Noklusējums ir 1. Negatīva skaitļa meklēšana no beigām.!Meklē norobežotāja atbilstības tekstu. Pēc noklusējuma ir pabeigta reģistrjutīga atbilstība.!Vai saskaņot norobežotāju ar teksta beigām. Pēc noklusējuma tie neatbilst.!Tiek atgriezts, ja atbilstības nav atrastas. Pēc noklusējuma tiek atgriezts #N/A."
	},
	"TEXTAFTER": {
		"a": "(teksts, norobežotājs, [instances_num], [atbilstības_režīms], [atbilstības_beigas], [ja_nav_atrasts])",
		"d": "Atgriež tekstu, kas ir pēc norobežošanas rakstzīmēm.",
		"ad": "Teksts, kuru vēlaties meklēt norobežotājā.!Rakstzīme vai virkne, ko izmantot kā norobežotāju.!Vēlamais norobežotāja gadījums. Noklusējums ir 1. Negatīva skaitļa meklēšana no beigām.!Meklē norobežotāja atbilstības tekstu. Pēc noklusējuma ir pabeigta reģistrjutīga atbilstība.!Vai saskaņot norobežotāju ar teksta beigām. Pēc noklusējuma tie neatbilst.!Tiek atgriezts, ja atbilstības nav atrastas. Pēc noklusējuma tiek atgriezts #N/A."
	},
	"TEXTSPLIT": {
		"a": "(teksts, kolonnu_norobežotājs, [rindu_norobežotājs], [ignorēt_tukšu], [atbilstības_režīms], [pilda_ar])",
		"d": "Sadala tekstu rindās vai kolonnās, izmantojot norobežotājus.",
		"ad": "Sadalāmais teksts!Rakstzīme vai virkne, ar kuru sadalīt kolonnas.!Rakstzīme vai virkne, ar kuru sadalīt rindas.!Vai ignorēt tukšās šūnas. Noklusējumi ir FALSE.!Meklē norobežotāja atbilstības tekstu. Pēc noklusējuma ir pabeigta reģistrjutīga atbilstība.!Vērtība pildīšanai. Pēc noklusējuma tiek lietots #N/A."
	},
	"WRAPROWS": {
		"a": "(vektors, wrap_count, [pad_with])",
		"d": "Aplauzt rindas vai kolonnas vektoru pēc norādītā vērtību skaita.",
		"ad": " Vektors vai atsauce, ko aplauzt! Maksimālais vērtību skaits rindā.! Vērtība, ar kuru pievienot tastatūru. Noklusējums ir #NA."
	},
	"VSTACK": {
		"a": "(masīvs1, [masīvs2], ...)",
		"d": "Vertikāli sagrupē masīvus vienā masīvā.",
		"ad": "Masīvs vai atsauce, kas jāsagrupē."
	},
	"HSTACK": {
		"a": "(masīvs1, [masīvs2], ...)",
		"d": "Horizontāli sagrupē masīvus vienā masīvā.",
		"ad": "Masīvs vai atsauce, kas jāsagrupē."
	},
	"CHOOSEROWS": {
		"a": "(masīvs, row_num1, [row_num2], ...)",
		"d": "Atgriež rindas no masīva vai atsauces.",
		"ad": "Masīvs vai atsauce, kurā ir atgriežamās rindas.!Atgriežamās rindas numurs."
	},
	"CHOOSECOLS": {
		"a": "(masīvs, col_num1, [col_num2], ...)",
		"d": "Atgriež kolonnas no masīva vai atsauces.",
		"ad": "Masīvs vai atsauce, kas satur atgriežamās kolonnas.!Atgriežamo kolonnu skaits."
	},
	"TOCOL": {
		"a": "(masīvs, [ignorēt], [scan_by_column])",
		"d": "Atgriež masīvu kā vienu kolonnu.",
		"ad": "Masīvs vai atsauce, kas jāatgriež kā kolonna.!Vai ignorēt noteiktu vērtību tipus. Pēc noklusējuma vērtības netiek ignorētas.!Pārbaudiet masīvu pēc kolonnas. Pēc noklusējuma masīvs tiek pārbaudīts pēc rindas."
	},
	"TOROW": {
		"a": "(array, [ignore], [scan_by_column])",
		"d": "Atgriež masīvu kā vienu rindu.",
		"ad": "Masīvs vai atsauce, kas jāatgriež kā rinda.!Vai ignorēt noteiktu vērtību tipus. Pēc noklusējuma vērtības netiek ignorētas.!Pārbaudiet masīvu pēc kolonnas. Pēc noklusējuma masīvs tiek pārbaudīts pēc rindas."
	},
	"WRAPCOLS": {
		"a": "(vektors, wrap_count, [pad_with])",
		"d": " Aplauzt rindas vai kolonnas vektoru pēc norādītā vērtību skaita.",
		"ad": " Vektors vai atsauce uz aplaušanu.! Maksimālais vērtību skaits kolonnā.! Vērtība, ar kuru pievienot tastatūru. Noklusējums ir #N/A."
	},
	"TAKE": {
		"a": "(masīvs, rindas, [kolonnas])",
		"d": "Atgriež rindas vai kolonnas no masīva sākuma vai beigām.",
		"ad": "Masīvs, no kura paņemt rindas vai kolonnas.!Paņemamo rindu skaits. Negatīva vērtība ir no masīva beigām.!Paņemamo kolonnu skaits. Negatīva vērtība ir no masīva beigām."
	},
	"DROP": {
		"a": "(masīvs, rindas, [kolonnas])",
		"d": "Nomet rindas vai kolonnas no masīva sākuma vai beigām.",
		"ad": "Masīvs, no kura nomest rindas vai kolonnas.!Nometamo rindu skaits. Negatīva vērtība krītas no masīva beigām.!Nometamo kolonnu skaits. Negatīva vērtība krītas no masīva beigām."
	},
	"SEQUENCE": {
		"a": "(rindas, [kolonnas], [sākums], [solis])",
		"d": "Atgriež skaitļu secību",
		"ad": "atgriežamo rindu skaits!atgriežamo kolonnu skaits!pirmais numurs secībā!palielinājuma lielums katrai nākamajai secības vērtībai"
	},
	"EXPAND": {
		"a": "(masīvs, rindas, [kolonnas], [pad_with])",
		"d": "Paplašina masīvu līdz norādītajiem izmēriem.",
		"ad": "Paplašināmais masīvs.!Rindu skaits paplašinātajā masīvā. Ja nav norādīts, rindas netiks pievienotas.!Kolonnu skaits paplašinātajā masīvā. Ja nav norādīts, kolonnas netiks pievienotas.!Vērtība, ar kuru papildināt masīvu. Noklusējums ir #N/A."
	},
	"XMATCH": {
		"a": "(lookup_value, lookup_array, [match_mode], [search_mode])",
		"d": "Atgriež vienuma relatīvo pozīciju masīvā. Pēc noklusējuma ir nepieciešama precīza atbilstība",
		"ad": "ir meklējamā vērtība!ir masīvs vai diapazons, kurā veikt meklēšanu!norādiet uzmeklēšanas_vērtība atbilstību ar uzmeklēšanas_masīvs vērtībām!norādiet izmantojamo meklēšanas režīmu. Pēc noklusējuma tiks izmantota meklēšana no pirmā līdz pēdējam vienumam"
	},
	"FILTER": {
		"a": "(masīvs, iekļaut, [ja_tukšs])",
		"d": "Filtrēt diapazonu vai masīvu",
		"ad": "diapazons vai masīvs filtrēšanai!Būla vērtību masīvs, kur PATIESS norāda saglabājamu rindu vai kolonnu!tiek atgriezts, ja neviens vienums netiek saglabāts"
	},
	"ARRAYTOTEXT": {
		"a": "(masīvs, [formāts])",
		"d": "Atgriež masīva teksta attēlojumu",
		"ad": " masīvs, kas jāattēlo kā teksts! teksta formāts"
	},
	"SORT": {
		"a": "(masīvs, [kārt_indekss], [kārt_secība], [pēc_kol])",
		"d": "Kārto diapazonu vai masīvu",
		"ad": "kārtojamais diapazons vai masīvs!skaitlis, kas norāda rindu vai kolonnas, pēc kuras kārtot!skaitlis, kas norāda vajadzīgo kārtošanas secību; 1 nozīmē augošā secībā (pēc noklusējuma), -1 nozīmē dilstošā secībā!loģiskā vērtība, kas norāda vajadzīgo kārtošanas virzienu: FALSE, lai kārtotu pēc rindas (noklusējums), TRUE, lai kārtotu pēc kolonnas"
	},
	"SORTBY": {
		"a": "(masīvs, pēc_masīva, [kārtošanas_secība], ...)",
		"d": "Kārto diapazonu vai masīvu pēc vērtībām atbilstošā diapazonā vai masīvā",
		"ad": "kārtojamais diapazons vai masīvs!diapazons vai masīvs, pēc kura kārtot!skaitlis, kas norāda vajadzīgo kārtošanas secību; 1 augošai secībai (pēc noklusējuma), -1 dilstošai secībai"
	},
	"GETPIVOTDATA": {
		"a": "(datu_lauks; rakurstabula; [lauks]; [objekts]; ...)",
		"d": "Izgūst datus, kas tiek glabāti rakurstabulā.",
		"ad": "ir tā datu lauka nosaukums, no kura jāizgūst dati!ir atsauce uz šūnu vai šūnu diapazonu rakurstabulā, kurā ietilpst izgūstamie dati!lauks, uz kuru ir atsauce!lauka objekts, uz kuru ir atsauce"
	},
	"IMPORTRANGE": {
		"a": "(izklājlapas_url, diapazona_virkne)",
		"d": "Importē šūnu diapazonu no noteiktas izklājlapas."
	}
}