{
	"DATE": {
		"a": "(yıl; ay; gün)",
		"d": "Tarih-saat kodundaki tarihi gösteren sayıyı verir.",
		"ad": "Windows için Spreadsheet Editor'de 1900 veya 1904 ile (çalışma kitabının tarih sistemine göre) 9999 arasındaki bir sayı!yılın ayını gösteren 1 ile 12 arasındaki sayı!ayın gününü gösteren 1 ile 31 arasındaki sayı"
	},
	"DATEDIF": {
		"a": "(başlangıç_tarihi; bitiş_tarihi; birim)",
		"d": "İki tarih arasındaki gün, ay veya yıl sayısını hesaplar",
		"ad": "Belirli bir dönemin ilk veya başlangıç tarihini temsil eden tarih!Dönemin son veya bitiş tarihini gösterir!Döndürülmesini istediğiniz bilgi türü"
	},
	"DATEVALUE": {
		"a": "(tarih_metni)",
		"d": "Metin formunda bulunan bir tarihi tarih-saat kodunu gösteren bir sayıya dönüştürür",
		"ad": "Bir tarihi Spreadsheet Editor tarih biçiminde 1/1/1900 ile 1/1/1904 veya (çalışma kitabının tarih sistemine göre) 12/31/9999 arasında gösteren metin"
	},
	"DAY": {
		"a": "(seri_no)",
		"d": "1 ile 31 arasındaki, ayın gününü döndürür.",
		"ad": "Spreadsheet Editor tarafından kullanılan tarih-saat kodundaki sayı"
	},
	"DAYS": {
		"a": "(bitiş_tarihi; başlangıç_tarihi)",
		"d": "İki tarih arasındaki gün sayısını döndürür.",
		"ad": "başlangıç_tarihi ve bitiş_tarihi aralarındaki gün sayısını bilmek istediğiniz iki tarih!başlangıç_tarihi ve bitiş_tarihi aralarındaki gün sayısını bilmek istediğiniz iki tarih"
	},
	"DAYS360": {
		"a": "(başlangıç_tarihi; bitiş_tarihi; [yöntem])",
		"d": "İki tarih arasındaki gün sayısını 360 günlük yılı kullanarak hesaplar (oniki 30 günlük ay)",
		"ad": "başlangıç_tarihi ve son_tarih, iki tarih arasındaki gün sayısını bulmak için kullanılır!başlangıç_tarihi ve son_tarih, iki tarih arasındaki gün sayısını bulmak için kullanılır!hesaplama yöntemini belirten mantıksal değer: ABD (NASD) = YANLIŞ ya da atlanmış; Avrupa = DOĞRU."
	},
	"EDATE": {
		"a": "(başlangıç_tarihi; ay_sayısı)",
		"d": "Başlangıç tarihinden önceki veya sonraki ay sayısını belirten tarihin seri numarasını döndürür",
		"ad": "başlangıç tarihini gösteren tarih seri numarası!başlangıç tarihinden önceki veya sonraki ay sayısı"
	},
	"EOMONTH": {
		"a": "(başlangıç_tarihi; ay_sayısı)",
		"d": "Belirtilen sayıda ay önce veya sonraki ayın son gününü belirten seri numarası döndürür",
		"ad": "başlangıç tarihini gösteren tarih seri numarası!başlangıç tarihinden önceki veya sonraki ay sayısı"
	},
	"HOUR": {
		"a": "(seri_no)",
		"d": "Saati verir, bir seri numarasına karşılık gelen 0 (12:00)'dan 23 (11:00)'e kadar bir tamsayı.",
		"ad": "Spreadsheet Editor tarafından kullanılan tarih-saat kodundaki sayı ya da zaman biçiminde metin, örneğin 16:48:00 ya da 4:48:00"
	},
	"ISOWEEKNUM": {
		"a": "(tarih)",
		"d": "Verilen tarih için yıl içinde ISO hafta numarasını döndürür",
		"ad": "tarih ve saat hesaplama için Spreadsheet Editor tarafından kullanılan tarih-saat kodu"
	},
	"MINUTE": {
		"a": "(seri_no)",
		"d": "Bir seri numarasına karşılık gelen, 0-59 arasında bir tamsayı olan dakikayı verir.",
		"ad": "Spreadsheet Editor tarafından kullanılan tarih-saat kodundaki sayı ya da zaman biçimindeki metin, örneğin 16:48:00 ya da 4:48:00"
	},
	"MONTH": {
		"a": "(seri_no)",
		"d": "1 (Ocak) ile 12 (Aralık) arasındaki bir sayı ile ifade edilen ayı döndürür.",
		"ad": "Spreadsheet Editor tarafından kullanılan tarih-saat kodundaki sayı"
	},
	"NETWORKDAYS": {
		"a": "(başlangıç_tarihi; bitiş_tarihi; [tatiller])",
		"d": "İki tarih arasındaki tüm işgünlerinin sayısını döndürür",
		"ad": "başlangıç tarihini gösteren tarih seri numarası!bitiş tarihini gösteren tarih seri numarası!isteğe göre çalışma takviminden çıkarılacak, bir veya daha fazla tarih seri numarası serisi; örneğin resmi tatiller"
	},
	"NETWORKDAYS.INTL": {
		"a": "(başlangıç_tarihi; bitiş_tarihi; [hafta_sonu]; [tatiller])",
		"d": "İki tarih arasındaki tam işgünlerinin sayısını özel hafta sonu parametreleriyle verir",
		"ad": "başlangıç tarihini gösteren tarih seri numarası!bitiş tarihini gösteren tarih seri numarası!hafta sonunun ne zaman olduğunu belirten sayı veya dize!isteğe göre çalışma takviminden çıkarılacak, bir veya daha fazla tarih seri numarası serisi; örneğin resmi tatiller"
	},
	"NOW": {
		"a": "()",
		"d": "Güncel tarihi ve saati, tarih ve saat biçiminde verir.",
		"ad": ""
	},
	"SECOND": {
		"a": "(seri_no)",
		"d": "Saniyeyi seri numarasına karşılık gelen 0 ile 59 arasında bir tamsayı cinsinden verir.",
		"ad": "Spreadsheet Editor tarafından kullanılan tarih-saat kodundaki sayı ya da saat biçimindeki metin, örneğin 16:48:23 ya da 4:48:47"
	},
	"TIME": {
		"a": "(saat; dakika; saniye)",
		"d": "Saat, dakika, saniye olarak girilen sayıları zaman biçimindeki seri numarasına dönüştürür",
		"ad": "0-23 arasında saati gösteren sayı!0-59 arasında dakikayı gösteren sayı!0-59 arasında saniyeyi gösteren sayı"
	},
	"TIMEVALUE": {
		"a": "(saat_metni)",
		"d": "Bir metin dizesiyle (saat_metni) gösterilen bir saati 0 (00:00:00) ile 0,999988426 (23:59:59) arasındaki saat seri numarasına çevirir. Formülü girdikten sonra sayıyı saat biçiminde biçimlendirin",
		"ad": "saati Spreadsheet Editor saat biçimlerinden herhangi biriyle gösteren metin dizesi (dizedeki tarih bilgisi yoksayılır)"
	},
	"TODAY": {
		"a": "()",
		"d": "Bugünkü tarihi, tarih biçiminde verir.",
		"ad": ""
	},
	"WEEKDAY": {
		"a": "(seri_no; [döndür_tür])",
		"d": "Verilen tarih gösteren sayıyı kullanarak haftanın gününü tanımlayan 1 ile 7 arasındaki sayı.",
		"ad": "bir tarih gösteren sayı!bir sayı: Pazar = 1'den Cumartesi = 7'ye ise, 1'i kullanın; Pazartesi = 1'den Pazar = 7'ye ise, 2'yi kullanın; Pazartesi = 0'dan Pazar = 6'ya ise, 3'ü kullanın"
	},
	"WEEKNUM": {
		"a": "(seri_num; [dönüş_türü])",
		"d": "Yıl içinde haftanın numarasını döndürür",
		"ad": "Spreadsheet Editor tarafından tarih ve zaman hesaplamalarında kullanılan tarih-zaman kodu!döndürülen değerin türünü belirleyen sayı(1 veya 2)"
	},
	"WORKDAY": {
		"a": "(başlangıç_tarihi; gün_sayısı; [tatiller])",
		"d": "Belirtilen sayıda işgünü önce veya sonraki bir tarihin seri numarasını döndürür",
		"ad": "başlangıç tarihini gösteren tarih seri numarası!başlangıç tarihinden önceki veya sonraki tatil veya haftasonu olmayan günler !isteğe göre çalışma takviminden çıkarılacak, bir veya daha fazla tarih seri numarası serisi; örneğin resmi tatiller"
	},
	"WORKDAY.INTL": {
		"a": "(başlangıç_tarihi; gün_sayısı; [hafta_sonu]; [tatiller])",
		"d": "Belirtilen sayıda işgünü önce veya sonraki bir tarihin seri numarasını özel hafta sonu parametreleriyle verir",
		"ad": "başlangıç tarihini gösteren tarih seri numarası!başlangıç tarihinden önceki veya sonraki tatil veya hafta sonu olmayan günler!hafta sonlarının ne zaman olduğunu belirten sayı veya dize!isteğe göre çalışma takviminden çıkarılacak, bir veya daha fazla tarih seri numarası dizisi; örneğin resmi tatiller"
	},
	"YEAR": {
		"a": "(seri_no)",
		"d": "1900 - 9999 aralığındaki bir tamsayı ile ifade edilen tarihin yılını döndürür.",
		"ad": "Spreadsheet Editor tarafından kullanılan tarih-saat kodundaki sayı"
	},
	"YEARFRAC": {
		"a": "(başlangıç_tarihi; bitiş_tarihi; [temel])",
		"d": "Başlangıç ve bitiş tarihleri arasındaki tam gün sayısını gösteren yıl oranını döndürür",
		"ad": "başlangıç tarihini gösteren tarih seri numarası!bitiş tarihini gösteren tarih seri numarası!kullanılacak gün sayısı türü"
	},
	"BESSELI": {
		"a": "(x; n)",
		"d": "In(x) değiştirilmiş Bessel işlevini döndürür",
		"ad": "işlevin hesaplanacağı değer!Bessel işlevinin derecesi"
	},
	"BESSELJ": {
		"a": "(x; n)",
		"d": "Jn(x) Bessel işlevini döndürür",
		"ad": "işlevin hesaplanacağı değer!Bessel işlevinin derecesi"
	},
	"BESSELK": {
		"a": "(x; n)",
		"d": "Kn(x) değiştirilmiş Bessel işlevini döndürür",
		"ad": "işlevin hesaplanacağı değer!işlevin derecesi"
	},
	"BESSELY": {
		"a": "(x; n)",
		"d": "Yn(x) Bessel işlevini döndürür",
		"ad": "işlevin hesaplanacağı değer!işlevin derecesi"
	},
	"BIN2DEC": {
		"a": "(sayı)",
		"d": "İkilik düzendeki bir sayıyı onluk düzene dönüştürür",
		"ad": "dönüştürmek istediğiniz ikilik düzendeki sayı"
	},
	"BIN2HEX": {
		"a": "(sayı; [basamak])",
		"d": "İkilik düzendeki bir sayıyı onaltılık düzene dönüştürür",
		"ad": "dönüştürmek istediğiniz ikilik düzendeki sayı!kullanılacak karakter sayısı"
	},
	"BIN2OCT": {
		"a": "(sayı; [basamak])",
		"d": "İkilik düzendeki bir sayıyı sekizlik düzene dönüştürür",
		"ad": "dönüştürmek istediğiniz ikilik düzendeki sayı!kullanılacak karakter sayısı"
	},
	"BITAND": {
		"a": "(sayı1; sayı2)",
		"d": "İki sayının bit tabanlı bir 'Ve' değerini verir",
		"ad": "hesaplamak istediğiniz ikili sayının ondalık gösterimi!hesaplamak istediğiniz ikili sayının ondalık gösterimi"
	},
	"BITLSHIFT": {
		"a": "(sayı; kaydırma_miktarı)",
		"d": "kaydırma_miktarı kadar bit sola kaydırılan bir sayıyı verir",
		"ad": "hesaplamak istediğiniz ikilik düzendeki bir sayının ondalık gösterimidir!Sayıyı sola kaydırmak istediğiniz bitlerin sayısı"
	},
	"BITOR": {
		"a": "(sayı1; sayı2)",
		"d": "İki sayının bit tabanlı bir 'Veya' değerini verir",
		"ad": "hesaplamak istediğiniz ikili sayının ondalık gösterimi!hesaplamak istediğiniz ikili sayının ondalık gösterimi"
	},
	"BITRSHIFT": {
		"a": "(sayı; kaydırma_miktarı)",
		"d": "kaydırma_miktarı kadar bit sağa kaydırılan bir sayıyı verir",
		"ad": "hesaplamak istediğiniz ikilik düzendeki bir sayının ondalık gösterimidir!Sayıyı sağa kaydırmak istediğiniz bitlerin sayısı"
	},
	"BITXOR": {
		"a": "(sayı1; sayı2)",
		"d": "İki sayının bit tabanlı bir 'Özel Veya' değerini verir",
		"ad": "hesaplamak istediğiniz ikili sayının ondalık gösterimi!hesaplamak istediğiniz ikili sayının ondalık gösterimi"
	},
	"COMPLEX": {
		"a": "(gerçel_sayı; karm_sayı; [sonek])",
		"d": "Gerçel ve sanal katsayıları bir karmaşık sayıya dönüştürür",
		"ad": "karmaşık sayının gerçel katsayısı!karmaşık sayının sanal katsayısı!karmaşık sayının sanal kısmı için sonek"
	},
	"CONVERT": {
		"a": "(sayı; ilk_birim; son_birim)",
		"d": "Sayıyı bir ölçü biriminden bir diğerine dönüştürür",
		"ad": "dönüşecek birimdeki değer!sayı için birim!sonuç için birim"
	},
	"DEC2BIN": {
		"a": "(sayı; [basamak])",
		"d": "Onluk düzendeki bir sayıyı ikilik düzene dönüştürür",
		"ad": "dönüştürmek istediğiniz onlu tamsayı!kullanılacak karakter sayısı"
	},
	"DEC2HEX": {
		"a": "(sayı; [basamak])",
		"d": "Onluk düzendeki bir sayıyı onaltılık düzene dönüştürür",
		"ad": "dönüştürmek istediğiniz onlu tamsayı!kullanılacak karakter sayısı"
	},
	"DEC2OCT": {
		"a": "(sayı; [basamak])",
		"d": "Onluk düzendeki bir sayıyı sekizlik düzene dönüştürür",
		"ad": "dönüştürmek istediğiniz onlu tamsayı!kullanılacak karakter sayısı"
	},
	"DELTA": {
		"a": "(sayı1; [sayı2])",
		"d": "İki sayının eşitliğini sınar",
		"ad": "ilk sayı!ikinci sayı"
	},
	"ERF": {
		"a": "(alt_limit; [üst_limit])",
		"d": "Hata işlevini döndürür",
		"ad": "ERF için alt sınır!ERF için üst sınır"
	},
	"ERF.PRECISE": {
		"a": "(X)",
		"d": "Hata işlevini döndürür",
		"ad": "HATAİŞLEV.DUYARLI işlevini tümleştirmek için alt sınırdır"
	},
	"ERFC": {
		"a": "(x)",
		"d": "Tümleyici hata işlevini döndürür",
		"ad": "ERF için alt sınır"
	},
	"ERFC.PRECISE": {
		"a": "(X)",
		"d": "Tamamlayıcı hata işlevini döndürür",
		"ad": "TÜMHATAİŞLEV.DUYARLI işlevini tümleştirmek için alt sınırdır"
	},
	"GESTEP": {
		"a": "(sayı; [sınır_değer])",
		"d": "Bir sayının sınır bir değerden büyük olup olmadığını sınar.",
		"ad": "sınanacak sayı!sınır değer"
	},
	"HEX2BIN": {
		"a": "(sayı; [basamak])",
		"d": "Onaltılık düzendeki bir sayıyı ikilik düzene dönüştürür",
		"ad": "dönüştürmek istediğiniz onaltılık düzendeki sayı!kullanılacak karakter sayısı"
	},
	"HEX2DEC": {
		"a": "(sayı)",
		"d": "Onaltılık düzendeki bir sayıyı onluk düzene çevirir",
		"ad": "dönüştürmek istediğiniz onaltılık düzendeki sayı"
	},
	"HEX2OCT": {
		"a": "(sayı; [basamak])",
		"d": "Onaltılık düzendeki bir sayıyı sekizlik düzene dönüştürür",
		"ad": "dönüştürmek istediğiniz onaltılık düzendeki sayı!kullanılacak karakter sayısı"
	},
	"IMABS": {
		"a": "(karmsayı)",
		"d": "Bir karmaşık sayının mutlak değerini (modulus) döndürür",
		"ad": "mutlak değeri istenen karmaşık sayı"
	},
	"IMAGINARY": {
		"a": "(karmsayı)",
		"d": "Bir karmaşık sayının sanal katsayısını döndürür",
		"ad": "sanal katsayısı istenen karmaşık sayı"
	},
	"IMARGUMENT": {
		"a": "(karmsayı)",
		"d": "Bir karmaşık sayının radyan cinsinden bağımsız değişkenini (q) döndürür",
		"ad": "argümanı istenen karmaşık sayı"
	},
	"IMCONJUGATE": {
		"a": "(karmsayı)",
		"d": "Bir karmaşık sayının eşleneğini döndürür",
		"ad": "eşleneği istenen karmaşık sayı"
	},
	"IMCOS": {
		"a": "(karmsayı)",
		"d": "Bir karmaşık sayının kosinüs değerini döndürür",
		"ad": "kosinüsü istenen karmaşık sayı"
	},
	"IMCOSH": {
		"a": "(karmsayı)",
		"d": "Bir karmaşık sayının hiperbolik kosinüs değerini verir",
		"ad": "hiperbolik kosinüsü istenen karmaşık sayı"
	},
	"IMCOT": {
		"a": "(karmsayı)",
		"d": "Bir karmaşık sayının kotanjant değerini verir",
		"ad": "kotanjantı istenen karmaşık sayı"
	},
	"IMCSC": {
		"a": "(karmsayı)",
		"d": "Bir karmaşık sayının kosekant değerini verir",
		"ad": "kosekantı istenen karmaşık sayı"
	},
	"IMCSCH": {
		"a": "(karmsayı)",
		"d": "Bir karmaşık sayının hiperbolik kosekant değerini verir",
		"ad": "hiperbolik kosekantı istenen karmaşık sayı"
	},
	"IMDIV": {
		"a": "(karmsayı1; karmsayı2)",
		"d": "İki karmaşık sayının bölümünü döndürür",
		"ad": "karmaşık pay veya bölünen!karmaşık payda veya bölen"
	},
	"IMEXP": {
		"a": "(karmsayı)",
		"d": "Bir karmaşık sayının üssel değerini döndürür",
		"ad": "üssel değeri bulunacak karmaşık sayı"
	},
	"IMLN": {
		"a": "(karmsayı)",
		"d": "Bir karmaşık sayının doğal logaritmasını döndürür",
		"ad": "doğal logaritması alınacak karmaşık sayı"
	},
	"IMLOG10": {
		"a": "(karmsayı)",
		"d": "Bir karmaşık sayının 10 tabanında logaritmasını döndürür",
		"ad": "ortak logaritması alınacak karmaşık sayı"
	},
	"IMLOG2": {
		"a": "(karmsayı)",
		"d": "Bir karmaşık sayının 2 tabanında logaritmasını döndürür",
		"ad": "2 tabanında logaritması alınacak karmaşık sayı"
	},
	"IMPOWER": {
		"a": "(karmsayı; sayı)",
		"d": "Bir karmaşık sayının tamsayı bir kuvvetini döndürür",
		"ad": "kuvveti alınacak karmaşık sayı!karmaşık sayının yükseltileceği kuvvet"
	},
	"IMPRODUCT": {
		"a": "(isayı1; [isayı2]; ...)",
		"d": "En az 1 en çok 255 karmaşık sayının çarpımını döndürür",
		"ad": "Isayı1, Isayı2,... çarpımı yapılacak en az 1 en çok 255 sayıdır."
	},
	"IMREAL": {
		"a": "(karmsayı)",
		"d": "Bir karmaşık sayının gerçel katsayısını döndürür",
		"ad": "gerçel katsayısı istenen karmaşık sayı"
	},
	"IMSEC": {
		"a": "(karmsayı)",
		"d": "Bir karmaşık sayının sekant değerini verir",
		"ad": "sekantı istenen karmaşık sayı"
	},
	"IMSECH": {
		"a": "(karmsayı)",
		"d": "Bir karmaşık sayının hiperbolik sekant değerini verir",
		"ad": "hiperbolik sekantı istenen karmaşık sayı"
	},
	"IMSIN": {
		"a": "(karmsayı)",
		"d": "Bir karmaşık sayının sinüs değerini döndürür",
		"ad": "sinüsü istenen karmaşık sayı"
	},
	"IMSINH": {
		"a": "(karmsayı)",
		"d": "Bir karmaşık sayının hiperbolik sinüs değerini verir",
		"ad": "hiperbolik sinüsü istenen karmaşık sayı"
	},
	"IMSQRT": {
		"a": "(karmsayı)",
		"d": "Bir karmaşık sayının karekökünü döndürür",
		"ad": "karekökü istenen karmaşık sayı"
	},
	"IMSUB": {
		"a": "(karmsayı1; karmsayı2)",
		"d": "İki karmaşık sayının farkını döndürür",
		"ad": "karmsayı2 değerinin çıkarılacağı karmaşık sayı!karmsayı1 değerinden çıkarılacak karmaşık sayı"
	},
	"IMSUM": {
		"a": "(isayı1; [isayı2]; ...)",
		"d": "Karmaşık sayıların toplamını döndürür",
		"ad": "eklenecek en az 1 en çok 255 karmaşık sayı"
	},
	"IMTAN": {
		"a": "(karmsayı)",
		"d": "Bir karmaşık sayının tanjant değerini verir",
		"ad": "tanjantı istenen karmaşık sayı"
	},
	"OCT2BIN": {
		"a": "(sayı; [basamak])",
		"d": "Sekizlik düzendeki bir sayıyı ikilik düzene dönüştürür",
		"ad": "dönüştürmek istediğiniz sekizlik düzendeki sayı!kullanılacak karakter sayısı"
	},
	"OCT2DEC": {
		"a": "(sayı)",
		"d": "Sekizlik düzendeki bir sayıyı onluk düzene dönüştürür",
		"ad": "dönüştürmek istediğiniz sekizlik düzendeki sayı"
	},
	"OCT2HEX": {
		"a": "(sayı; [basamak])",
		"d": "Sekizlik düzendeki bir sayıyı onaltılık düzene dönüştürür",
		"ad": "dönüştürmek istediğiniz sekizlik düzendeki sayı!kullanılacak karakter sayısı"
	},
	"DAVERAGE": {
		"a": "(veritabanı; alan; ölçüt)",
		"d": "Bir liste ya da veritabanındaki bir sütunda yer alan ve belirttiğiniz koşullara uyan değerlerin ortalamasını verir",
		"ad": "veritabanını ya da listeyi oluşturan hücreler aralığı. Veritabanı ilgili verilerin listesidir!çift tırnak işareti içindeki sütun etiketi, ya da sütunun listedeki konumunu gösteren sayı!belirttiğiniz koşulları içeren hücreler aralığı. Aralık, sütun etiketi ile etiketin altında bulunan ve koşulu taşıyan bir hücreyi içerir"
	},
	"DCOUNT": {
		"a": "(veritabanı; alan; ölçüt)",
		"d": "Veritabanındaki kayıt alanında (sütun) bulunan sayıları içeren ve belirttiğiniz koşullara uyan hücreleri sayar",
		"ad": "veritabanını ya da listeyi oluşturan hücre aralığı. Veritabanı ilgili verilerin listesidir!çift tırnak işareti içindeki sütun etiketi veya sütunun listedeki konumunu gösteren sayı!belirttiğiniz koşulları içeren hücre aralığı. Aralık, sütun etiketi ile etiketin altında bulunan ve koşulu taşıyan bir hücreyi içerir"
	},
	"DCOUNTA": {
		"a": "(veritabanı; alan; ölçüt)",
		"d": "Veritabanındaki kayıt alanında (sütun) bulunan ve belirttiğiniz koşullara uyan boş olmayan hücreleri sayar",
		"ad": "veritabanını ya da listeyi oluşturan hücreler aralığı. Veritabanı ilgili verilerin listesidir!çift tırnak işareti içindeki sütun etiketi, ya da sütunun listedeki konumunu gösteren sayı!belirttiğiniz koşulları içeren hücreler aralığı. Aralık, sütun etiketi ile etiketin altında bulunan ve koşulu taşıyan bir hücreyi içerir"
	},
	"DGET": {
		"a": "(veritabanı; alan; ölçüt)",
		"d": "Belirttiğiniz koşullara uyan tek bir kaydı veritabanından çıkarır",
		"ad": "veritabanını ya da listeyi oluşturan hücreler aralığı. Veritabanı ilgili verilerin listesidir!çift tırnak işareti içindeki sütun etiketi, ya da sütunun listedeki konumunu gösteren sayı!belirttiğiniz koşulları içeren hücreler aralığı. Aralık, sütun etiketi ile etiketin altında bulunan ve koşulu taşıyan bir hücreyi içerir"
	},
	"DMAX": {
		"a": "(veritabanı; alan; ölçüt)",
		"d": "Veritabanındaki kayıt alanında (sütun) bulunan ve belirttiğiniz koşullara uyan en büyük sayıyı verir.",
		"ad": "veritabanını ya da listeyi oluşturan hücreler aralığı. Veritabanı ilgili verilerin listesidir!çift tırnak işareti içindeki sütun etiketi, ya da sütunun listedeki konumunu gösteren sayı!belirttiğiniz koşulları içeren hücreler aralığı. Aralık, sütun etiketi ile etiketin altında bulunan ve koşulu taşıyan bir hücreyi içerir"
	},
	"DMIN": {
		"a": "(veritabanı; alan; ölçüt)",
		"d": "Veritabanındaki kayıt alanında (sütun) bulunan ve belirttiğiniz koşullara uyan en küçük sayıyı verir",
		"ad": "veritabanını ya da listeyi oluşturan hücreler aralığı. Veritabanı ilgili verilerin listesidir!çift tırnak işareti içindeki sütun etiketi, ya da sütunun listedeki konumunu gösteren sayı!belirttiğiniz koşulları içeren hücreler aralığı. Aralık, sütun etiketi ile etiketin altında bulunan ve koşulu taşıyan bir hücreyi içerir"
	},
	"DPRODUCT": {
		"a": "(veritabanı; alan; ölçüt)",
		"d": "Veritabanındaki kayıt alanında (sütun) bulunan ve belirttiğiniz koşullara uyan verileri çarpar",
		"ad": "veritabanını ya da listeyi oluşturan hücreler aralığı. Veritabanı ilgili verilerin listesidir!çift tırnak işareti içindeki sütun etiketi, ya da sütunun listedeki konumunu gösteren sayı!belirttiğiniz koşulları içeren hücreler aralığı. Aralık, sütun etiketi ile etiketin altında bulunan ve koşulu taşıyan bir hücreyi içerir"
	},
	"DSTDEV": {
		"a": "(veritabanı; alan; ölçüt)",
		"d": "Seçili veritabanı girdilerinden alınan bir örneğin standart sapmasını tahmin eder",
		"ad": "veritabanını ya da listeyi oluşturan hücreler aralığı. Veritabanı ilgili verilerin listesidir!çift tırnak işareti içindeki sütun etiketi, ya da sütunun listedeki konumunu gösteren sayı!belirttiğiniz koşulları içeren hücreler aralığı. Aralık, sütun etiketi ile etiketin altında bulunan ve koşulu taşıyan bir hücreyi içerir"
	},
	"DSTDEVP": {
		"a": "(veritabanı; alan; ölçüt)",
		"d": "Seçili veritabanı girdilerinden oluşan tüm popülasyonun standart sapmasını hesaplar",
		"ad": "veritabanını ya da listeyi oluşturan hücreler aralığı. Veritabanı ilgili verilerin listesidir!çift tırnak işareti içindeki sütun etiketi, ya da sütunun listedeki konumunu gösteren sayı!belirttiğiniz koşulları içeren hücreler aralığı. Aralık, sütun etiketi ile etiketin altında bulunan ve koşulu taşıyan bir hücreyi içerir"
	},
	"DSUM": {
		"a": "(veritabanı; alan; ölçüt)",
		"d": "Veritabanındaki kayıt alanında (sütun) bulunan ve belirttiğiniz koşullara uyan sayıları toplar",
		"ad": "veritabanını ya da listeyi oluşturan hücreler aralığı. Veritabanı ilgili verilerin listesidir!çift tırnak işareti içindeki sütun etiketi, ya da sütunun listedeki konumunu gösteren sayı!belirttiğiniz koşulları içeren hücreler aralığı. Aralık, sütun etiketi ile etiketin altında bulunan ve koşulu taşıyan bir hücreyi içerir"
	},
	"DVAR": {
		"a": "(veritabanı; alan; ölçüt)",
		"d": "Seçili veritabanı girdilerinden alınan örneğin varyansını tahmin eder",
		"ad": "veritabanını ya da listeyi oluşturan hücreler aralığı. Veritabanı ilgili verilerin listesidir!çift tırnak işareti içindeki sütun etiketi, ya da sütunun listedeki konumunu gösteren sayı!belirttiğiniz koşulları içeren hücreler aralığı. Aralık, sütun etiketi ile etiketin altında bulunan ve koşulu taşıyan bir hücreyi içerir"
	},
	"DVARP": {
		"a": "(veritabanı; alan; ölçüt)",
		"d": "Seçili veritabanı popülasyonunun varyansını hesaplar",
		"ad": "veritabanını ya da listeyi oluşturan hücreler aralığı. Veritabanı ilgili verilerin listesidir!çift tırnak işareti içindeki sütun etiketi, ya da sütunun listedeki konumunu gösteren sayı!belirttiğiniz koşulları içeren hücreler aralığı. Aralık, sütun etiketi ile etiketin altında bulunan ve koşulu taşıyan bir hücreyi içerir"
	},
	"CHAR": {
		"a": "(sayı)",
		"d": "Bilgisayarınızın karakter kümesindeki kod numarasıyla belirtilen karakteri verir",
		"ad": "1-255 arasında kullanacağınız karakteri belirten sayı"
	},
	"CLEAN": {
		"a": "(metin)",
		"d": "Metinden yazdırılamayan karakterleri kaldırır",
		"ad": "yazılamayan karakterleri kaldırmak istediğiniz çalışma sayfası bilgisi"
	},
	"CODE": {
		"a": "(metin)",
		"d": "Bilgisayarınızın kullandığı karakter kümesinden, metin dizesindeki ilk karakter için sayısal bir kod verir",
		"ad": "ilk karakterinin kodunu istediğiniz metin"
	},
	"CONCATENATE": {
		"a": "(metin1; [metin2]; ...)",
		"d": "Birden fazla metin dizesini bir metin dizesi halinde birleştirir",
		"ad": "bir tek metin dizesinde birleştirilecek olan 1-255 arasındaki metin dizeleridir ve metin dizesi, sayı ya da tek hücre başvurusu olabilir"
	},
	"CONCAT": {
		"a": "(metint1; ...)",
		"d": "Metin dizelerinden oluşan listeyi veya aralığı birleştirir",
		"ad": "tek bir dizede birleştirilecek 1 ile 254 arasındaki metin dizesi veya aralık"
	},
	"DOLLAR": {
		"a": "(sayı; [onluklar])",
		"d": "Bir sayıyı para biçimi kullanarak metne dönüştürür",
		"ad": "bir sayı, bir sayı içeren hücreye başvuru ya da hesaplama sonucu bir sayı olan formül!virgülden sonra sağda ondalık hanesinde kullanılan rakam sayısı. Sayı gerektiği gibi yuvarlanır; atlanırsa, Rakamlar = 2"
	},
	"EXACT": {
		"a": "(metin1; metin2)",
		"d": "İki metin dizesini karşılaştırır ve tamamen aynıysalar DOĞRU, başka durumlarda YANLIŞ verir (büyük küçük harf duyarlı)",
		"ad": "ilk metin karakter dizesi!ikinci metin karakter dizesi"
	},
	"FIND": {
		"a": "(bul_metin; metin_içinde; [başlangıç_sayısı])",
		"d": "Bir metin dizesini diğer bir metin dizesi içinde bulur ve bulunan dizenin başlama konumu numarasını verir (büyük küçük harfe duyarlı)",
		"ad": "bulmak istediğiniz metin. Metin_içindeki ilk karakteri eşleştirmek için çift tırnak (boş metin) kullanın; eşleştirme karakterleri kullanılamaz!bulmak istediğiniz metni içeren metin!aramanın başlayacağı karakteri belirtir. Metin_içindeki ilk karakterin numarası 1'dir. Atlanırsa Başl_num = 1"
	},
	"FINDB": {
		"a": "(bul_metin; metin_içinde; [başlangıç_sayısı])",
		"d": "Bir metin dizesi içinde bir metin dizesi bulur ve ikinci metin dizesinin ilk karakterinden ilk metin dizesinin başlangıç konumuna ait sayıyı verir, ise çift baytlık karakter kümesi (DBCS) kullanan dillerle kullanım için tasarlanmıştır - Japonca, Çince ve Korecedir",
		"ad": "bulmak istediğiniz metin. Metin_içindeki ilk karakteri eşleştirmek için çift tırnak (boş metin) kullanın; eşleştirme karakterleri kullanılamaz!bulmak istediğiniz metni içeren metin!aramanın başlayacağı karakteri belirtir. Metin_içindeki ilk karakterin numarası 1'dir. Atlanırsa Başl_num = 1"
	},
	"FIXED": {
		"a": "(sayı; [onluklar]; [virgül_yok])",
		"d": "Bir sayıyı belirtilen sayıda ondalıklara yuvarlar ve sonucu virgüllü ya da virgülsüz metin olarak verir",
		"ad": "yuvarlayıp metin türüne döndürmek istediğiniz sayı!ondalık virgülün sağında kullanılan rakam sayısı. Atlanırsa, Ondalıklar = 2!bir mantıksal değer: gelen metinde virgülleri görüntüleme = DOĞRU; gelen metinde virgülleri görüntüle = YANLIŞ ya da atlanmış"
	},
	"LEFT": {
		"a": "(metin; [sayı_karakterler])",
		"d": "Bir metin dizesinin ilk (en solundaki) belirtilen sayıdaki karakter ya da karakterlerini verir",
		"ad": "çıkartmak istediğiniz karakterleri içeren metin!SOLDAN fonksiyonunun çıkarmasını istediğiniz karakter sayısını belirtir; atlanırsa 1"
	},
	"LEFTB": {
		"a": "(metin; [sayı_karakterler])",
		"d": "Belirteceğiniz bayt sayısına göre bir metin dizesindeki ilk karakteri veya karakterleri verir, ise çift baytlık karakter kümesi (DBCS) kullanan dillerle kullanım için tasarlanmıştır - Japonca, Çince ve Korecedir",
		"ad": "çıkartmak istediğiniz karakterleri içeren metin!SOLDAN fonksiyonunun çıkarmasını istediğiniz karakter sayısını belirtir; atlanırsa 1"
	},
	"LEN": {
		"a": "(metin)",
		"d": "Bir karakter dizesi içerisindeki karakter sayısını verir",
		"ad": "karakter sayısını bulmak istediğiniz metin. Boşluklar karakter olarak sayılır"
	},
	"LENB": {
		"a": "(metin)",
		"d": "Bir metin dizesinde karakterleri temsil etmek üzere kullanılan bayt sayısını verir, ise çift baytlık karakter kümesi (DBCS) kullanan dillerle kullanım için tasarlanmıştır - Japonca, Çince ve Korecedir",
		"ad": "karakter sayısını bulmak istediğiniz metin. Boşluklar karakter olarak sayılır"
	},
	"LOWER": {
		"a": "(metin)",
		"d": "Metin dizesindeki tüm büyük harfleri küçük harfe çevirir",
		"ad": "küçük harfe dönüştürmek istediğiniz metin. Metindeki harf olmayan karakterler değiştirilmez"
	},
	"MID": {
		"a": "(metin; başlangıç_sayısı; sayı_karakterler)",
		"d": "Belirttiğiniz konumdan başlamak üzere metinden belirli sayıda karakter verir",
		"ad": "çıkartmak istediğiniz karakterlerin bulunduğu metin dizesi!çıkartmak istediğiniz ilk karakterin konumu. Metindeki ilk karakter 1'dir!Metinden kaç tane karakterin geleceğini belirtir"
	},
	"MIDB": {
		"a": "(metin; başlangıç_sayısı; sayı_karakterler)",
		"d": "Bir metin dizesinden, belirttiğiniz yerden başlayarak, belirttiğiniz bayt sayısına göre belirli sayıda karakteri verir, ise çift baytlık karakter kümesi (DBCS) kullanan dillerle kullanım için tasarlanmıştır - Japonca, Çince ve Korecedir",
		"ad": "çıkartmak istediğiniz karakterlerin bulunduğu metin dizesi!çıkartmak istediğiniz ilk karakterin konumu. Metindeki ilk karakter 1'dir!Metinden kaç tane karakterin geleceğini belirtir"
	},
	"NUMBERVALUE": {
		"a": "(metin; [ondalık_ayırıcı]; [grup_ayırıcı])",
		"d": "Metni yerel bağımsız durumdaki sayıya dönüştürür",
		"ad": "dönüştürmek istediğiniz sayıyı temsil eden dize! dizedeki ondalık ayırıcı olarak kullanılan karakter!dizedeki grup ayırıcı olarak kullanılan karakter"
	},
	"PROPER": {
		"a": "(metin)",
		"d": "Metin dizesindeki her sözcüğün ilk harfini büyük harfe, diğer tüm harfleri de küçük harfe dönüştürür",
		"ad": "tırnak işareti içinde bir metin, metin veren bir formül, ya da kısmen büyük harf yapacağınız metin içeren bir hücreye başvuru"
	},
	"REPLACE": {
		"a": "(eski_metin; başlangıç_sayısı; sayı_karakterler; yeni_metin)",
		"d": "Metin dizesinin bir kısmını başka bir metin dizesiyle değiştirir",
		"ad": "bazı karakterlerini değiştirmek istediğiniz metin!Yeni_metin ile değiştirmek istediğiniz Eski_metin'deki karakterin konumu!Eski_metin'de değiştirmek istediğiniz karakter sayısı!Eski_metin'deki karakterleri dönüştürecek olan metin"
	},
	"REPLACEB": {
		"a": "(eski_metin; başlangıç_sayısı; sayı_karakterler; yeni_metin)",
		"d": "Belirteceğiniz bayt sayısına göre, bir metin dizesinin bir kısmını farklı bir metin dizesi ile değiştirir, ise çift baytlık karakter kümesi (DBCS) kullanan dillerle kullanım için tasarlanmıştır - Japonca, Çince ve Korecedir",
		"ad": "bazı karakterlerini değiştirmek istediğiniz metin!Yeni_metin ile değiştirmek istediğiniz Eski_metin'deki karakterin konumu!Eski_metin'de değiştirmek istediğiniz karakter sayısı!Eski_metin'deki karakterleri dönüştürecek olan metin"
	},
	"REPT": {
		"a": "(metin; sayı_kere)",
		"d": "Bir metni verilen sayıda yineler. Hücreyi metin dizesindeki birçok örnekle doldurmak için YİNELE'yi kullanın",
		"ad": "yinelemek istediğiniz metin!metnin kaç kez yineleneceğini belirten sayı"
	},
	"RIGHT": {
		"a": "(metin; [sayı_karakterler])",
		"d": "Bir metin dizesinin son (en sağdaki) belirtilen sayıdaki karakter ya da karakterlerini verir",
		"ad": "çıkarmak istediğiniz karakterleri içeren metin dizesi!kaç tane karakter çıkarmak istediğinizi belirtir, atlanırsa 1"
	},
	"RIGHTB": {
		"a": "(metin; [sayı_karakterler])",
		"d": "Belirteceğiniz bayt sayısına göre, bir metin dizesindeki son karakteri veya karakterleri verir, ise çift baytlık karakter kümesi (DBCS) kullanan dillerle kullanım için tasarlanmıştır - Japonca, Çince ve Korecedir",
		"ad": "çıkarmak istediğiniz karakterleri içeren metin dizesi!kaç tane karakter çıkarmak istediğinizi belirtir, atlanırsa 1"
	},
	"SEARCH": {
		"a": "(bul_metin; metin; [başlangıç_sayısı])",
		"d": "Özel bir karakter ya da metin dizesinin ilk geçtiği yerin karakter numarasını verir, soldan sağa okuma sırasında (büyük küçük harfe duyarlı değil)",
		"ad": "bulmak istediğiniz metin. ? ve * eşleştirme karakterlerini kullanabilirsiniz; ? ve * karakterlerini bulmak için ~? ve ~* kullanın!Bul_metin'de kullanılan metin!aramanın başlayacağı Metin_içinde bulunan karakter sayısı (soldan sayıldığında). Atlanırsa, 1 kullanılır"
	},
	"SEARCHB": {
		"a": "(bul_metin; metin; [başlangıç_sayısı])",
		"d": "Bir metin dizesi içinde bir metin dizesi bulur ve ikinci metin dizesinin ilk karakterinden ilk metin dizesinin başlangıç konumuna ait sayıyı verir, ise çift baytlık karakter kümesi (DBCS) kullanan dillerle kullanım için tasarlanmıştır - Japonca, Çince ve Korecedir",
		"ad": "bulmak istediğiniz metin. ? ve * eşleştirme karakterlerini kullanabilirsiniz; ? ve * karakterlerini bulmak için ~? ve ~* kullanın!Bul_metin'de kullanılan metin!aramanın başlayacağı Metin_içinde bulunan karakter sayısı (soldan sayıldığında). Atlanırsa, 1 kullanılır"
	},
	"SUBSTITUTE": {
		"a": "(metin; eski_metin; yeni_metin; [yineleme_sayısı])",
		"d": "Metin dizesindeki eski bir metni yenisiyle değiştirir",
		"ad": "karakterlerini değiştirmek istediğiniz metni içeren hücre başvurusu veya metin!değiştirmek istediğiniz metin. Eski_metin'in büyük ve küçük harfleriyle eşleşmezse YERİNEKOY metni değiştirmez!Eski_metin ile değiştirmek istediğiniz metin!hangi Eski_metin örneğini değiştirmek istediğinizi belirtir. Atlanırsa, Eski_metin'in her örneği değiştirilir"
	},
	"T": {
		"a": "(değer)",
		"d": "Değer'in başvurduğu metni verir",
		"ad": "sınanmak istenen değer: Değer bir metin ya da metin başvurusu ise T Değer verir; Değer metin değilse T çift tırnak (boş metin) verir"
	},
	"TEXT": {
		"a": "(değer; biçim_metni)",
		"d": "Bir değeri belirli bir sayı biçimindeki metne dönüştürür",
		"ad": "bir sayı, sayısal değer veren bir formül veya sayısal değer içeren bir hücre başvurusu!Hücreleri Biçimlendir iletişim kutusunda bulunan Sayı sekmesindeki Kategori kutusundan alınan metin biçimindeki sayı biçimi"
	},
	"TEXTJOIN": {
		"a": "(sınırlayıcı; boşları_yoksay; metin1; ...)",
		"d": "Sınırlayıcı kullanarak metin dizelerinden oluşan bir listeyi veya aralığı birleştirir",
		"ad": "Her metin öğesinin arasına eklenecek karakter veya dize!DOĞRU(varsayılan) ise, boş hücreleri yoksayar!birleştirilecek 1 ile 252 arasındaki metin dizesi veya aralık"
	},
	"TRIM": {
		"a": "(metin)",
		"d": "Bir metin dizesinden sözcükler arasındaki tek boşluklar dışındaki tüm boşlukları kaldırır",
		"ad": "boşluklarını kaldırmak istediğiniz metin"
	},
	"UNICHAR": {
		"a": "(sayı)",
		"d": "Verilen sayısal değer tarafından başvurulan Unicode karakterini verir",
		"ad": "bir karakteri temsil eden Unicode sayısı"
	},
	"UNICODE": {
		"a": "(metin)",
		"d": "Metnin ilk karakterine karşılık gelen sayıyı (kod noktası) döndürür",
		"ad": "Unicode değerini bulmak istediğiniz karakter"
	},
	"UPPER": {
		"a": "(metin)",
		"d": "Bir metni büyük harfe dönüştürür",
		"ad": "büyük harfe dönüştürmek istediğiniz metin, bir başvuru ya da bir metin dizesi"
	},
	"VALUE": {
		"a": "(metin)",
		"d": "Bir sayıyı gösteren bir metin dizesini bir sayıya dönüştürür",
		"ad": "dönüştürmek istediğiniz metni içeren hücre başvurusu veya tırnak işaretiyle kapalı metin"
	},
	"AVEDEV": {
		"a": "(sayı1; [sayı2]; ...)",
		"d": "Veri noktalarının mutlak sapmalarının aritmetik ortalamasını bu noktaların ortalaması aracılığıyla verir. Bağımsız değişkenler sayı, ad, dizi veya sayı içeren başvurular olabilir",
		"ad": "Mutlak sapmalarının ortalamasını elde etmek istediğiniz en az 1 en fazla 255 bağımsız değişkendir"
	},
	"AVERAGE": {
		"a": "(sayı1; [sayı2]; ...)",
		"d": "Bağımsız değişkenlerin (aritmetik) ortalamasını verir, bunlar sayı ya da sayılar içeren ad, dizi veya başvurular olabilir",
		"ad": "ortalamasını bulmak istediğiniz en az 1 en fazla 255 bağımsız sayısal değişkendir"
	},
	"AVERAGEA": {
		"a": "(değer1; [değer2]; ...)",
		"d": "Bağımsız değişkenlerinin aritmetik ortalamasını verir, metni ve bağımsız değişkenlerdeki YANLIŞ değerini 0; DOĞRU değerini 1 olarak hesaplar. Bağımsız değişkenler sayı, ad, dizi ya da başvuru olabilir",
		"ad": "Aritmetik ortalamasını bulmak istediğiniz en az 1 en fazla 255 bağımsız değişkendir"
	},
	"AVERAGEIF": {
		"a": "(aralık; ölçüt; [aralık_ortalaması])",
		"d": "Verili bir koşul veya ölçüt tarafından belirtilen hücrelerin ortalamasını (aritmetik ortalama) bulur",
		"ad": "hesaplanmasını istediğiniz hücre aralığı!ortalamayı bulmak için kullanılacak hücreleri tanımlayan, sayı, ifade veya metin biçimindeki koşul veya ölçüt!ortalamayı bulmak için kullanılacak asıl hücreler. Yoksayılırsa, aralıktaki hücreler kullanılır"
	},
	"AVERAGEIFS": {
		"a": "(aralık_ortalaması; ölçüt_aralığı; ölçüt; ...)",
		"d": "Verili bir koşul veya ölçüt kümesi tarafından belirtilen hücrelerin ortalamasını (aritmetik ortalama) bulur",
		"ad": "ortalamayı bulmak için kullanılacak asıl hücreler.!belirli bir koşula göre hesaplanmasını istediğiniz hücre aralığı!ortalamayı bulmak için kullanılacak hücreleri tanımlayan, sayı, ifade veya metin biçimindeki koşul veya ölçüt"
	},
	"BETADIST": {
		"a": "(x; alfa; beta; [A]; [B])",
		"d": "Kümülatif beta olasılık yoğunluk işlevini verir",
		"ad": "işlevin değerini hesaplarken kullanılan A ile B arasındaki değer!dağılım parametresi, 0'dan büyük olmalıdır!dağılım parametresi, 0'dan büyük olmalıdır!x aralığı için isteğe bağlı alt sınır. Atlanırsa, A = 0!x aralığı için isteğe bağlı üst sınır. Atlanırsa, B = 1"
	},
	"BETAINV": {
		"a": "(olasılık; alfa; beta; [A]; [B])",
		"d": "Kümülatif beta olasılık yoğunluk işlevinin (BETADAĞ) tersini verir",
		"ad": "beta dağılımıyla ilgili olasılık!dağılım parametresi, 0'dan büyük olmalıdır!dağılım parametresi, 0'dan büyük olmalıdır!x aralığı için isteğe bağlı alt sınır. Atlanırsa, A = 0!x aralığı için isteğe bağlı üst sınır. Atlanırsa, B = 1"
	},
	"BETA.DIST": {
		"a": "(x; alfa; beta; kümülatif; [A]; [B])",
		"d": "Beta olasılık dağılımı işlevini verir",
		"ad": "işlevin değerini hesaplarken kullanılan A ile B arasındaki değer!dağılım parametresi, 0'dan büyük olmalıdır!dağılım parametresi, 0'dan büyük olmalıdır!mantıksal değer: kümülatif dağılım işlevi için DOĞRU'yu; olasılık yoğunluk işlevi için YANLIŞ'ı kullanın!x aralığı için isteğe bağlı alt sınır. Atlanırsa, A = 0!x aralığı için isteğe bağlı üst sınır. Atlanırsa, B = 1"
	},
	"BETA.INV": {
		"a": "(olasılık; alfa; beta; [A]; [B])",
		"d": "Kümülatif beta olasılık yoğunluk işlevinin (BETA.DAĞ) tersini verir",
		"ad": "beta dağılımıyla ilgili olasılık!dağılım parametresi, 0'dan büyük olmalıdır!dağılım parametresi, 0'dan büyük olmalıdır!x aralığı için isteğe bağlı alt sınır. Atlanırsa, A = 0!x aralığı için isteğe bağlı üst sınır. Atlanırsa, B = 1"
	},
	"BINOMDIST": {
		"a": "(başarı_sayısı; denemeler; başarı_olasılığı; kümülatif)",
		"d": "Tek terimli binom dağılımı olasılığını verir",
		"ad": "denemelerdeki başarı sayısı!bağımsız denemeler sayısı!her denemedeki başarı olasılığı!mantıksal değer: kümülatif dağılım fonksiyonu için DOĞRU'yu; olasılık kütle fonksiyonu için YANLIŞ'ı kullanın"
	},
	"BINOM.DIST": {
		"a": "(başarı_sayısı; denemeler; başarı_olasılığı; kümülatif)",
		"d": "Tek terimli binom dağılımı olasılığını verir",
		"ad": "denemelerdeki başarı sayısı!bağımsız denemeler sayısı!her denemedeki başarı olasılığı!mantıksal değer: kümülatif dağılım fonksiyonu için DOĞRU'yu; olasılık kütle fonksiyonu için YANLIŞ'ı kullanın"
	},
	"BINOM.DIST.RANGE": {
		"a": "(denemeler; başarı_olasılığı; başarı_sayısı; [başarı_sayısı2])",
		"d": "Binom dağılımını kullanarak bir deneme sonucunun başarı olasılığını döndürür",
		"ad": "bağımsız denemelerin sayısı!her bir denemedeki başarı olasılığı!denemelerdeki başarı sayısı!varsa, bu fonksiyon başarılı denemelerin başarı_sayısı ve başarı_sayısı2 arasında yer alma olasılığını döndürür"
	},
	"BINOM.INV": {
		"a": "(denemeler; başarı_olasılığı; alfa)",
		"d": "Kümülatif binom dağılımının ölçüt değerinden küçük veya ona eşit olduğu en küçük değeri verir",
		"ad": "Bernoulli denemeler sayısı!her denemedeki başarı olasılığı, 0 ile 1 arasında (bunlar dahil) bir sayı!ölçüt değeri, 0 ile 1 arasında (bunlar dahil) bir sayı"
	},
	"CHIDIST": {
		"a": "(x; serb_derecesi)",
		"d": "Kikare dağılımının sağ kuyruklu olasılığını verir",
		"ad": "dağılımı hesaplamak istediğiniz değer, negatif olmayan bir sayı!serbestlik derecesi sayısı; 1 ile 10^10 arasında (10^10 hariç) bir sayı"
	},
	"CHIINV": {
		"a": "(olasılık; serb_derecesi)",
		"d": "Kikare dağılımının sağ kuyruklu olasılığının tersini verir",
		"ad": "kikare dağılımı ile ilgili olasılık; 0 ile 1 arasında (bunlar dahil) bir değer!serbestlik derecesi sayısı; 1 ile 10^10 arasında (10^10 hariç) bir sayı"
	},
	"CHITEST": {
		"a": "(etkin_erim; beklenen_erim)",
		"d": "Bağımsızlık sınaması sonucunu verir: istatistik için kikare dağılımından alınan değer ve uygun serbestlik derecesi",
		"ad": "beklenen değerler karşısında sınanacak gözlemleri içeren veri aralığı!satır toplamları ile sütun toplamları çarpımının büyük toplama oranını içeren veri aralığı"
	},
	"CHISQ.DIST": {
		"a": "(x; serb_derecesi; kümülatif)",
		"d": "Kikare dağılımının sol kuyruklu olasılığını verir",
		"ad": "dağılımı hesaplamak istediğiniz değer, negatif olmayan bir sayı!serbestlik derecesi sayısı; 1 ile 10^10 arasında (10^10 hariç) bir sayı!işlevin vereceği mantıksal değer: kümülatif dağılım fonksiyonu = DOĞRU; olasılık yoğunluğu fonksiyonu = YANLIŞ"
	},
	"CHISQ.DIST.RT": {
		"a": "(x; serb_derecesi)",
		"d": "Kikare dağılımının sağ kuyruklu olasılığını verir",
		"ad": "dağılımı hesaplamak istediğiniz değer, negatif olmayan bir sayı!serbestlik derecesi sayısı; 1 ile 10^10 arasında (10^10 hariç) bir sayı"
	},
	"CHISQ.INV": {
		"a": "(olasılık; serb_derecesi)",
		"d": "Kikare dağılımının sol kuyruklu olasılığının tersini verir",
		"ad": "kikare dağılımı ile ilişkili olasılık; 0 ile 1 arasında (bunlar dahil) bir değer!serbestlik derecesi sayısı; 1 ile 10^10 arasında (10^10 hariç) bir sayı"
	},
	"CHISQ.INV.RT": {
		"a": "(olasılık; serb_derecesi)",
		"d": "Kikare dağılımının sağ kuyruklu olasılığının tersini verir",
		"ad": "kikare dağılımı ile ilgili olasılık; 0 ile 1 arasında (bunlar dahil) bir değer!serbestlik derecesi sayısı; 1 ile 10^10 arasında (10^10 hariç) bir sayı"
	},
	"CHISQ.TEST": {
		"a": "(etkin_erim; beklenen_erim)",
		"d": "Bağımsızlık sınaması sonucunu verir: istatistik için kikare dağılımından alınan değer ve uygun serbestlik derecesi",
		"ad": "beklenen değerler karşısında sınanacak gözlemleri içeren veri aralığı!satır toplamları ile sütun toplamları çarpımının büyük toplama oranını içeren veri aralığı"
	},
	"CONFIDENCE": {
		"a": "(alfa; standart_sapma; boyut)",
		"d": "Popülasyon ortalaması için normal bir dağılım kullanarak güvenilirlik aralığını verir",
		"ad": "güvenirlik düzeyini hesaplamak için kullanılan anlamlılık düzeyi; 0'dan büyük 1'den küçük bir sayı!veri aralığının bilindiği varsayılan popülasyon standart sapması. Standart_sap 0'dan büyük olmalıdır!örnek boyutu"
	},
	"CONFIDENCE.NORM": {
		"a": "(alfa; standart_sapma; boyut)",
		"d": "Popülasyon ortalaması için normal bir dağılım kullanarak güvenilirlik aralığını verir",
		"ad": "güvenirlik düzeyini hesaplamak için kullanılan anlamlılık düzeyi; 0'dan büyük 1'den küçük bir sayı!veri aralığının bilindiği varsayılan popülasyon standart sapması. Standart_sap 0'dan büyük olmalıdır!örnek boyutu"
	},
	"CONFIDENCE.T": {
		"a": "(alfa; standart_sapma; boyut)",
		"d": "Popülasyon ortalaması için bir T-dağılımı kullanarak güvenilirlik aralığını verir",
		"ad": "güvenirlik düzeyini hesaplamak için kullanılan anlamlılık düzeyi; 0'dan büyük 1'den küçük bir sayı!veri aralığının bilindiği varsayılan popülasyon standart sapması. Standart_sap 0'dan büyük olmalıdır!örnek boyutu"
	},
	"CORREL": {
		"a": "(dizi1; dizi2)",
		"d": "İki veri kümesi arasındaki korelasyon katsayısını verir",
		"ad": "değer içeren hücre aralığı. Değerler sayı, ad, dizi ya da sayı içeren başvurular olmalıdır!ikinci bir değer içeren hücre aralığı. Değerler sayı, ad, dizi ya da sayı içeren başvurular olmalıdır"
	},
	"COUNT": {
		"a": "(değer1; [değer2]; ...)",
		"d": "Aralıktaki sayı içeren hücrelerin kaç tane olduğunu sayar",
		"ad": "en az 1 en fazla 255 bağımsız değişkendir, her biri farklı türdeki çeşitli verileri taşıyabilir ya da bunlara başvurabilir, fakat yalnızca sayılar dikkate alınır"
	},
	"COUNTA": {
		"a": "(değer1; [değer2]; ...)",
		"d": "Aralıktaki boş olmayan hücrelerin kaç tane olduğunu sayar",
		"ad": "Saymak istediğiniz değerleri ve hücreleri temsil eden en az 1 en fazla 255 bağımsız değişkendir. Değerler herhangi bir bilgi türünde olabilir"
	},
	"COUNTBLANK": {
		"a": "(aralık)",
		"d": "Belirtilen hücre aralığındaki boş hücreleri sayar",
		"ad": "boş hücrelerin sayısını öğrenmek istediğiniz aralık"
	},
	"COUNTIF": {
		"a": "(aralık; ölçüt)",
		"d": "Verilen koşula uyan aralık içindeki hücreleri sayar",
		"ad": "boş olmayan hücrelerin sayısını öğrenmek istediğiniz aralık!hangi hücrelerin sayılacağını tanımlayan sayı, ifade veya metin biçimindeki koşul"
	},
	"COUNTIFS": {
		"a": "(ölçüt_aralığı; ölçüt; ...)",
		"d": "Verili bir koşul veya ölçüt kümesi tarafından belirtilen hücreleri sayar",
		"ad": "belirli bir koşula göre hesaplanmasını istediğiniz hücre aralığı!sayılacak hücreleri tanımlayan, sayı, ifade veya metin biçimindeki koşul"
	},
	"COVAR": {
		"a": "(dizi1; dizi2)",
		"d": "Kovaryansı verir; iki veri kümesindeki her veri noktası çifti için sapmaların çarpımlarının ortalaması",
		"ad": "ilk tamsayılar hücre aralığıdır ve sayı, ad dizi, ya da sayı içeren başvuru olmalıdır!ikinci tamsayılar hücre aralığıdır ve sayı, ad dizi, ya da sayı içeren başvuru olmalıdır"
	},
	"COVARIANCE.P": {
		"a": "(dizi1; dizi2)",
		"d": "Popülasyon kovaryansını verir; iki veri kümesindeki her veri noktası çifti için sapmaların çarpımlarının ortalaması",
		"ad": "ilk tamsayılar hücre aralığıdır ve sayı, ad dizi, ya da sayı içeren başvuru olmalıdır!ikinci tamsayılar hücre aralığıdır ve sayı, ad dizi, ya da sayı içeren başvuru olmalıdır"
	},
	"COVARIANCE.S": {
		"a": "(dizi1; dizi2)",
		"d": "Örnek kovaryansı verir; iki veri kümesindeki her veri noktası çifti için sapmaların çarpımlarının ortalaması",
		"ad": "ilk tamsayılar hücre aralığıdır ve sayı, ad dizi, ya da sayı içeren başvuru olmalıdır!ikinci tamsayılar hücre aralığıdır ve sayı, ad dizi, ya da sayı içeren başvuru olmalıdır"
	},
	"CRITBINOM": {
		"a": "(denemeler; başarı_olasılığı; alfa)",
		"d": "Kümülatif binom dağılımının ölçüt değerinden küçük veya ona eşit olduğu en küçük değeri verir",
		"ad": "Bernoulli denemeler sayısı!her denemedeki başarı olasılığı, 0 ile 1 arasında (bunlar dahil) bir sayı!ölçüt değeri, 0 ile 1 arasında (bunlar dahil) bir sayı"
	},
	"DEVSQ": {
		"a": "(sayı1; [sayı2]; ...)",
		"d": "Veri noktalarının kendi örneklerinin ortalamasından sapmaların kareleri toplamını verir",
		"ad": "SAPKARE'sini hesaplamak istediğiniz En az 1 en fazla 255 bağımsız değişken, ya da bir dizi veya dizi başvurusudur"
	},
	"EXPONDIST": {
		"a": "(x; lambda; kümülatif)",
		"d": "Üstel dağılımı verir",
		"ad": "işlevin değeri, negatif olmayan bir sayı!parametre değeri, pozitif bir sayı!işlevin vereceği mantıksal değer: kümülatif dağılım fonksiyonu = DOĞRU; olasılık yoğunluğu fonksiyonu = YANLIŞ"
	},
	"EXPON.DIST": {
		"a": "(x; lambda; kümülatif)",
		"d": "Üstel dağılımı verir",
		"ad": "işlevin değeri, negatif olmayan bir sayı!parametre değeri, pozitif bir sayı!işlevin vereceği mantıksal değer: kümülatif dağılım işlevi = DOĞRU; olasılık yoğunluğu işlevi = YANLIŞ"
	},
	"FDIST": {
		"a": "(x; serb_derecesi1; serb_derecesi2)",
		"d": "İki veri kümesi için (sağ kuyruklu) F olasılık dağılımını (basıklık derecesi) verir",
		"ad": "işlevin hesaplanacağı değer, negatif olmayan bir sayı!serbestlik derecesi payında olan sayı, 1 ile 10^10 arasında (10^10 hariç) bir sayı!serbestlik derecesi paydası, 1 ile 10^10 arasında (10^10 hariç) bir sayı"
	},
	"FINV": {
		"a": "(olasılık; serb_derecesi1; serb_derecesi2)",
		"d": "(Sağ kuyruklu) F olasılık dağılımının tersini verir: p = FDAĞ(x,...) ise, FTERS(p,...) = x",
		"ad": "F kümülatif dağılımı ile ilgili olasılık; 0 ile 1 arasında (bunlar dahil) bir sayı!serbestlik derecesi payında olan sayı, 1 ile 10^10 arasında (10^10 hariç) bir sayı!serbestlik derecesi paydası, 1 ile 10^10 arasında (10^10 hariç) bir sayı"
	},
	"FTEST": {
		"a": "(dizi1; dizi2)",
		"d": "Bir F-test sonucu verir; Dizi1 ve Dizi2'nin varyanslarının çok farklı olmadığı iki kuyruklu olasılıktır",
		"ad": "ilk veri aralığı ya da dizisidir ve sayı, ad, dizi, ya da sayı içeren başvuru olabilir (boşluklar yoksayılır)!ikinci veri aralığı ya da dizisidir ve sayı, ad, dizi, ya da sayı içeren başvuru olabilir (boşluklar yoksayılır)"
	},
	"F.DIST": {
		"a": "(x; serb_derecesi1; serb_derecesi2; kümülatif)",
		"d": "İki veri kümesi için (sol kuyruklu) F olasılık dağılımını (basıklık derecesi) verir",
		"ad": "işlevin hesaplanacağı değer, negatif olmayan bir sayı!serbestlik derecesi payında olan sayı, 1 ile 10^10 arasında (10^10 hariç) bir sayı!serbestlik derecesi paydası, 1 ile 10^10 arasında (10^10 hariç) bir sayı!işlevin vereceği mantıksal değer: kümülatif dağılım fonksiyonu = DOĞRU; olasılık yoğunluğu fonksiyonu = YANLIŞ"
	},
	"F.DIST.RT": {
		"a": "(x; serb_derecesi1; serb_derecesi2)",
		"d": "İki veri kümesi için (sağ kuyruklu) F olasılık dağılımını (basıklık derecesi) verir",
		"ad": "işlevin hesaplanacağı değer, negatif olmayan bir sayı!serbestlik derecesi payında olan sayı, 1 ile 10^10 arasında (10^10 hariç) bir sayı!serbestlik derecesi paydası, 1 ile 10^10 arasında (10^10 hariç) bir sayı"
	},
	"F.INV": {
		"a": "(olasılık; serb_derecesi1; serb_derecesi2)",
		"d": "(Sol kuyruklu) F olasılık dağılımının tersini verir: p = F.DAĞ(x,...) ise, F.TERS(p,...) = x",
		"ad": "F kümülatif dağılımı ile ilgili olasılık; 0 ile 1 arasında (bunlar dahil) bir sayı!serbestlik derecesi payında olan sayı, 1 ile 10^10 arasında (10^10 hariç) bir sayı!serbestlik derecesi paydası, 1 ile 10^10 arasında (10^10 hariç) bir sayı"
	},
	"F.INV.RT": {
		"a": "(olasılık; serb_derecesi1; serb_derecesi2)",
		"d": "(Sağ kuyruklu) F olasılık dağılımının tersini verir: p = F.DAĞ.SAĞK(x,...) ise, F.TERS.SAĞK(p,...) = x",
		"ad": "F kümülatif dağılımı ile ilgili olasılık; 0 ile 1 arasında (bunlar dahil) bir sayı!serbestlik derecesi payında olan sayı, 1 ile 10^10 arasında (10^10 hariç) bir sayı!serbestlik derecesi paydası, 1 ile 10^10 arasında (10^10 hariç) bir sayı"
	},
	"F.TEST": {
		"a": "(dizi1; dizi2)",
		"d": "Bir F-test sonucu verir; Dizi1 ve Dizi2'nin varyanslarının çok farklı olmadığı iki kuyruklu olasılıktır",
		"ad": "ilk veri aralığı ya da dizisidir ve sayı, ad, dizi, ya da sayı içeren başvuru olabilir (boşluklar yoksayılır)!ikinci veri aralığı ya da dizisidir ve sayı, ad, dizi, ya da sayı içeren başvuru olabilir (boşluklar yoksayılır)"
	},
	"FISHER": {
		"a": "(x)",
		"d": "Fisher dönüşümünü verir",
		"ad": "dönüşümünü istediğiniz değer, -1 ile 1 arasında (-1 ve 1 hariç) bir sayı"
	},
	"FISHERINV": {
		"a": "(y)",
		"d": "Fisher dönüşümünün tersini verir: y = FISHER(x) ise, FISHERTERS(y) = x",
		"ad": "dönüşümün tersini almak istediğiniz değer"
	},
	"FORECAST": {
		"a": "(x; bilinen_y'ler; bilinen_x'ler)",
		"d": "Varolan değerleri kullanarak bir gelecek değeri doğrusal bir eğilim boyunca hesaplar ya da tahmin eder",
		"ad": "bir değer tahmin edilecek veri noktasıdır ve sayısal bir değer olmalıdır!bağımlı sayısal veri dizisi ya da aralığıdır!bağımsız sayısal veri dizisi ya da aralığıdır. Bilinen_x'lerin varyansı sıfır olmamalıdır"
	},
	"FORECAST.ETS": {
		"a": "(hedef_tarih; değerler; zaman_çizelgesi; [mevsimsellik]; [veri_tamamlama]; [toplama])",
		"d": "Üstel düzeltme yöntemini kullanarak belirtilen hedef gelecek tarihi için tahmin edilen bir değer verir.",
		"ad": "Spreadsheet Editor uygulamasının bir değer tahmin ettiği veri noktasıdır. Zaman çizelgesindeki değer desenlerini sürdürmesi gerekir.!tahmin ettiğiniz sayısal veri aralığı veya dizisidir.!bağımsız sayısal veri aralığı veya dizisidir. Zaman çizelgesindeki tarihler arasında tutarlı bir adım olmalıdır ve sıfır olamaz.!mevsimsel desenin uzunluğunu gösteren isteğe bağlı sayısal bir değerdir. Varsayılan değer olan 1, mevsimselliğin otomatik olarak algılandığını gösterir.!eksik değerleri işlemek için kullanılan isteğe bağlı bir değerdir. Varsayılan değer olan 1 eksik değerleri ilişkilendirme yoluyla değiştirir ve 0 da bunları sıfırlarla değiştirir.!aynı zaman damgasına sahip birden fazla değeri toplamak için kullanılan isteğe bağlı bir sayısal değerdir. Boş bırakılırsa Spreadsheet Editor değerlerin ortalamasını verir."
	},
	"FORECAST.ETS.CONFINT": {
		"a": "(hedef_tarih; değerler; zaman_çizelgesi; [güven_düzeyi]; [mevsimsellik]; [veri_tamamlama]; [toplama])",
		"d": "Belirtilen hedef tarihteki tahmin değeri için bir güvenilirlik aralığını verir.",
		"ad": "Spreadsheet Editor uygulamasının bir değer tahmin ettiği veri noktasıdır. Zaman çizelgesindeki değer desenlerini sürdürmesi gerekir.!tahmin ettiğiniz sayısal veri aralığı veya dizisidir.!bağımsız sayısal veri aralığı veya dizisidir. Zaman çizelgesindeki tarihler arasında tutarlı bir adım olmalıdır ve sıfır olamaz.!hesaplanan güven aralığının güven düzeyini gösteren 0 ve 1 arasında bir sayıdır.Varsayılan değer .95'tir.!mevsimsel desenin uzunluğunu gösteren isteğe bağlı sayısal bir değerdir. Varsayılan değer olan 1, mevsimselliğin otomatik olarak algılandığını gösterir.!eksik değerleri işlemek için kullanılan isteğe bağlı bir değerdir. Varsayılan değer olan 1 eksik değerleri ilişkilendirme yoluyla değiştirir ve 0 da bunları sıfırlarla değiştirir.!aynı zaman damgasına sahip birden fazla değeri toplamak için kullanılan isteğe bağlı bir sayısal değerdir. Boş bırakılırsa Spreadsheet Editor değerlerin ortalamasını verir."
	},
	"FORECAST.ETS.SEASONALITY": {
		"a": "(değerler; zaman_çizelgesi; [veri_tamamlama]; [toplama])",
		"d": "Belirtilen zaman dizisi için uygulama tarafından algılanan tekrarlanan desenin uzunluğunu verir.",
		"ad": "tahmin ettiğiniz sayısal veri aralığı veya dizisidir.!bağımsız sayısal veri aralığı veya dizisidir. Zaman çizelgesindeki tarihler arasında tutarlı bir adım olmalıdır ve sıfır olamaz.!eksik değerleri işlemek için isteğe bağlı bir değer.Varsayılan değer olan 1 eksik değerleri ilişkilendirme yoluyla değiştirir ve 0 da bunları sıfırlarla değiştirir.!aynı zaman damgasına sahip birden fazla değeri toplamak için kullanılan isteğe bağlı bir sayısal değerdir. Boş bırakılırsa Spreadsheet Editor değerlerin ortalamasını verir."
	},
	"FORECAST.ETS.STAT": {
		"a": "(değerler; zaman_çizelgesi; istatistik_türü; [mevsimsellik]; [veri_tamamlama]; [toplama])",
		"d": "Tahmin için istenen istatistiği döndürür.",
		"ad": "tahmin ettiğiniz sayısal veri aralığı veya dizisidir.!bağımsız sayısal veri aralığı veya dizisidir. Zaman çizelgesindeki tarihler arasında tutarlı bir adım olmalıdır ve sıfır olamaz.!Spreadsheet Editor uygulamasının hesaplanan tahmin için vereceği istatistiği gösteren 1 ve 8 arasında bir sayıdır. !mevsimsel desenin uzunluğunu gösteren isteğe bağlı sayısal bir değerdir. Varsayılan değer olan 1, mevsimselliğin otomatik olarak algılandığını gösterir.!eksik değerleri işlemek için kullanılan isteğe bağlı bir değerdir. Varsayılan değer olan 1 eksik değerleri ilişkilendirme yoluyla değiştirir ve 0 da bunları sıfırlarla değiştirir.!aynı zaman damgasına sahip birden fazla değeri toplamak için kullanılan isteğe bağlı bir sayısal değerdir. Boş bırakılırsa Spreadsheet Editor değerlerin ortalamasını verir."
	},
	"FORECAST.LINEAR": {
		"a": "(x; bilinen_y'ler; bilinen_x'ler)",
		"d": "Varolan değerleri kullanarak bir gelecek değeri doğrusal bir eğilim boyunca hesaplar ya da tahmin eder",
		"ad": "bir değer tahmin edilecek veri noktasıdır ve sayısal bir değer olmalıdır!bağımlı sayısal veri dizisi ya da aralığıdır!bağımsız sayısal veri dizisi ya da aralığı. Bilinen_x'lerin varyansı sıfır olmamalıdır"
	},
	"FREQUENCY": {
		"a": "(veri_dizisi; bölme_dizisi)",
		"d": "Bir değerler aralığındaki değerlerin hangi sıklıkta yer aldığını hesaplar ve bölme_dizisi'nden bir fazla elemana sahip olan bir dikey sayı dizisi verir",
		"ad": "sıklıkları hesaplamak istediğiniz bir değerler kümesi dizisi veya başvurusu (boşluk ve metin yoksayılır)!veri_dizisi'ndeki değerleri gruplayacağınız aralıklar dizisi veya başvurusu"
	},
	"GAMMA": {
		"a": "(x)",
		"d": "Gama işlevi değerini verir",
		"ad": " Gama değerini hesaplamak istediğiniz değer"
	},
	"GAMMADIST": {
		"a": "(x; alfa; beta; kümülatif)",
		"d": "Gama dağılımını verir",
		"ad": "dağılımı hesaplamak istediğiniz değer, negatif olmayan bir sayı!dağılım parametresi, pozitif bir sayı!dağılım parametresi, pozitif bir sayı. beta = 1 ise, GAMADAĞ standart gama dağılımını verir!mantıksal değer: kümülatif dağılım fonksiyonu = DOĞRU; olasılık kütle fonksiyonu = YANLIŞ ya da atlanmış"
	},
	"GAMMA.DIST": {
		"a": "(x; alfa; beta; kümülatif)",
		"d": "Gama dağılımını verir",
		"ad": "dağılımı hesaplamak istediğiniz değer, negatif olmayan bir sayı!dağılım parametresi, pozitif bir sayı!dağılım parametresi, pozitif bir sayı. beta = 1 ise, GAMA.DAĞ standart gama dağılımını verir!mantıksal değer: kümülatif dağılım işlevi = DOĞRU; olasılık kütle işlevi = YANLIŞ ya da atlanmış"
	},
	"GAMMAINV": {
		"a": "(olasılık; alfa; beta)",
		"d": "Gama kümülatif dağılımının tersini verir: p = GAMADAĞ(x,...) ise, GAMATERS(p,...) = x",
		"ad": "gama dağılımıyla ilgili olasılık, 0 ile 1 arasında (bunlar dahil) bir sayı!dağılım parametresi, pozitif bir sayı!dağılım parametresi, pozitif bir sayı. beta = 1 ise, GAMATERS standart gama dağılımının tersini verir"
	},
	"GAMMA.INV": {
		"a": "(olasılık; alfa; beta)",
		"d": "Gama kümülatif dağılımının tersini verir: p = GAMA.DAĞ(x,...) ise, GAMA.TERS(p,...) = x",
		"ad": "gama dağılımıyla ilgili olasılık, 0 ile 1 arasında (bunlar dahil) bir sayı!dağılım parametresi, pozitif bir sayı!dağılım parametresi, pozitif bir sayı. beta = 1 ise, GAMA.TERS standart gama dağılımının tersini verir"
	},
	"GAMMALN": {
		"a": "(x)",
		"d": "Gama fonksiyonunun doğal logaritmasını verir",
		"ad": "GAMALN'ini hesaplamak istediğiniz değer, pozitif bir sayı"
	},
	"GAMMALN.PRECISE": {
		"a": "(x)",
		"d": "Gama işlevinin doğal logaritmasını döndürür",
		"ad": "GAMALN.DUYARLI işlevini hesaplamak istediğiniz değer, pozitif bir sayı"
	},
	"GAUSS": {
		"a": "(x)",
		"d": "Standart normal kümülatif dağılımdan 0,5 daha azını verir",
		"ad": "dağılımını hesaplamak istediğiniz değer"
	},
	"GEOMEAN": {
		"a": "(sayı1; [sayı2]; ...)",
		"d": "Bir dizi ya da pozitif sayısal veri aralığının geometrik ortalamasını verir",
		"ad": "ortalamasını bulmak istediğiniz en az 1 en fazla 255 sayı, ad, dizi, ya da sayı içeren başvurudur"
	},
	"GROWTH": {
		"a": "(bilinen_y'ler; [bilinen_x'ler]; [yeni_x'ler]; [sabit])",
		"d": "Bilinen veri noktalarıyla eşleşen üstel büyüme trendi içindeki sayıları döndürür",
		"ad": "y=b*m^x denkleminde kullanılan y değerleri kümesi, bir dizi ya da pozitif sayılar aralığı!y=b*m^x denkleminde kullanılan isteğe bağlı x değerleri, bir dizi ya da Bilinen_y'lerle aynı boyuttaki aralık!ilişkili y değerlerini BÜYÜME ile bulacağınız yeni x değerleri!mantıksal değer: Sabit = DOĞRU ise sabit b değeri olağan şekilde hesaplanır; Sabit = YANLIŞ ya da atlanmış ise b 1'e eşitlenir"
	},
	"HARMEAN": {
		"a": "(sayı1; [sayı2]; ...)",
		"d": "Pozitif sayılardan oluşan bir veri kümesinin harmonik ortalamasını verir: devrik değerlerin aritmetik ortalamasının devrik değeridir",
		"ad": "harmonik ortalamasını bulmak istediğiniz en az 1 en fazla 255 sayı, ad, dizi, ya da sayı içeren başvurudur"
	},
	"HYPGEOM.DIST": {
		"a": "(başarı_örnek; örnek_sayısı; başarı_popülasyon; pop_sayısı; kümülatif)",
		"d": "Hipergeometrik dağılımı verir",
		"ad": "örnek içindeki başarı sayısı!örnek boyutu!popülasyondaki başarı sayısı!popülasyon boyutu!mantıksal değer: kümülatif dağılım fonksiyonu için DOĞRU'yu; olasılık yoğunluk fonksiyonu için YANLIŞ'ı kullanın"
	},
	"HYPGEOMDIST": {
		"a": "(başarı_örnek; sayı_örnek; başarı_popülasyon; sayı_pop)",
		"d": "Hipergeometrik dağılımı verir",
		"ad": "örnek içindeki başarı sayısı!örnek boyutu!popülasyondaki başarı sayısı!popülasyon boyutu"
	},
	"INTERCEPT": {
		"a": "(bilinen_y'ler; bilinen_x'ler)",
		"d": "Bilinen x ve y-değerleri üzerindeki en uygun regresyon çizgisini kullanarak bir çizginin y-eksenini kestiği noktaları hesaplar",
		"ad": "bağımlı veri ya da gözlemler kümesidir ve sayı, ad, dizi ya da sayı içeren başvuru olabilir!bağımsız veri ya da gözlemler kümesidir ve sayı, ad, dizi ya da sayı içeren başvuru olabilir"
	},
	"KURT": {
		"a": "(sayı1; [sayı2]; ...)",
		"d": "Bir veri kümesinin basıklığını verir",
		"ad": "basıklığını bulmak istediğiniz en az 1 en fazla 255 sayı, ad, dizi ya da sayı içeren başvurudur"
	},
	"LARGE": {
		"a": "(dizi; k)",
		"d": "Bir veri kümesi içindeki en büyük k. değeri verir. Örneğin, beşinci en büyük sayı",
		"ad": "k. en büyük değeri belirlemek için kullanılan veri dizisi veya aralığı!gelecek olan değerin bulunduğu hücre aralığı veya dizideki konumu (en büyük değerden)"
	},
	"LINEST": {
		"a": "(bilinen_y'ler; [bilinen_x'ler]; [sabit]; [konum])",
		"d": "En küçük kareler yöntemiyle hesaplanmış olan verilerinize en iyi uyan doğruyu tanımlayan diziyi verir",
		"ad": "y=mx+b denklemindeki y-değerleri kümesi!y=mx+b denkleminde kullanılan isteğe bağlı x değerleri!mantıksal değer: Sabit = DOĞRU ya da atlanmış ise sabit b değeri olağan şekilde hesaplanır; Sabit = YANLIŞ ise b 0'a eşitlenir!mantıksal değer: ek regresyon istatistiği = DOĞRU; m-katsayıları ve sabit b değeri = YANLIŞ ya da atlanmış"
	},
	"LOGEST": {
		"a": "(bilinen_y'ler; [bilinen_x'ler]; [sabit]; [konum])",
		"d": "Verilerinize uyması için regresyon çözümlemesi yöntemiyle hesaplanmış olan üstel eğriyi tanımlayan değerler dizisini verir",
		"ad": "y=b*m^x denklemindeki y-değerleri kümesi!y=b*m^x denkleminde kullanılan isteğe bağlı x değerleri!mantıksal değer: Sabit = DOĞRU ya da atlanmış ise b sabit değeri olağan şekilde hesaplanır; Sabit = YANLIŞ ise b 1'e eşitlenir!mantıksal değer: ek gerileme istatistiği = DOĞRU; m-katsayıları ve sabit b değeri = YANLIŞ ya da atlanmış"
	},
	"LOGINV": {
		"a": "(olasılık; ortalama; standart_sapma)",
		"d": "ln(x)'in Ortalama ve Standart_sapma parametreleriyle normal dağıldığı durumlarda x'in kümülatif lognormal dağılım işlevinin tersini verir",
		"ad": "lognormal dağılımı ile ilgili olasılık, 0 ile 1 arasında (bunlar dahil) bir sayı!ln(x)'in ortalaması!ln(x)'in standart sapması, pozitif bir sayı"
	},
	"LOGNORM.DIST": {
		"a": "(x; ortalama; standart_sapma; kümülatif)",
		"d": "ln(x)'in normal olarak Ortalama ve Standart_sapma parametreleriyle dağıldığı durumlarda x'in lognormal dağılımını verir",
		"ad": "işlevin hesaplanacağı değer, pozitif bir sayı!ln(x)'in ortalaması!ln(x)'in standart sapması, pozitif bir sayı!mantıksal değer: kümülatif dağılım fonksiyonu için DOĞRU'yu; olasılık yoğunluk fonksiyonu için YANLIŞ'ı kullanın"
	},
	"LOGNORM.INV": {
		"a": "(olasılık; ortalama; standart_sapma)",
		"d": "ln(x)'in Ortalama ve Standart_sapma parametreleriyle normal dağıldığı durumlarda x'in kümülatif lognormal dağılım işlevinin tersini verir",
		"ad": "lognormal dağılımı ile ilgili olasılık, 0 ile 1 arasında (bunlar dahil) bir sayı!ln(x)'in ortalaması!ln(x)'in standart sapması, pozitif bir sayı"
	},
	"LOGNORMDIST": {
		"a": "(x; ortalama; standart_sapma)",
		"d": "ln(x)'in normal olarak Ortalama ve Standart_sapma parametreleriyle dağıldığı durumlarda x'in kümülatif lognormal dağılımını verir",
		"ad": "işlevin hesaplanacağı değer, pozitif bir sayı!ln(x)'in ortalaması!ln(x)'in standart sapması, pozitif bir sayı"
	},
	"MAX": {
		"a": "(sayı1; [sayı2]; ...)",
		"d": "Bir değerler kümesindeki en büyük değeri verir. Mantıksal değerleri ve metni yoksayar",
		"ad": "en büyüğünü bulmak istediğiniz en az 1 en fazla 255 sayı, boş hücre, mantıksal değer ya da metin biçiminde sayıdır"
	},
	"MAXA": {
		"a": "(değer1; [değer2]; ...)",
		"d": "Bir değerler kümesindeki en büyük değeri verir. Mantıksal değerleri ve metni yoksaymaz",
		"ad": "en büyüğünü bulmak istediğiniz en az 1 en fazla 255 sayı, boş hücre, mantıksal değer ya da metin biçimindeki sayıdır"
	},
	"MAXIFS": {
		"a": "(en_büyük_aralık; ölçüt_aralığı; ölçüt; ...)",
		"d": "Verilen koşul veya ölçüt kümesiyle belirtilen hücrelerdeki en büyük değeri döndürür",
		"ad": "en büyük değerin belirleneceği hücreler!belirli bir koşul için hesaplamak istediğiniz hücre aralığıdır!en büyük değer belirlenirken hangi hücrelerin dahil edileceğini tanımlayan sayı, ifade veya metin biçimindeki koşul veya ölçüttür"
	},
	"MEDIAN": {
		"a": "(sayı1; [sayı2]; ...)",
		"d": "Verilen sayılar kümesinin ortancasını ya da bu kümenin ortasındaki sayıyı verir",
		"ad": "ortancasını aradığınız en az 1 en fazla 255 sayı, ad, dizi ya da sayı içeren başvurudur"
	},
	"MIN": {
		"a": "(sayı1; [sayı2]; ...)",
		"d": "Bir değerler kümesindeki en küçük değeri verir. Mantıksal değerleri ve metni yoksayar",
		"ad": "en küçüğünü bulmak istediğiniz en az 1 en fazla 255 sayı, boş hücre, mantıksal değer ya da metin biçiminde sayıdır"
	},
	"MINA": {
		"a": "(değer1; [değer2]; ...)",
		"d": "Bir değerler kümesindeki en küçük değeri verir. Mantıksal değerleri ve metni yoksaymaz",
		"ad": "en küçüğünü bulmak istediğiniz en az 1 en fazla 255 sayı, boş hücre, mantıksal değer ya da metin biçimindeki sayıdır"
	},
	"MINIFS": {
		"a": "(en_küçük_aralık; ölçüt_aralığı; ölçüt; ...)",
		"d": "Verilen koşul veya ölçüt kümesiyle belirtilen hücrelerdeki en küçük değeri döndürür",
		"ad": "en küçük değerin belirleneceği hücreler!belirli bir koşul için hesaplamak istediğiniz hücre aralığıdır!en küçük değer belirlenirken hangi hücrelerin dahil edileceğini tanımlayan sayı, ifade veya metin biçimindeki koşul veya ölçüttür"
	},
	"MODE": {
		"a": "(sayı1; [sayı2]; ...)",
		"d": "Bir veri dizisi ya da aralığında en sık karşılaşılan ya da en çok yinelenen değeri verir",
		"ad": "modunu bulmak istediğiniz en az 1 en fazla 255 sayı, ad, dizi ya da sayı içeren başvurudur"
	},
	"MODE.MULT": {
		"a": "(sayı1; [sayı2]; ...)",
		"d": "Bir veri dizisi veya aralığında en sık karşılaşılan veya en çok yinelenen değerleri içeren dikey bir dizi verir. Yatay bir dizi için, =DEVRİK_DÖNÜŞÜM(ENÇOK_OLAN.ÇOK(sayı1,sayı2,...)) kullanın",
		"ad": "modunu bulmak istediğiniz en az 1 en fazla 255 sayı, ad, dizi ya da sayı içeren başvurudur"
	},
	"MODE.SNGL": {
		"a": "(sayı1; [sayı2]; ...)",
		"d": "Bir veri dizisi ya da aralığında en sık karşılaşılan ya da en çok yinelenen değeri verir",
		"ad": "modunu bulmak istediğiniz en az 1 en fazla 255 sayı, ad, dizi ya da sayı içeren başvurudur"
	},
	"NEGBINOM.DIST": {
		"a": "(hata_sayısı; başarı_sayısı; başarı_olasılığı; kümülatif)",
		"d": "Bir başarının negatif binom dağılımını, yani Başarı_sayısı kadar başarıdan önce Başarısızlık_s kadar başarısızlık olması olasılığını Başarı_olasılığı kadar olasılıkla verir",
		"ad": "başarısızlık sayısı!başarı eşik sayısı!başarı olasılığı; 0 ile 1 arasında bir sayı!mantıksal değer: kümülatif dağılım fonksiyonu için DOĞRU'yu; olasılık kütle fonksiyonu için YANLIŞ'ı kullanın"
	},
	"NEGBINOMDIST": {
		"a": "(başarısızlık_s; başarı_sı; başarı_o)",
		"d": "Bir başarının negatif binom dağılımını, yani Başarı_sı kadar başarıdan önce Başarısızlık_s kadar başarısızlık olması olasılığını ve Başarı_o olarak başarı olasılığını verir",
		"ad": "başarısızlık sayısı!başarı eşik sayısı!başarı olasılığı; 0 ile 1 arasında bir sayı"
	},
	"NORM.DIST": {
		"a": "(x; ortalama; standart_sapma; kümülatif)",
		"d": "Belirtilen ortalama ve standart sapma için normal dağılımı verir",
		"ad": "dağılımını bulmak istediğiniz değer!dağılımın aritmetik ortalaması!dağılımın standart sapması, pozitif bir sayı!mantıksal değer: kümülatif dağılım işlevi için DOĞRU'yu; olasılık yoğunluk işlevi için YANLIŞ'ı kullanın"
	},
	"NORMDIST": {
		"a": "(x; ortalama; standart_sapma; kümülatif)",
		"d": "Belirtilen ortalama ve standart sapma için normal kümülatif dağılımı verir",
		"ad": "dağılımını bulmak istediğiniz değer!dağılımın aritmetik ortalaması!dağılımın standart sapması, pozitif bir sayı!mantıksal değer: kümülatif dağılım fonksiyonu için DOĞRU'yu; olasılık yoğunluk fonksiyonu için YANLIŞ'ı kullanın"
	},
	"NORM.INV": {
		"a": "(olasılık; ortalama; standart_sapma)",
		"d": "Belirtilen ortalama ve standart sapma için normal kümülatif dağılımın tersini verir",
		"ad": "normal dağılıma karşılık gelen olasılık, 0 ile 1 arasında (bunlar dahil) bir sayı!dağılımın aritmetik ortalaması!dağılımın standart sapması, pozitif bir sayı"
	},
	"NORMINV": {
		"a": "(olasılık; ortalama; standart_sapma)",
		"d": "Belirtilen ortalama ve standart sapma için normal kümülatif dağılımın tersini verir",
		"ad": "normal dağılıma karşılık gelen olasılık, 0 ile 1 arasında (bunlar dahil) bir sayı!dağılımın aritmetik ortalaması!dağılımın standart sapması, pozitif bir sayı"
	},
	"NORM.S.DIST": {
		"a": "(z; kümülatif)",
		"d": "Standart normal dağılımı (ortalaması sıfır, standart sapması bir) verir",
		"ad": "dağılımını bulmak istediğiniz değer!fonksiyonun vereceği mantıksal değer: kümülatif dağılım fonksiyonu = DOĞRU; olasılık yoğunluğu fonksiyonu = YANLIŞ"
	},
	"NORMSDIST": {
		"a": "(z)",
		"d": "Standart normal kümülatif dağılımı (ortalaması sıfır, standart sapması bir) verir",
		"ad": "dağılımını bulmak istediğiniz değer"
	},
	"NORM.S.INV": {
		"a": "(olasılık)",
		"d": "Standart normal kümülatif dağılımın (ortalaması sıfır, standart sapması bir) tersini verir",
		"ad": "normal dağılıma karşılık gelen olasılık, 0 ile 1 arasında (bunlar dahil) bir sayı"
	},
	"NORMSINV": {
		"a": "(olasılık)",
		"d": "Standart normal kümülatif dağılımın (ortalaması sıfır, standart sapması bir) tersini verir",
		"ad": "normal dağılıma karşılık gelen olasılık, 0 ile 1 arasında (bunlar dahil) bir sayı"
	},
	"PEARSON": {
		"a": "(dizi1; dizi2)",
		"d": "Pearson çarpım moment korelasyon katsayısı olan r'yi verir",
		"ad": "bağımsız değerler kümesi!bağımlı değerler kümesi"
	},
	"PERCENTILE": {
		"a": "(dizi; k)",
		"d": "Bir aralık içerisindeki değerlerin k. yüzdebir toplamını verir",
		"ad": "göreceli durumu tanımlayan veri dizisi ya da aralığı!0 ile 1 arasındaki (bunlar dahil) yüzdebirlik değeri"
	},
	"PERCENTILE.EXC": {
		"a": "(dizi; k)",
		"d": "Aralıktaki değerlerin k. yüzdebirliğini verir; k, 0..1 aralığındadır (bunlar hariç)",
		"ad": "göreceli durumu tanımlayan veri dizisi ya da aralığı!0 ile 1 arasındaki (bunlar dahil) yüzdebirlik değeri"
	},
	"PERCENTILE.INC": {
		"a": "(dizi; k)",
		"d": "Aralıktaki değerlerin k. yüzdebirliğini verir; k, 0..1 aralığındadır (bunlar dahil)",
		"ad": "göreceli durumu tanımlayan veri dizisi ya da aralığı!0 ile 1 arasındaki (bunlar dahil) yüzdebirlik değeri"
	},
	"PERCENTRANK": {
		"a": "(dizi; x; [anlam])",
		"d": "Bir veri kümesindeki bir değerin sırasını, veri kümesinin yüzdesi olarak verir",
		"ad": "göreceli durumu tanımlayan sayısal değerli veri dizisi veya aralığı!derecesini öğrenmek istediğiniz değer!dönen yüzde oranı için anlamlı rakam sayısını belirten isteğe bağlı değer, atlanırsa üç rakam kullanılır (0.xxx%)"
	},
	"PERCENTRANK.EXC": {
		"a": "(dizi; x; [anlam])",
		"d": "Bir veri kümesindeki değerin derecesini veri kümesinin yüzdesi (0..1, bunlar hariç) olarak verir",
		"ad": "göreceli durumu tanımlayan sayısal değerli veri dizisi veya aralığı!derecesini öğrenmek istediğiniz değer!dönen yüzde oranı için anlamlı rakam sayısını belirten isteğe bağlı değer, atlanırsa üç rakam kullanılır (0.xxx%)"
	},
	"PERCENTRANK.INC": {
		"a": "(dizi; x; [anlam])",
		"d": "Bir veri kümesindeki değerin derecesini veri kümesinin yüzdesi (0..1, bunlar dahil) olarak verir",
		"ad": "göreceli durumu tanımlayan sayısal değerli veri dizisi veya aralığı!derecesini öğrenmek istediğiniz değer!dönen yüzde oranı için anlamlı rakam sayısını belirten isteğe bağlı değer, atlanırsa üç rakam kullanılır (0.xxx%)"
	},
	"PERMUT": {
		"a": "(sayı; sayı_seçilen)",
		"d": "Tüm nesnelerden seçilebilecek olan verilen sayıda nesne için permütasyon sayısını verir",
		"ad": "toplam nesne sayısı!her permütasyondaki nesne sayısı"
	},
	"PERMUTATIONA": {
		"a": "(sayı; sayı_seçilen)",
		"d": "Tüm nesnelerden seçilebilecek olan verilen sayıda (yinelemelerle) nesne için permütasyon sayısını verir",
		"ad": "nesnelerin toplam sayısı!her permütasyondaki nesne sayısı"
	},
	"PHI": {
		"a": "(x)",
		"d": "Standart normal dağılımın yoğunluk fonksiyonunun değerini döndürür",
		"ad": "standart normal dağılım yoğunluğunu bulmak istediğiniz sayı"
	},
	"POISSON": {
		"a": "(x; ortalama; kümülatif)",
		"d": "Poisson dağılımını verir",
		"ad": "olay sayısı!beklenen sayısal değer, pozitif bir sayı!mantıksal değer: kümülatif Poisson olasılığı için DOĞRU'yu; Poisson olasılık kütle fonksiyonu için YANLIŞ'ı kullanın"
	},
	"POISSON.DIST": {
		"a": "(x; ortalama; kümülatif)",
		"d": "Poisson dağılımını verir",
		"ad": "olay sayısı!beklenen sayısal değer, pozitif bir sayı!mantıksal değer: kümülatif Poisson olasılığı için DOĞRU'yu; Poisson olasılık kütle işlevi için YANLIŞ'ı kullanın"
	},
	"PROB": {
		"a": "(x_aralığı; olasılık_aralığı; alt_sınır; [üst_sınır])",
		"d": "Bir aralıktaki değerlerin iki sınır arasında ya da alt sınıra eşit olması olasılığını verir",
		"ad": "olasılık değerleriyle ilgili sayısal x değerleri aralığı!X_aralığındaki değerlerle ilgili olasılıklar kümesi, 0 ile 1 arasındaki (0 hariç) değerler!olasılık işleminin yapılacağı değerin alt sınırı!değerin isteğe bağlı en üst sınırı, OLASILIK X_aralığı değerlerinin Alt_sınır'a eşit olma olasılığını verir"
	},
	"QUARTILE": {
		"a": "(dizi; dörttebir)",
		"d": "Bir veri kümesinin dörttebirliğini verir",
		"ad": "dörttebir değerini istediğiniz sayısal değerler dizisi veya hücreler aralığı!sayı: en küçük değer = 0; birinci dörttebir = 1; medyan değeri = 2; üçüncü dörttebir = 3; en büyük değer = 4"
	},
	"QUARTILE.INC": {
		"a": "(dizi; dörttebir)",
		"d": "0..1 (bunlar dahil) aralığındaki yüzdebir değerlerini temel alarak veri kümesinin dörttebirliğini verir",
		"ad": "dörttebir değerini istediğiniz sayısal değerler dizisi veya hücreler aralığı!sayı: en küçük değer = 0; birinci dörtebir = 1; medyan değeri = 2; üçüncü dörtebir = 3; en büyük değer = 4"
	},
	"QUARTILE.EXC": {
		"a": "(dizi; dörttebir)",
		"d": "0..1 (bunlar hariç) aralığındaki yüzdebir değerlerini temel alarak veri kümesinin dörttebirliğini verir",
		"ad": "dörttebir değerini istediğiniz sayısal değerler dizisi veya hücreler aralığı!sayı: en küçük değer = 0; birinci dörtebir = 1; medyan değeri = 2; üçüncü dörtebir = 3; en büyük değer = 4"
	},
	"RANK": {
		"a": "(sayı; başv; [sıra])",
		"d": "Bir sayı listesindeki bir sayının derecesini verir: listedeki diğer değerlere göreli olarak büyüklüğü",
		"ad": "derecesini bulmak istediğiniz sayı!bir sayı listesi başvurusu veya dizisi. Sayısal olmayan değerler yoksayılır!sayı: azalan sıralı listedeki derece = 0 ya da atlanmış; artan sıralı listedeki derece = sıfır olmayan herhangi bir değer"
	},
	"RANK.AVG": {
		"a": "(sayı; başv; [sıra])",
		"d": "Bir sayı listesindeki bir sayının derecesini verir: listedeki diğer değerlere göreli olarak büyüklüğü; birden fazla değer aynı dereceye sahipse, ortalama derece döndürülür",
		"ad": "derecesini bulmak istediğiniz sayı!bir sayı listesi başvurusu veya dizisi. Sayısal olmayan değerler yoksayılır!sayı: azalan sıralı listedeki derece = 0 ya da atlanmış; artan sıralı listedeki derece = sıfır olmayan herhangi bir değer"
	},
	"RANK.EQ": {
		"a": "(sayı; başv; [sıra])",
		"d": "Bir sayı listesindeki bir sayının derecesini verir: listedeki diğer değerlere göreli olarak büyüklüğü; birden fazla değer aynı dereceye sahipse, değer kümesindeki en yüksek derece döndürülür",
		"ad": "derecesini bulmak istediğiniz sayı!bir sayı listesi başvurusu veya dizisi. Sayısal olmayan değerler yoksayılır!sayı: azalan sıralı listedeki derece = 0 ya da atlanmış; artan sıralı listedeki derece = sıfır olmayan herhangi bir değer"
	},
	"RSQ": {
		"a": "(bilinen_y'ler; bilinen_x'ler)",
		"d": "Verilen veri noktaları boyunca Pearson çarpım moment korelasyon katsayısının karesini verir",
		"ad": "dizi ya da veri noktaları aralığıdır ve sayı, ad, dizi ya da sayı içeren başvurular olabilir!dizi ya da veri noktaları aralığıdır ve sayı, ad, dizi ya da sayı içeren başvurular olabilir"
	},
	"SKEW": {
		"a": "(sayı1; [sayı2]; ...)",
		"d": "Dağılımın eğriliğini verir: bir dağılımın ortalaması etrafındaki asimetri derecesini belirtir",
		"ad": "eğriliği hesaplamak istediğiniz en az 1 en fazla 255 sayı, ad, dizi ya da sayı içeren başvurudur"
	},
	"SKEW.P": {
		"a": "(sayı1; [sayı2]; ...)",
		"d": "Popülasyona bağlı olarak dağılımın eğriliğini verir: bir dağılımın ortalaması etrafındaki asimetri derecesini belirtir",
		"ad": "popülasyon eğriliğini hesaplamak istediğiniz en az 1 en fazla 254 sayı, ad, dizi ya da sayı içeren başvurudur"
	},
	"SLOPE": {
		"a": "(bilinen_y'ler; bilinen_x'ler)",
		"d": "Verilen veri noktaları boyunca doğrusal regresyon çizgisinin eğimini verir",
		"ad": "sayısal bağımlı veri noktaları dizisi veya hücre aralığıdır ve sayı, ad, dizi ya da sayı içeren başvuru olabilir!bağımsız veri noktaları kümesidir ve sayı, ad dizi ya da sayı içeren başvuru olabilir"
	},
	"SMALL": {
		"a": "(dizi; k)",
		"d": "Bir veri kümesinde k. en küçük değeri verir. Örneğin, beşinci en küçük sayı",
		"ad": "k. en küçük değeri bulmak istediğiniz sayısal veri dizisi veya aralığı!gelecek olan değerin bulunduğu hücre aralığı veya dizideki konumu (en küçük değerden)"
	},
	"STANDARDIZE": {
		"a": "(x; ortalama; standart_sapma)",
		"d": "Bir ortalama ve standart sapma tarafından temsil edilen bir dağılımdan normalleştirilen değeri verir",
		"ad": "normalize etmek istediğiniz değer!dağılımın aritmetik ortalaması!dağılımın standart sapması, pozitif bir sayı"
	},
	"STDEV": {
		"a": "(sayı1; [sayı2]; ...)",
		"d": "Bir örneğe dayanarak standart sapmayı tahmin eder (örnekteki mantıksal değerleri ve metni yoksayar)",
		"ad": "Popülasyondan alınmış bir örneğe karşılık gelen en az 1 en fazla 255 sayıdır; her biri sayı ya da sayı içeren başvuru olabilir"
	},
	"STDEV.P": {
		"a": "(sayı1; [sayı2]; ...)",
		"d": "Bağımsız değişkenler olarak verilen tüm popülasyonu temel alarak standart sapmayı hesaplar (mantıksal değerleri ve metni yoksayar)",
		"ad": "Popülasyona karşılık gelen en az 1 en fazla 255 sayıdır ve her biri sayı ya da sayı içeren başvuru olabilir"
	},
	"STDEV.S": {
		"a": "(sayı1; [sayı2]; ...)",
		"d": "Bir örneğe dayanarak standart sapmayı tahmin eder (örnekteki mantıksal değerleri ve metni yoksayar)",
		"ad": "popülasyondan alınmış bir örneğe karşılık gelen en az 1 en fazla 255 sayıdır; her biri sayı ya da sayı içeren başvuru olabilir"
	},
	"STDEVA": {
		"a": "(değer1; [değer2]; ...)",
		"d": "Mantıksal değerler ve metin içeren bir örneğin standart sapmasını tahmin eder. Metin ve YANLIŞ mantıksal değer 0; DOĞRU mantıksal değer ise 1 değerini alır",
		"ad": "bir popülasyonun bir örneğine karşılık gelen en az 1 en fazla 255 değerdir ve değer, ad ya da değer başvurusu olabilir"
	},
	"STDEVP": {
		"a": "(sayı1; [sayı2]; ...)",
		"d": "Bağımsız değişkenler olarak verilen tüm popülasyonu temel alarak standart sapmayı hesaplar (mantıksal değerleri ve metni yoksayar)",
		"ad": "popülasyona karşılık gelen en az 1 en fazla 255 sayıdır ve her biri sayı ya da sayı içeren başvuru olabilir"
	},
	"STDEVPA": {
		"a": "(değer1; [değer2]; ...)",
		"d": "Mantıksal değerler ve metin içeren tüm bir popülasyon için standart sapmayı hesaplar. Metin ve YANLIŞ mantıksal değer 0; DOĞRU mantıksal değer ise 1 değerini alır",
		"ad": "bir popülasyona karşılık gelen en az 1 en fazla 255 değerdir ve her biri değer, ad, dizi ya da değer içeren başvuru olabilir"
	},
	"STEYX": {
		"a": "(bilinen_y'ler; bilinen_x'ler)",
		"d": "Bir regresyondaki her x değeri için tahmin edilen y değerinin standart hatasını verir",
		"ad": "bağımlı veri noktaları aralığı veya dizisidir ve sayı, ad, dizi ya da sayı içeren başvuru olabilir!bağımsız veri noktaları aralığı veya dizisidir ve sayı, ad, dizi ya da sayı içeren başvuru olabilir"
	},
	"TDIST": {
		"a": "(x; serbestlik_der; yazı_say)",
		"d": "T-dağılımını verir",
		"ad": "dağılımı hesaplamak istediğiniz sayısal değer!dağılımı karakterize eden serbestlik derecesinin sayısını gösteren tamsayı!verilecek dağılım kuyruklarının sayısını belirtir: tek kuyruklu dağılım = 1; çift kuyruklu dağılım = 2"
	},
	"TINV": {
		"a": "(olasılık; serb_derecesi)",
		"d": "T-dağılımının iki kuyruklu tersini verir",
		"ad": "iki kuyruklu t-dağılımının olasılığı, 0 ile 1 arasındaki (bunlar dahil) bir sayı!dağılımın türünü belirleyen serbestlik derecesinin sayısını gösteren pozitif tamsayı"
	},
	"T.DIST": {
		"a": "(x; serb_derecesi; kümülatif)",
		"d": "Sol kuyruklu t-dağılımını verir",
		"ad": "dağılımı hesaplamak istediğiniz sayısal değer!dağılımı karakterize eden serbestlik derecesinin sayısını gösteren tam sayı!mantıksal değer: kümülatif dağılım fonksiyonu için DOĞRU'yu; olasılık yoğunluk fonksiyonu için YANLIŞ'ı kullanın"
	},
	"T.DIST.2T": {
		"a": "(x; serb_derecesi)",
		"d": "İki kuyruklu t-dağılımını verir",
		"ad": "dağılımı hesaplamak istediğiniz sayısal değer!dağılımı karakterize eden serbestlik derecesinin sayısını gösteren tam sayı"
	},
	"T.DIST.RT": {
		"a": "(x; serb_derecesi)",
		"d": "Sağ kuyruklu t-dağılımını verir",
		"ad": "dağılımı hesaplamak istediğiniz sayısal değer!dağılımı karakterize eden serbestlik derecesinin sayısını gösteren tam sayı"
	},
	"T.INV": {
		"a": "(olasılık; serb_derecesi)",
		"d": "T-dağılımının sol kuyruklu tersini verir",
		"ad": "iki kuyruklu t-dağılımının olasılığı, 0 ile 1 arasındaki (bunlar dahil) bir sayı!dağılımın türünü belirleyen serbestlik derecesinin sayısını gösteren pozitif tamsayı"
	},
	"T.INV.2T": {
		"a": "(olasılık; serb_derecesi)",
		"d": "T-dağılımının iki kuyruklu tersini verir",
		"ad": "iki kuyruklu t-dağılımının olasılığı, 0 ile 1 arasındaki (bunlar dahil) bir sayı!dağılımın türünü belirleyen serbestlik derecesinin sayısını gösteren pozitif tamsayı"
	},
	"T.TEST": {
		"a": "(dizi1; dizi2; yazı_say; tür)",
		"d": "Bir t-Test için olasılığı verir",
		"ad": "ilk veri kümesi!ikinci veri kümesi!verilecek dağılım kuyruklarının sayısını belirtir: tek kuyruklu dağılım = 1; çift kuyruklu dağılım = 2!uygulanacak t-test türü: eşli = 1, iki-örnek eşit varyans (homoskedastik) = 2, iki örnek eşit olmayan varyans = 3"
	},
	"TREND": {
		"a": "(bilinen_y'ler; [bilinen_x'ler]; [yeni_x'ler]; [sabit])",
		"d": "Bilinen değerlere en küçük kareler yöntemini uygulayarak değerleri bir doğruya uydurur ve bir doğrusal eğilim boyunca verir",
		"ad": "y = mx+b denklemindeki bilinen y-değerleri aralığı ya da dizisi!y = mx+b denkleminde kullanılan isteğe bağlı bilinen x-değerleri aralığı ya da dizisi, Bilinen_y'lerle aynı boyuttaki dizi!ilişkili y-değerlerini EĞİLİM ile bulacağınız yeni x-değerleri aralığı ya da dizisi!mantıksal değer: Sabit = DOĞRU ya da atlanmış ise sabit b değeri olağan şekilde hesaplanır; Sabit = YANLIŞ ise b 0'a eşitlenir"
	},
	"TRIMMEAN": {
		"a": "(dizi; yüzde)",
		"d": "Bir veri kümesinin iç kısmının ortalamasını verir",
		"ad": "kırpılıp ortalaması alınacak değerler dizisi veya aralığı!veri kümesinin alt ve üst ucunda bulunan ve hesaplama dışı tutulacak olan veri noktalarının kesirli sayısı"
	},
	"TTEST": {
		"a": "(dizi1; dizi2; yazı_say; tür)",
		"d": "Bir t-Test için olasılığı verir",
		"ad": "ilk veri kümesi!ikinci veri kümesi!verilecek dağılım kuyruklarının sayısını belirtir: tek kuyruklu dağılım = 1; çift kuyruklu dağılım = 2!uygulanacak t-test türü: eşli = 1, iki-örnek eşit varyans (homoskedastik) = 2, iki örnek eşit olmayan varyans = 3"
	},
	"VAR": {
		"a": "(sayı1; [sayı2]; ...)",
		"d": "Bir örneğe dayanarak varyansı tahmin eder (örnekteki mantıksal değerleri ve metni yoksayar)",
		"ad": "popülasyondan alınmış bir örneğe karşılık gelen en az 1 en fazla 255 sayısal bağımsız değişkendir"
	},
	"VAR.P": {
		"a": "(sayı1; [sayı2]; ...)",
		"d": "Tüm popülasyonun varyansını hesaplar (popülasyondaki mantıksal değerleri ve metni yoksayar)",
		"ad": "Popülasyona karşılık gelen en az 1 en fazla 255 sayısal bağımsız değişkendir"
	},
	"VAR.S": {
		"a": "(sayı1; [sayı2]; ...)",
		"d": "Bir örneğe dayanarak varyansı tahmin eder (örnekteki mantıksal değerleri ve metni yoksayar)",
		"ad": "Popülasyondan alınmış bir örneğe karşılık gelen en az 1 en fazla 255 sayısal bağımsız değişkendir"
	},
	"VARA": {
		"a": "(değer1; [değer2]; ...)",
		"d": "Mantıksal değerler ve metin içeren bir örneğin varyansını tahmin eder. Metin ve YANLIŞ mantıksal değer 0; DOĞRU mantıksal değer ise 1 değerini alır",
		"ad": "bir popülasyonun bir örneğine karşılık gelen en az 1 en fazla 255 değer bağımsız değişkenidir"
	},
	"VARP": {
		"a": "(sayı1; [sayı2]; ...)",
		"d": "Tüm popülasyonun varyansını hesaplar (popülasyondaki mantıksal değerleri ve metni yoksayar)",
		"ad": "popülasyona karşılık gelen en az 1 en fazla 255 sayısal bağımsız değişkendir"
	},
	"VARPA": {
		"a": "(değer1; [değer2]; ...)",
		"d": "Mantıksal değerler ve metin içeren bir popülasyon için varyansı hesaplar. Metin ve YANLIŞ mantıksal değer 0; DOĞRU mantıksal değer ise 1 değerini alır",
		"ad": "bir popülasyona karşılık gelen en az 1 en fazla 255 değer bağımsız değişkenidir"
	},
	"WEIBULL": {
		"a": "(x; alfa; beta; kümülatif)",
		"d": "Weibull dağılımını verir",
		"ad": "işlevin hesaplanacağı değer, negatif olmayan bir sayı!dağılım parametresi, pozitif bir sayı!dağılım parametresi, pozitif bir sayı!mantıksal değer: kümülatif dağılım fonksiyonu için DOĞRU'yu; olasılık kütle fonksiyonu için YANLIŞ'ı kullanın"
	},
	"WEIBULL.DIST": {
		"a": "(x; alfa; beta; kümülatif)",
		"d": "Weibull dağılımını verir",
		"ad": "işlevin hesaplanacağı değer, negatif olmayan bir sayı!dağılım parametresi, pozitif bir sayı!dağılım parametresi, pozitif bir sayı!mantıksal değer: kümülatif dağılım fonksiyonu için DOĞRU'yu; olasılık kütle fonksiyonu için YANLIŞ'ı kullanın"
	},
	"Z.TEST": {
		"a": "(dizi; x; [sigma])",
		"d": "Bir z-test'in tek kuyruklu P-değerini verir",
		"ad": "X'in sınanacağı veri dizisi veya aralığıdır!sınanacak değerdir!popülasyonun (bilinen) standart sapmasıdır. Atlanırsa, örnek standart sapma kullanılır"
	},
	"ZTEST": {
		"a": "(dizi; x; [sigma])",
		"d": "Bir z-test'in tek kuyruklu P-değerini verir",
		"ad": "X'in sınanacağı veri dizisi veya aralığıdır!sınanacak değerdir!popülasyonun (bilinen) standart sapmasıdır. Atlanırsa, örnek standart sapma kullanılır"
	},
	"ACCRINT": {
		"a": "(çıkış; ilk_faiz; mutabakat; oran; nominal; sıklık; [temel]; [hesapl_yöntemi])",
		"d": "Düzenli faiz ödenen bir menkul kıymetin birikmiş faizini döndürür.",
		"ad": "menkul kıymetin çıkış tarihi, tarih seri numarası cinsinden!menkul kıymetin ilk faiz tarihi, tarih seri numarası cinsinden!menkul kıymetin mutabakat tarihi, tarih seri numarası cinsinden!menkul kıymetin yıllık kupon oranı!menkul kıymetin nominal değeri!yıl başına düşen kupon ödemeleri sayısı!kullanılacak gün sayısı türü!mantıksal bir değer: çıkış tarihinden başlayarak biriken faiz için = DOĞRU veya yoksayılır; en son kupon ödeme tarihinden hesaplamak için = YANLIŞ"
	},
	"ACCRINTM": {
		"a": "(çıkış; mutabakat; oran; nominal; [temel])",
		"d": "Vadesinde faiz ödeyen bir menkul kıymet için elde edilen faizi döndürür",
		"ad": "menkul kıymetin çıkış tarihi, tarih seri numarası cinsinden!menkul kıymetin vade tarihi, tarih seri numarası cinsinden!menkul kıymetin yıllık kupon oranı!menkul kıymetin nominal değeri!kullanılacak gün sayısı türü"
	},
	"AMORDEGRC": {
		"a": "(maliyet; alış_tarihi; ilk_dönem; hurda; dönem; oran; [temel])",
		"d": "Bir malın her hesap dönemi için doğrusal amortisman eşdağılımını döndürür",
		"ad": "malın değeri!malın satın alındığı tarih!ilk dönemin son günü!malın ömrü sonundaki hurda değeri!dönem!amortisman oranı!temel alınacak yıl: 360 gün için 0, gerçek değeri için 1, 365 gün için 3."
	},
	"AMORLINC": {
		"a": "(maliyet; alış_tarihi; ilk_dönem; hurda; dönem; oran; [temel])",
		"d": "Bir malın her hesap dönemi için doğrusal amortisman eşdağılımını döndürür",
		"ad": "malın değeri!malın satın alındığı tarih!ilk dönemin son günü!malın ömrü sonundaki hurda değeri!dönem!amortisman oranı!temel alınacak yıl: 360 gün için 0, gerçek değeri için 1, 365 gün için 3."
	},
	"COUPDAYBS": {
		"a": "(mutabakat; vade; sıklık; [temel])",
		"d": "Kupon döneminin başlangıcından mutabakat tarihine kadar olan gün sayısını döndürür",
		"ad": "menkul kıymetin mutabakat tarihi, tarih seri numarası cinsinden!menkul kıymetin vade tarihi, tarih seri numarası cinsinden!yıllık kupon ödemesi sayısı!kullanılacak gün sayısı türü"
	},
	"COUPDAYS": {
		"a": "(mutabakat; vade; sıklık; [temel])",
		"d": "Mutabakat tarihini içeren kupon dönemindeki gün sayısını döndürür",
		"ad": "menkul kıymetin mutabakat tarihi, tarih seri numarası cinsinden!menkul kıymetin vade tarihi, tarih seri numarası cinsinden!yıllık kupon ödemesi sayısı!kullanılacak gün sayısı türü"
	},
	"COUPDAYSNC": {
		"a": "(mutabakat; vade; sıklık; [temel])",
		"d": "Mutabakat tarihinden bir sonraki kupon tarihine kadar olan gün sayısını döndürür",
		"ad": "menkul kıymetin mutabakat tarihi, tarih seri numarası cinsinden!menkul kıymetin vade tarihi, tarih seri numarası cinsinden!yıllık kupon ödemesi sayısı!kullanılacak gün sayısı türü"
	},
	"COUPNCD": {
		"a": "(mutabakat; vade; sıklık; [temel])",
		"d": "Mutabakat tarihinden sonraki kupon tarihini döndürür",
		"ad": "menkul kıymetin mutabakat tarihi, tarih seri numarası cinsinden!menkul kıymetin vade tarihi, tarih seri numarası cinsinden!yıllık kupon ödemesi sayısı!kullanılacak gün sayısı türü"
	},
	"COUPNUM": {
		"a": "(mutabakat; vade; sıklık; [temel])",
		"d": "Mutabakat ve vade tarihleri arasındaki ödenebilir kupon sayısını döndürür",
		"ad": "menkul kıymetin mutabakat tarihi, tarih seri numarası cinsinden!menkul kıymetin vade tarihi, tarih seri numarası cinsinden!yıllık kupon ödemesi sayısı!kullanılacak gün sayısı türü"
	},
	"COUPPCD": {
		"a": "(mutabakat; vade; sıklık; [temel])",
		"d": "Mutabakat tarihinden önceki kupon tarihini döndürür",
		"ad": "menkul kıymetin mutabakat tarihi, tarih seri numarası cinsinden!menkul kıymetin vade tarihi, tarih seri numarası cinsinden!yıllık kupon ödemesi sayısı!kullanılacak gün sayısı türü"
	},
	"CUMIPMT": {
		"a": "(oran; dönem_sayısı; bd; başlangıç_dönemi; bitiş_dönemi; tür)",
		"d": "İki dönem arasında ödenen bileşik faizi döndürür",
		"ad": "faiz oranı!toplam ödeme dönemi sayısı!bugünkü değer!hesaplamadaki ilk dönem!hesaplamadaki son dönem!ödeme zamanı"
	},
	"CUMPRINC": {
		"a": "(oran; dönem_sayısı; bd; başlangıç_dönemi; bitiş_dönemi; tür)",
		"d": "İki dönem arasında borç için ödenen bileşik anaparayı döndürür",
		"ad": "faiz oranı!ödeme dönemi toplam sayısı!bugünkü değer!hesaplamadaki ilk dönem!hesaplamadaki son dönem!ödeme zamanı"
	},
	"DB": {
		"a": "(maliyet; hurda; ömür; dönem; [ay])",
		"d": "Sabit azalan bakiye yöntemi kullanarak bir varlığın belirtilen dönem içindeki yıpranmasını verir",
		"ad": "varlığın ilk maliyeti!varlığın kullanım ömrü bittikten sonraki hurda değeri!varlığın yıpranma dönemi miktarı (bazen varlığın kullanım ömrü olarak da kullanılır)!yıpranmayı hesaplamak istediğiniz dönem. Ömür ile aynı birimde olmalıdır!ilk yılda bulunan ay sayısı. Ay sayısı boş bırakılırsa 12 olduğu varsayılır"
	},
	"DDB": {
		"a": "(maliyet; hurda; ömür; dönem; [faktör])",
		"d": "Çift azalan bakiye yöntemi veya belirttiğiniz diğer bir yöntemle, bir varlığın belirtilen dönem içindeki yıpranmasını verir",
		"ad": "varlığın ilk maliyeti!varlığın kullanım ömrü bittikten sonraki hurda değeri!varlığın yıpranma dönemi miktarı (bazen varlığın kullanım ömrü olarak da kullanılır)!yıpranmayı hesaplamak istediğiniz dönem. Ömür ile aynı birimde olmalıdır!bakiyenin azalma oranı. Faktör yoksayılırsa, 2 olarak varsayılır (çift azalan bakiye yöntemi)"
	},
	"DISC": {
		"a": "(mutabakat; vade; fiyat; itfa; [temel])",
		"d": "Menkul kıymet için indirim oranını döndürür",
		"ad": "menkul kıymetin mutabakat tarihi, tarih seri numarası cinsinden!menkul kıymetin vade tarihi, tarih seri numarası cinsinden!menkul kıymetin 100 TL nominal değer başına fiyatı!menkul kıymetin 100 TL nominal değer başına itfa değeri!kullanılacak gün sayısı türü"
	},
	"DOLLARDE": {
		"a": "(kesirli_para; payda)",
		"d": "Kesirli olarak gösterilen ücreti ondalık düzene çevirir",
		"ad": "kesir cinsinden gösterilen sayı!kesrin paydasında kullanılacak tamsayı"
	},
	"DOLLARFR": {
		"a": "(ondalık_para; payda)",
		"d": "Ondalık düzende gösterilen ücreti kesir şekline çevirir",
		"ad": "onluk düzende sayı!kesrin paydasında kullanılacak tamsayı"
	},
	"DURATION": {
		"a": "(mutabakat; vade; kupon; getiri; sıklık; [temel])",
		"d": "Dönemsel faiz ödemeli bir menkul kıymet için yıllık süreyi döndürür",
		"ad": "menkul kıymetin mutabakat tarihi, tarih seri numarası cinsinden!menkul kıymetin vade tarihi, tarih seri numarası cinsinden!menkul kıymetin yıllık kupon oranı!menkul kıymetin yıllık getirisi!yıllık kupon ödemesi sayısı!kullanılacak gün sayısı türü"
	},
	"EFFECT": {
		"a": "(nominal_oran; dönem_sayısı)",
		"d": "Etkin bileşik faiz oranını döndürür",
		"ad": "nominal faiz oranı!yıl başına bileşim sayısı"
	},
	"FV": {
		"a": "(oran; dönem_sayısı; dönemsel_ödeme; [bd]; [tür])",
		"d": "Bir yatırımın gelecek değerini, dönemsel sabit ödemeler ve sabit faiz oranı kullanarak hesaplar.",
		"ad": "dönem başına faiz oranı. Örneğin, %6 yıllık faiz oranına karşılık üç aylık ödeme için %6/4 kullanın!yatırımın toplam ödeme dönemi sayısı!her dönem yapılan ödeme miktarı; yatırım süresi boyunca değişemez!bugünkü değer veya gelecekte yapılacak bir dizi ödemenin bugünkü toplam değeri. Atlanırsa, Bd = 0!ödemelerin zamanını gösteren değer: dönem başında = 1; dönem sonunda = 0 ya da atlanmış"
	},
	"FVSCHEDULE": {
		"a": "(anapara; program)",
		"d": "Anaparanın, bir seri bileşik faiz uygulandıktan sonra, gelecekteki değerini verir",
		"ad": "şimdiki değer!uygulanacak faiz oranları serisi"
	},
	"INTRATE": {
		"a": "(mutabakat; vade; yatırım; itfa; [temel])",
		"d": "Tam olarak yatırım yapılan bir menkul kıymetin faiz oranını döndürür",
		"ad": "menkul kıymetin mutabakat tarihi, tarih seri numarası cinsinden!menkul kıymetin vade tarihi, tarih seri numarası cinsinden!menkul kıymete yatırılan miktar!vadesindeki getiri miktarı!kullanılacak gün sayısı türü"
	},
	"IPMT": {
		"a": "(oran; dönem; dönem_sayısı; bd; [gd]; [tür])",
		"d": "Dönemsel sabit ödemeli ve sabit faiz oranlı bir yatırımın verilen dönem için faiz ödemesini verir.",
		"ad": "dönem başına düşen faiz oranı. Örneğin, %6 yıllık faiz oranına karşılık üç aylık ödeme için %6/4 kullanın!faiz tutarını bulmak istediğiniz ve 1 ile dönem_sayısı arasında olması gereken dönem!yatırımın toplam ödeme dönemi sayısı!bugünkü değer veya gelecekte yapılacak bir dizi ödemenin bugünkü değerini gösteren toplam miktar!gelecek değer ya da son ödeme yapıldıktan sonra elde edilmek istenen nakit bakiyesi. Atlanırsa gd = 0!ödeme zamanını gösteren mantıksal değer: dönem başında ödeme = 1; dönem sonunda ödeme = 0 ya da atlanmış"
	},
	"IRR": {
		"a": "(değerler; [tahmin])",
		"d": "Bir dizi nakit akışı için iç verim oranını verir",
		"ad": "iç verim oranını hesaplamak istediğiniz sayıları içeren dizi veya hücreler başvurusu!tahmininiz, İÇ_VERİM_ORANI sonucuna yakın bir sayıdır; Atlanırsa 0,1 (yüzde 10) kabul edilir"
	},
	"ISPMT": {
		"a": "(oran; dönem; dönem_sayısı; bd)",
		"d": "Yatırımın belirli bir döneminde ödenen faizi verir",
		"ad": "dönem başına düşen faiz oranı. Örneğin, %6 yıllık faiz oranına karşılık üç aylık ödeme için %6/4 kullanın!faizini bulmak istediğiniz dönem!yatırımın ödeme dönemi sayısı!gelecekte yapılacak bir dizi ödemenin bugünkü toplam değeri"
	},
	"MDURATION": {
		"a": "(mutabakat; vade; kupon; getiri; sıklık; [temel])",
		"d": "100 TL nominal değerli bir menkul kıymet için Macauley farklılaştırılmış süresini döndürür",
		"ad": "menkul kıymetin mutabakat tarihi, tarih seri numarası cinsinden!menkul kıymetin vade tarihi, tarih seri numarası cinsinden!menkul kıymetin yıllık kupon oranı!menkul kıymetin yıllık getirisi!yıllık kupon ödemesi sayısı!kullanılacak gün sayısı türü"
	},
	"MIRR": {
		"a": "(değerler; finansman_faiz_oranı; tekrar_yatırım_oranı)",
		"d": "Yatırım maliyetini ve nakit paranın tekrar yatırımından elde edilen faizin getirisini dikkate alarak, dönemsel nakit akışları serisi için iç verim oranını verir",
		"ad": "düzenli dönemlerde gerçekleşen bir seri ödeme (negatif) ve geliri (pozitif) temsil eden sayıları içeren hücre başvurusu ya da dizi!nakit akışında kullanılan paraya ödediğiniz faiz oranı!tekrar yatırım yaptığınızda nakit akışı için elde edeceğiniz faiz oranı"
	},
	"NOMINAL": {
		"a": "(etkin_oran; dönem_sayısı)",
		"d": "Yıllık nominal faiz oranını döndürür",
		"ad": "etkin faiz oranı!yıl başına bileşim sayısı"
	},
	"NPER": {
		"a": "(oran; dönemsel_ödeme; bd; [gd]; [tür])",
		"d": "Dönemsel sabit ödemeli ve sabit faizli bir yatırımın dönem sayısını verir",
		"ad": "dönem başına düşen faiz oranı. Örneğin, %6 yıllık faiz oranına karşılık üç aylık ödeme için %6/4 kullanın!her dönem yapılan ödeme miktarı; yatırım süresi boyunca değişemez!bugünkü değer veya gelecekte yapılacak bir dizi ödemenin bugünkü toplam değeri!gelecek değer ya da son ödeme yapıldıktan sonra elde etmek istediğiniz nakit bakiyesi. Atlanırsa sıfır kullanılır!mantıksal değer: dönem başındaki ödemeler = 1; dönem sonundaki ödemeler = 0 ya da atlanmış"
	},
	"NPV": {
		"a": "(oran; değer1; [değer2]; ...)",
		"d": "İndirim oranını, gelecekte yapılacak bir dizi ödemeyi (negatif değerler) ve geliri (pozitif değerler) temel alarak yatırımın bugünkü net değerini verir",
		"ad": "bir dönem başına düşen indirim oranıdır!zamana eşit olarak yayılmış ve her dönemin sonunda gerçekleşen en az 1 en fazla 254 gelir ve ödeme"
	},
	"ODDFPRICE": {
		"a": "(mutabakat; vade; çıkış; ilk_kupon; oran; getiri; itfa; sıklık; [temel])",
		"d": "Tek ilk dönemli bir menkul kıymet için 100 TL nominal değer başına fiyatı döndürür",
		"ad": "menkul kıymetin mutabakat tarihi, tarih seri numarası cinsinden!menkul kıymetin vade tarihi, tarih seri numarası cinsinden!menkul kıymetin çıkış tarihi, tarih seri numarası cinsinden!menkul kıymetin ilk kupon tarihi, tarih seri numarası cinsinden!menkul kıymetin faiz oranı!menkul kıymetin yıllık getirisi!menkul kıymetin 100 TL nominal değer başına itfa değeri!yıllık kupon ödemesi sayısı!kullanılacak gün sayısı türü"
	},
	"ODDFYIELD": {
		"a": "(mutabakat; vade; çıkış; ilk_kupon; oran; fiyat; itfa; sıklık; [temel])",
		"d": "Tek ilk dönemli bir menkul kıymet için getiriyi döndürür",
		"ad": "menkul kıymetin mutabakat tarihi, tarih seri numarası cinsinden!menkul kıymetin vade tarihi, tarih seri numarası cinsinden!menkul kıymetin çıkış tarihi, tarih seri numarası cinsinden!menkul kıymetin ilk kupon tarihi, tarih seri numarası cinsinden!menkul kıymetin faiz oranı!menkul kıymetin fiyatı!menkul kıymetin 100 TL nominal değer başına itfa değeri!yıllık kupon ödemesi sayısı!kullanılacak gün sayısı türü"
	},
	"ODDLPRICE": {
		"a": "(mutabakat; vade; son_faiz; oran; getiri; itfa; sıklık; [temel])",
		"d": "Tek son dönemli bir menkul kıymet için 100 TL nominal değer başına fiyatı döndürür",
		"ad": "menkul kıymetin mutabakat tarihi, tarih seri numarası cinsinden!menkul kıymetin vade tarihi, tarih seri numarası cinsinden!menkul kıymetin son kupon tarihi, tarih seri numarası cinsinden!menkul kıymetin faiz oranı!menkul kıymetin yıllık getirisi!menkul kıymetin 100 TL nominal değer başına itfa değeri!yıllık kupon ödemesi sayısı!kullanılacak gün sayısı türü"
	},
	"ODDLYIELD": {
		"a": "(mutabakat; vade; son_faiz; oran; fiyat; itfa; sıklık; [temel])",
		"d": "Tek son dönemli bir menkul kıymetin getirisini döndürür",
		"ad": "menkul kıymetin mutabakat tarihi, tarih seri numarası cinsinden!menkul kıymetin vade tarihi, tarih seri numarası cinsinden!menkul kıymetin son kupon tarihi, tarih seri numarası cinsinden!menkul kıymetin faiz oranı!menkul kıymetin fiyatı!menkul kıymetin 100 TL nominal değer başına itfa değeri!yıllık kupon ödemesi sayısı!kullanılacak gün sayısı türü"
	},
	"PDURATION": {
		"a": "(oran; bd; gd)",
		"d": "Yatırım tarafından belirtilen bir değere ulaşmak için gereken dönem sayısını döndürür",
		"ad": "dönem başına düşen faiz oranı.!yatırımın bugünkü değeri!yatırımın gelecekteki istenen değeri"
	},
	"PMT": {
		"a": "(oran; dönem_sayısı; bd; [gd]; [tür])",
		"d": "Sabit ödemeli ve sabit faizli bir borç için yapılacak ödemeyi hesaplar",
		"ad": "borç için dönem başına düşen faiz oranı. Örneğin, %6 yıllık faiz oranına karşılık üç aylık ödeme için %6/4 kullanın!borç için toplam ödeme dönemi sayısı!bugünkü değer: gelecekte yapılacak bir dizi ödemenin bugünkü değerini gösteren toplam miktar!gelecek değer ya da son ödeme yapıldıktan sonra elde edilmek istenen nakit bakiyesi, atlanırsa 0 (sıfır)!mantıksal değer: dönem başında ödeme = 1; dönem sonunda ödeme = 0 ya da atlanmış"
	},
	"PPMT": {
		"a": "(oran; dönem; dönem_sayısı; bd; [gd]; [tür])",
		"d": "Dönemsel sabit ödemeli ve sabit faizli bir yatırım için yapılacak anapara ödemesi tutarını verir",
		"ad": "dönem başına düşen faiz oranı. Örneğin, %6 yıllık faiz oranına karşılık üç aylık ödeme için %6/4 kullanın!1 ile dönem_sayısı arasında olması gereken dönemi belirtir!yatırımın toplam ödeme dönemi sayısı!bugünkü değer: gelecekte yapılacak bir dizi ödemenin bugünkü değerini gösteren toplam miktar!gelecek değer ya da son ödeme yapıldıktan sonra elde edilmek istenen nakit bakiyesi!mantıksal değer: dönem başında ödeme = 1; dönem sonunda ödeme = 0 ya da atlanmış"
	},
	"PRICE": {
		"a": "(mutabakat; vade; oran; getiri; itfa; sıklık; [temel])",
		"d": "Dönemsel faiz ödeyen bir menkul kıymet için 100 TL nominal değer başına fiyatı döndürür",
		"ad": "menkul kıymetin mutabakat tarihi, tarih seri numarası cinsinden!menkul kıymetin vade tarihi, tarih seri numarası cinsinden!menkul kıymetin yıllık kupon oranı!menkul kıymetin yıllık getirisi!menkul kıymetin 100 TL nominal değer başına itfa değeri!yıllık kupon ödemesi sayısı!kullanılacak gün sayısı türü"
	},
	"PRICEDISC": {
		"a": "(mutabakat; vade; indirim; itfa; [temel])",
		"d": "İndirimli bir menkul kıymet için 100 TL nominal değer başına fiyatı döndürür",
		"ad": "menkul kıymetin mutabakat tarihi, tarih seri numarası cinsinden!menkul kıymetin vade tarihi, tarih seri numarası cinsinden!menkul kıymetin indirim oranı!menkul kıymetin 100 TL nominal değer başına itfa değeri!kullanılacak gün sayısı türü"
	},
	"PRICEMAT": {
		"a": "(mutabakat; vade; çıkış; oran; getiri; [temel])",
		"d": "Vadesinde faiz ödeyen bir menkul kıymet için 100 TL nominal değer başına fiyatı döndürür",
		"ad": "menkul kıymetin mutabakat tarihi, tarih seri numarası cinsinden!menkul kıymetin vade tarihi, tarih seri numarası cinsinden!menkul kıymetin çıkış tarihi, tarih seri numarası cinsinden!menkul kıymetin çıkış tarihindeki faiz oranı!menkul kıymetin yıllık getirisi!kullanılacak gün sayısı türü"
	},
	"PV": {
		"a": "(oran; dönem_sayısı; dönemsel_ödeme; [gd]; [tür])",
		"d": "Bir yatırımın bugünkü değerini verir: gelecekte yapılacak bir dizi ödemenin bugünkü toplam değeri",
		"ad": "dönem başına faiz oranı. Örneğin, %6 yıllık faiz oranına karşılık üç aylık ödeme için %6/4 kullanın!yatırımın toplam ödeme dönemi sayısı!her dönem yapılan ödeme, yatırım süresi boyunca değişmez!gelecek değer ya da son ödeme yapıldıktan sonra elde edilmek istenen nakit bakiyesi!mantıksal değer: dönem başında ödeme = 1; dönem sonunda ödeme = 0 ya da atlanmış"
	},
	"RATE": {
		"a": "(dönem_sayısı; dönemsel_ödeme; bd; [gd]; [tür]; [tahmin])",
		"d": "Bir borç ya da yatırım için dönem başına faiz oranını verir. Örneğin, %6 yıllık faiz oranına karşılık üç aylık ödeme için %6/4 kullanın",
		"ad": "yatırım ya da borç için toplam ödeme dönemi sayısı!her dönem yapılan ödeme, yatırım ya da borç süresi boyunca değişmez!bugünkü değer: gelecekte yapılacak bir dizi ödemenin bugünkü değerini gösteren toplam miktar!gelecek değer ya da son ödeme yapıldıktan sonra elde edilmek istenen nakit bakiyesi. Atlanırsa, Gd = 0!mantıksal değer: dönem başında ödeme = 1; dönem sonunda ödeme = 0 ya da atlanmış!oran için sizin tahmininiz; atlanırsa, Tahmin = 0,1 (yüzde 10)"
	},
	"RECEIVED": {
		"a": "(mutabakat; vade; yatırım; indirim; [temel])",
		"d": "Tam olarak yatırım yapılan bir menkul kıymetin vadesindeki getiri miktarını döndürür",
		"ad": "menkul kıymetin mutabakat tarihi, tarih seri numarası cinsinden!menkul kıymetin vade tarihi, tarih seri numarası cinsinden!menkul kıymete yatırılan miktar!menkul kıymetin indirim oranı!kullanılacak gün sayısı türü"
	},
	"RRI": {
		"a": "(dönem_sayısı; bd; gd)",
		"d": "Yatırımın büyümesi için eşdeğer bir faiz oranı verir",
		"ad": "yatırım dönemlerinin sayısı!yatırımın bugünkü değeri!yatırımın gelecekteki değeri"
	},
	"SLN": {
		"a": "(maliyet; hurda; ömür)",
		"d": "Bir malın bir dönem için doğrusal yıpranmasını verir",
		"ad": "malın ilk maliyeti!malın kullanım ömrü bittikten sonraki hurda değeri!malın yıpranma dönemi sayısı (bazen malın kullanım ömrü olarak da kullanılır)"
	},
	"SYD": {
		"a": "(maliyet; hurda; ömür; dönem)",
		"d": "Bir malın belirtilen bir dönem için yıpranmasını verir",
		"ad": "malın ilk maliyeti!malın kullanım ömrü bittikten sonraki hurda değeri!malın yıpranma dönemi miktarı (bazen malın kullanım ömrü olarak da kullanılır)!Ömür birimiyle aynı birimde olması gereken dönem"
	},
	"TBILLEQ": {
		"a": "(düzenleme; vade; indirim)",
		"d": "Hazine tahvili için bono eşdeğerini döndürür",
		"ad": "Hazine tahvilinin düzenleme tarihi, tarih seri numarası cinsinden!Hazine tahvilinin vade tarihi, tarih seri numarası cinsinden!Hazine tahvilinin indirim oranı"
	},
	"TBILLPRICE": {
		"a": "(düzenleme; vade; indirim)",
		"d": "Hazine tahvili için 100 TL başına yüz değerini döndürür",
		"ad": "Hazine tahvilinin düzenleme tarihi, tarih seri numarası cinsinden!Hazine tahvilinin vade tarihi, tarih seri numarası cinsinden!Hazine tahvilinin indirim oranı"
	},
	"TBILLYIELD": {
		"a": "(düzenleme; vade; ücret)",
		"d": "Hazine tahvili için getiriyi döndürür",
		"ad": "Hazine tahvilinin düzenleme tarihi, tarih seri numarası cinsinden!Hazine tahvilinin vade tarihi, tarih seri numarası cinsinden!Hazine tahvilinin 100 TL başına yüz değeri fiyatı"
	},
	"VDB": {
		"a": "(maliyet; hurda; ömür; başlangıç_dönemi; son_dönem; [faktör]; [değiştirme])",
		"d": "Çift azalan bakiye yöntemini ya da belirttiğiniz başka bir yöntemi kullanarak, kısmi dönemleri de içeren belirli bir dönem için bir malın amortismanını verir",
		"ad": "malın ilk maliyeti!malın kullanım ömrü bittikten sonraki hurda değeri!malın yıpranma dönemi miktarı (bazen malın kullanım ömrü olarak da kullanılır)!yıpranmayı hesaplamak istediğiniz başlangıç dönemi, Ömür ile aynı birimde!yıpranmayı hesaplamak istediğiniz bitiş dönemi, Ömür ile aynı birimde!bakiyenin azalma oranı, atlanırsa 2 (çift-azalan bakiye)!yıpranma azalan bakiyeden büyük olduğunda doğrusal yıpranmaya geçiş yap = YANLIŞ ya da atlanmış; geçiş yapma = DOĞRU"
	},
	"XIRR": {
		"a": "(değerler; tarihler; [tahmin])",
		"d": "Nakit akışı planı için iç verim oranını döndürür",
		"ad": "tarihlerdeki ödeme planına karşılık gelen nakit akışı serisi!nakit akışı ödemelerine karşılık gelen ödeme tarihleri planı!AİÇVERİMORANI işlevinin sonucuna yakın olarak tahmin edilen sayı"
	},
	"XNPV": {
		"a": "(oran; değerler; tarihler)",
		"d": "Nakit akışı planı için bugünkü net değeri döndürür",
		"ad": "nakit akışına uygulanacak indirim oranı!tarihlerdeki ödeme planına karşılık gelen nakit akışı serisi!nakit akışı ödemelerine karşılık gelen ödeme tarihleri planı"
	},
	"YIELD": {
		"a": "(mutabakat; vade; oran; fiyat; itfa; sıklık; [temel])",
		"d": "Dönemsel faiz ödeyen bir menkul kıymetin getirisini döndürür",
		"ad": "menkul kıymetin mutabakat tarihi, tarih seri numarası cinsinden!menkul kıymetin vade tarihi, tarih seri numarası cinsinden!menkul kıymetin yıllık kupon oranı!menkul kıymetin 100 TL nominal değer başına fiyatı!menkul kıymetin 100 TL nominal değer başına itfa değeri!yıllık kupon ödemesi sayısı!kullanılacak gün sayısı türü"
	},
	"YIELDDISC": {
		"a": "(mutabakat; vade; fiyat; itfa; [temel])",
		"d": "İndirimli bir menkul kıymet için yıllık getiriyi döndürür, örneğin hazine bonosu",
		"ad": "menkul kıymetin mutabakat tarihi, tarih seri numarası cinsinden!menkul kıymetin vade tarihi, tarih seri numarası cinsinden!menkul kıymetin 100 TL nominal değer başına fiyatı!menkul kıymetin 100 TL nominal değer başına itfa değeri!kullanılacak gün sayısı türü"
	},
	"YIELDMAT": {
		"a": "(mutabakat; vade; çıkış; oran; fiyat; [temel])",
		"d": "Vadesinde faiz ödeyen bir menkul kıymet için yıllık getiriyi döndürür",
		"ad": "menkul kıymetin mutabakat tarihi, tarih seri numarası cinsinden!menkul kıymetin vade tarihi, tarih seri numarası cinsinden!menkul kıymetin çıkış tarihi, tarih seri numarası cinsinden!menkul kıymetin çıkış tarihindeki faiz oranı!menkul kıymetin 100 TL nominal değer başına fiyatı!kullanılacak gün sayısı türü"
	},
	"ABS": {
		"a": "(sayı)",
		"d": "Bir sayının mutlak değerini verir, işareti olmayan sayı",
		"ad": "mutlak değerini istediğiniz gerçek sayı"
	},
	"ACOS": {
		"a": "(sayı)",
		"d": "Bir sayının arkkosinüsünü verir, radyan cinsinde ve 0 - Pi aralığındadır. Arkkosinüs, kosinüsü Sayı olan açıdır",
		"ad": "istediğiniz açının kosinüs değeri, -1 ile 1 arasında olmalıdır"
	},
	"ACOSH": {
		"a": "(sayı)",
		"d": "Bir sayının ters hiperbolik kosinüsünü verir",
		"ad": "1 'e eşit veya 1'den büyük herhangi bir gerçek sayı"
	},
	"ACOT": {
		"a": "(sayı)",
		"d": "Bir sayının arkkotanjantını 0 ile Pi aralığındaki radyanlar cinsinden verir.",
		"ad": "istediğiniz açının kotanjantı"
	},
	"ACOTH": {
		"a": "(sayı)",
		"d": "Bir sayının ters hiperbolik kotanjant değerini verir",
		"ad": "istenen açının hiperbolik kotanjantı"
	},
	"AGGREGATE": {
		"a": "(işlev_num; seçenekler; başv1; ...)",
		"d": "Bir liste veya veritabanından bir toplam verir",
		"ad": "toplamı hesaplamak için kullanılan özet işlevini belirten 1-19 arasındaki sayı.!toplama işlevinde yok sayılacak değerleri belirten 0 ile 7 arasındaki sayı!toplamı hesaplanacak sayısal veri dizisi veya aralığı!dizideki konumu gösterir; k. en büyük, k. en küçük, k. yüzdebir veya k. dörttebirdir.!toplamı hesaplamak için kullanılan özet işlevini belirten 1-19 arasındaki sayı.!toplama işlevinde yok sayılacak değerleri belirten 0 ile 7 arasındaki sayı!toplamını almak istediğiniz en az 1 en fazla 253 başvuru veya aralık"
	},
	"ARABIC": {
		"a": "(metin)",
		"d": "Bir Roma rakamını Arap rakamına dönüştürür",
		"ad": "dönüştürmek istediğiniz Roma rakamı"
	},
	"ASC": {
		"a": "(metin)",
		"d": "Çift bayt karakter kümeli (DBCS) dillerde, işlev tam genişlikli (çift bayt) karakterleri yarı genişlikli (tek bayt) karakterlere dönüştürür",
		"ad": "Değiştirmek istediğiniz metin veya değiştirmek istediğiniz metnin bulunduğu hücreye başvurudur."
	},
	"ASIN": {
		"a": "(sayı)",
		"d": "Bir sayının radyan cinsinden -Pi/2 ile Pi/2 aralığındaki arksinüsünü verir",
		"ad": "istediğiniz açının sinüs değeri, -1 ile 1 arasında olmalıdır"
	},
	"ASINH": {
		"a": "(sayı)",
		"d": "Bir sayının ters hiperbolik sinüsünü verir",
		"ad": "1'e eşit veya 1'den büyük herhangi bir gerçek sayı"
	},
	"ATAN": {
		"a": "(sayı)",
		"d": "Bir sayının radyan cinsinden -Pi/2 ile Pi/2 aralığındaki arktanjantını verir",
		"ad": "istediğiniz açının tanjantı"
	},
	"ATAN2": {
		"a": "(x_sayısı; y_sayısı)",
		"d": "Belirtilen x- ve y- koordinatlarının radyan cinsinden -Pi (-Pi hariç) ile Pi arasındaki arktanjantını verir",
		"ad": "noktanın x-koordinatı!noktanın y-koordinatı"
	},
	"ATANH": {
		"a": "(sayı)",
		"d": "Bir sayının ters hiperbolik tanjantını verir",
		"ad": "-1 ve 1 arasında (-1 ve 1 hariç) herhangi bir gerçek sayı"
	},
	"BASE": {
		"a": "(sayı; sayıtabanı; [min_uzunluk])",
		"d": "Bir sayıyı verilen sayı tabanı (temel) ile bir metin gösterimine dönüştürür",
		"ad": "dönüştürmek istediğiniz sayı!sayıyı dönüştürmek istediğiniz temel Sayı Tabanı!döndürülen dizenin minimum uzunluğu. Atlanırsa baştaki sıfırlar eklenmez"
	},
	"CEILING": {
		"a": "(sayı; anlam)",
		"d": "Bir sayıyı, yukarı doğru en yakın anlamlı sayı katına yuvarlar",
		"ad": "yuvarlamak istediğiniz değer!yuvarlamak istediğiniz kat"
	},
	"CEILING.MATH": {
		"a": "(sayı; [anlam]; [mod])",
		"d": "Bir sayıyı, yukarı doğru en yakın tamsayı veya anlamlı sayı katına yuvarlar",
		"ad": "yuvarlamak istediğiniz değer!sayıyı yuvarlamak istediğiniz kat!belirtildiğinde ve sıfır olmadığında bu işlev sıfırdan ıraksayarak yuvarlar"
	},
	"CEILING.PRECISE": {
		"a": "(sayı; [anlam])",
		"d": "En yakın tam sayıya ya da en yakın katına yuvarlanmış sayıyı verir",
		"ad": "yuvarlamak istediğiniz değer!yuvarlamak istediğiniz kat"
	},
	"COMBIN": {
		"a": "(sayı; sayı_seçilen)",
		"d": "Verilen öğelerin sayısı için kombinasyon sayısını verir",
		"ad": "toplam öğe sayısı!her kombinasyonda kullanılan öğe sayısı"
	},
	"COMBINA": {
		"a": "(sayı; sayı_seçilen)",
		"d": "Verilen sayıda öğe için yinelemelerle birleşimlerin sayısını verir",
		"ad": "öğelerin toplam sayısı!her birleşimdeki öğe sayısı"
	},
	"COS": {
		"a": "(sayı)",
		"d": "Bir açının kosinüsünü verir",
		"ad": "kosinüs değerini almak istediğiniz radyan cinsinden açı"
	},
	"COSH": {
		"a": "(sayı)",
		"d": "Bir sayının hiperbolik kosinüsünü verir",
		"ad": "herhangi bir gerçek sayı"
	},
	"COT": {
		"a": "(sayı)",
		"d": "Bir açının kotanjant değerini verir",
		"ad": "kotanjantı istenen radyan cinsinden açı"
	},
	"COTH": {
		"a": "(sayı)",
		"d": "Bir sayının hiperbolik kotanjant değerini verir",
		"ad": "hiperbolik kotanjantı istenen radyan cinsinden açı"
	},
	"CSC": {
		"a": "(sayı)",
		"d": "Bir açının kosekant değerini verir",
		"ad": "kosekantı istenen radyan cinsinden açı"
	},
	"CSCH": {
		"a": "(sayı)",
		"d": "Bir açının hiperbolik kosekant değerini verir",
		"ad": "hiperbolik kosekantı istenen radyan cinsinden açı"
	},
	"DECIMAL": {
		"a": "(sayı; sayıtabanı)",
		"d": "Verilen temeldeki bir sayının metin gösterimini ondalık bir sayıya dönüştürür",
		"ad": "dönüştürmek istediğiniz sayı!dönüştürdüğünüz sayının temel Sayı Tabanı"
	},
	"DEGREES": {
		"a": "(açı)",
		"d": "Radyanı dereceye çevirir",
		"ad": "dönüştürmek istediğiniz radyan cinsinden açı"
	},
	"ECMA.CEILING": {
		"a": "(sayı; anlam)",
		"d": "Bir sayıyı, yukarı doğru en yakın anlamlı sayı katına yuvarlar",
		"ad": "yuvarlamak istediğiniz değer!yuvarlamak istediğiniz kat"
	},
	"EVEN": {
		"a": "(sayı)",
		"d": "Bir sayıyı, mutlak değerce kendinden büyük en yakın çift tamsayıya yuvarlar",
		"ad": "yuvarlanacak değer"
	},
	"EXP": {
		"a": "(sayı)",
		"d": "Verilen bir sayının üssünün e sayısının üssü olarak kullanılması ile oluşan sonucu verir",
		"ad": "e tabanına uygulanan üs. Doğal logaritmanın temeli olan e sabiti 2,71828182845904 değerine eşittir"
	},
	"FACT": {
		"a": "(sayı)",
		"d": "Bir sayının 1*2*3*...*Sayı şeklinde çarpınımını verir",
		"ad": "çarpınımını almak istediğiniz negatif olmayan sayı"
	},
	"FACTDOUBLE": {
		"a": "(sayı)",
		"d": "Verilen bir sayıdan bire kadar ikişer ikişer azalarak oluşan sayıların çarpımını döndürür.",
		"ad": "işlevin uygulanacağı sayı"
	},
	"FLOOR": {
		"a": "(sayı; anlam)",
		"d": "Bir sayıyı, anlamlı en yakın katına, aşağı doğru yuvarlar",
		"ad": "yuvarlamak istediğiniz sayısal değer!yuvarlamak istediğiniz kat. Sayı ve Anlamın her ikisi de negatif ya da her ikisi de pozitif olmalıdır"
	},
	"FLOOR.PRECISE": {
		"a": "(sayı; [anlam])",
		"d": "En yakın sayıya veya en yakın anlam katına aşağı yuvarlanmış bir sayı verir",
		"ad": "yuvarlamak istediğiniz değer!yuvarlamak istediğiniz kat"
	},
	"FLOOR.MATH": {
		"a": "(sayı; [anlam]; [mod])",
		"d": "Bir sayıyı, aşağı doğru en yakın tamsayı veya anlamlı sayı katına yuvarlar",
		"ad": "yuvarlamak istediğiniz değer!yuvarlamak istediğiniz kat!verilen ve sıfır olmayan bu işlev sıfıra doğru yuvarlanır"
	},
	"GCD": {
		"a": "(sayı1; [sayı2]; ...)",
		"d": "En büyük ortak böleni döndürür",
		"ad": "En az 1 en çok 255 değer"
	},
	"INT": {
		"a": "(sayı)",
		"d": "Bir sayıyı, sıfırdan ıraksayarak en yakın tam sayıya yuvarlar",
		"ad": "bir tam sayıya aşağıya yuvarlamak istediğiniz gerçek sayı"
	},
	"ISO.CEILING": {
		"a": "(sayı; [anlam])",
		"d": "En yakın tam sayıya ya da en yakın katına yuvarlanmış sayıyı verir. Sayının işareti dikkate alınmadan sayı yuvarlanır. Ancak, sayı veya anlam sıfırsa, sıfır verilir.",
		"ad": "yuvarlamak istediğiniz değer!yuvarlamak istediğiniz kat"
	},
	"LCM": {
		"a": "(sayı1; [sayı2]; ...)",
		"d": "En küçük ortak çarpanı döndürür",
		"ad": "en küçük ortak çarpanını istediğiniz en az 1 en çok 255 değer"
	},
	"LN": {
		"a": "(sayı)",
		"d": "Bir sayının doğal logaritmasını verir",
		"ad": "doğal logaritmasını almak istediğiniz pozitif gerçek sayı"
	},
	"LOG": {
		"a": "(sayı; [taban])",
		"d": "Bir sayının belirttiğiniz tabandaki logaritmasını alır",
		"ad": "logaritmasını almak istediğiniz pozitif gerçek sayı!logaritma tabanı; atlanırsa 10"
	},
	"LOG10": {
		"a": "(sayı)",
		"d": "Bir sayının 10 tabanında logaritmasını verir",
		"ad": "10 tabanında logaritmasını almak istediğiniz pozitif gerçek sayı"
	},
	"MDETERM": {
		"a": "(dizi)",
		"d": "Bir dizinin determinantını verir",
		"ad": "eşit sayıda satır ve sütuna sahip olan sayısal dizi, ya da bir hücre aralığı veya bir dizi sabiti"
	},
	"MINVERSE": {
		"a": "(dizi)",
		"d": "Bir dizide saklanan bir dizeyin tersini verir",
		"ad": "eşit sayıda satır ve sütuna sahip olan sayısal dizi, ya da bir hücre aralığı veya bir dizi sabiti"
	},
	"MMULT": {
		"a": "(dizi1; dizi2)",
		"d": "İki dizinin dizey çarpımını verir, sonuç, dizi1 ile aynı sayıda satıra ve dizi2 ile aynı sayıda sütuna sahip olan bir dizidir",
		"ad": "çarpmak istediğiniz sayılar dizisidir ve sütun sayısı Dizi2'nin satır sayısıyla aynı olmalıdır"
	},
	"MOD": {
		"a": "(sayı; bölen)",
		"d": "Bir sayının bir bölen tarafından bölünmesinden sonra kalanı verir",
		"ad": "bölme işlemi sonucunda kalanını bulmak istediğiniz sayıdır!Sayıyı bölen sayı"
	},
	"MROUND": {
		"a": "(sayı; katsayı)",
		"d": "İstenen katsayıya yuvarlanmış bir sayı döndürür",
		"ad": "yuvarlanacak değer!sayıyı yuvarlamak istediğiniz katsayı"
	},
	"MULTINOMIAL": {
		"a": "(sayı1; [sayı2]; ...)",
		"d": "Bir sayı kümesinin çok terimli değerini döndürür",
		"ad": "çok terimli değerini istediğiniz en az 1 en çok 255 değer"
	},
	"MUNIT": {
		"a": "(boyut)",
		"d": "Belirtilen boyut için birim matris döndürür",
		"ad": "döndürmek istediğiniz birim matrisin boyutunu belirten tamsayı"
	},
	"ODD": {
		"a": "(sayı)",
		"d": "Bir sayıyı, mutlak değerce kendinden büyük en yakın tek tamsayıya yuvarlar",
		"ad": "yuvarlanacak değer"
	},
	"PI": {
		"a": "()",
		"d": "Pi değerini verir, 15 rakama kadar yuvarlanmış hali 3,14159265358979'dur",
		"ad": ""
	},
	"POWER": {
		"a": "(sayı; üs)",
		"d": "Üssü alınmış sayının sonucunu verir",
		"ad": "taban sayısı, herhangi bir gerçek sayı!belirli bir tabanda olan sayının üssü"
	},
	"PRODUCT": {
		"a": "(sayı1; [sayı2]; ...)",
		"d": "Bağımsız değişken olarak verilen tüm sayıları çarpar",
		"ad": "çarpımını bulmak istediğiniz en az 1 en fazla 255 sayı, mantıksal değer ya da sayıları temsil eden metindir"
	},
	"QUOTIENT": {
		"a": "(pay; payda)",
		"d": "Bir bölmenin tamsayı kısmını döndürür",
		"ad": "bölünen!bölen"
	},
	"RADIANS": {
		"a": "(açı)",
		"d": "Dereceyi radyana dönüştürür",
		"ad": "dönüştürmek istediğiniz derece cinsinden açı"
	},
	"RAND": {
		"a": "()",
		"d": "0 ya da 0'dan büyük ve 1'den küçük bir sayıyı eşit dağılımla rastgele verir (yeniden hesaplama sonucunda değişir)",
		"ad": ""
	},
	"RANDARRAY": {
		"a": "([satırlar]; [sütunlar]; [min]; [maks]; [tamsayı])",
		"d": "Bir rastgele sayı dizisini döndürür",
		"ad": "döndürülen dizideki satır sayısı!döndürülen dizideki sütun sayısı!döndürmek istediğiniz en küçük sayı!döndürmek istediğiniz en büyük sayı!bir tamsayı veya ondalık değer döndürür. Tamsayı için DOĞRU, ondalık sayı için YANLIŞ"
	},
	"RANDBETWEEN": {
		"a": "(alt; üst)",
		"d": "Belirttiğiniz sayılar arasında rastgele bir sayı döndürür",
		"ad": "RASTGELEARADA işlevinin döndüreceği en küçük tamsayı!RASTGELEARADA işlevinin döndüreceği en büyük tamsayı"
	},
	"ROMAN": {
		"a": "(sayı; [form])",
		"d": "Arap rakamlarını metin biçimiyle romen rakamlarına dönüştürür",
		"ad": "dönüştürmek istediğiniz sayı!hangi tür romen sayısı istediğinizi belirten sayı."
	},
	"ROUND": {
		"a": "(sayı; sayı_rakamlar)",
		"d": "Sayıyı belirli sayıdaki rakama yuvarlar",
		"ad": "yuvarlamak istediğiniz sayı!sayıyı yuvarlamak istediğiniz rakam sayısı. Negatif, ondalık noktasının soluna; sıfır ise en yakın tamsayıya yuvarlanır"
	},
	"ROUNDDOWN": {
		"a": "(sayı; sayı_rakamlar)",
		"d": "Bir sayıyı sıfıra yakınsayarak yuvarlar",
		"ad": "aşağı yuvarlamak istediğiniz herhangi bir gerçek sayı!sayıyı yuvarlamak istediğiniz rakam sayısı. Negatif sayılar ondalık noktasının soluna; sıfır ya da atlanmış olanlar ise en yakın tamsayıya yuvarlanır"
	},
	"ROUNDUP": {
		"a": "(sayı; sayı_rakamlar)",
		"d": "Bir sayıyı sıfırdan ıraksayarak yukarı yuvarlar",
		"ad": "yukarı yuvarlamak istediğiniz herhangi bir gerçek sayı!sayıyı yuvarlamak istediğiniz rakam sayısı. Negatif sayılar ondalık noktasının soluna; sıfır ya da atlanmış olanlar ise en yakın tamsayıya yuvarlanır"
	},
	"SEC": {
		"a": "(sayı)",
		"d": "Bir açının sekant değerini verir",
		"ad": "sekantı istenen radyan cinsinden açı"
	},
	"SECH": {
		"a": "(sayı)",
		"d": "Bir açının hiperbolik sekant değerini verir",
		"ad": "hiperbolik sekantı istenen radyan cinsinden açı"
	},
	"SERIESSUM": {
		"a": "(x; n; m; katsayılar)",
		"d": "Formüle dayalı olan kuvvet serisinin toplamını döndürür",
		"ad": "kuvvet serisi için giriş değeri!x'in yükseltileceği ilk kuvvet!serideki her öğe için n'nin artırma oranı!x'in ardıl kuvvetlerinin çarpıldığı katsayılar kümesi"
	},
	"SIGN": {
		"a": "(sayı)",
		"d": "Bir sayının işaretini verir: sayı pozitif ise 1, sıfır ise sıfır, negatif ise -1",
		"ad": "herhangi bir gerçek sayı"
	},
	"SIN": {
		"a": "(sayı)",
		"d": "Bir açının sinüsünü verir",
		"ad": "sinüsünü almak istediğiniz radyan cinsinden açı. * PI()/180 derece = radyan"
	},
	"SINH": {
		"a": "(sayı)",
		"d": "Bir sayının hiperbolik sinüsünü verir",
		"ad": "herhangi bir gerçek sayı"
	},
	"SQRT": {
		"a": "(sayı)",
		"d": "Bir sayının karekökünü verir",
		"ad": "karekökünü almak istediğiniz sayı"
	},
	"SQRTPI": {
		"a": "(sayı)",
		"d": "Sayının Pi sayısıyla çarpımının karekökünü döndürür",
		"ad": "pi sayısıyla çarpılacak sayı"
	},
	"SUBTOTAL": {
		"a": "(işlev_sayısı; başv1; ...)",
		"d": "Bir liste veya veritabanından bir alt toplam verir",
		"ad": "alt toplamı hesaplamak için kullanılan özet işlevini belirten 1-11 arasındaki sayı.!alt toplamını almak istediğiniz en az 1 en fazla 254 başvuru veya aralıktır"
	},
	"SUM": {
		"a": "(sayı1; [sayı2]; ...)",
		"d": "Bir hücre aralığındaki tüm sayıları toplar",
		"ad": "toplanacak en az 1 en fazla 255 sayıdır. Mantıksal değerler ve metin, hücrelerde yoksayılır, ancak bağımsız değişken olarak girilmişlerse eklenirler"
	},
	"SUMIF": {
		"a": "(aralık; ölçüt; [toplam_aralığı])",
		"d": "Verilen bir koşul ya da ölçüt tarafından belirtilen hücreleri toplar",
		"ad": "hesaplamak istediğiniz hücreler aralığı!hangi hücrelerin toplanacağını tanımlayan sayı, ifade ya da metin formundaki ölçüt veya koşul!toplanacak gerçek hücreler. Atlanırsa, aralıktaki hücreler kullanılır"
	},
	"SUMIFS": {
		"a": "(aralık_toplamı; ölçüt_aralığı; ölçüt; ...)",
		"d": "Verili bir koşul veya ölçüt kümesi tarafından belirtilen hücreleri toplar",
		"ad": "toplanacak asıl hücreler.!belirli bir koşula göre hesaplanmasını istediğiniz hücre aralığı!toplamı alınacak hücreleri tanımlayan, sayı, ifade veya metin biçimindeki koşul veya ölçüt"
	},
	"SUMPRODUCT": {
		"a": "(dizi1; [dizi2]; [dizi3]; ...)",
		"d": "Verilen aralık ya da dizilerde birbirine karşılık gelen sayısal bileşenleri çarpar ve bu çarpımların toplamını verir",
		"ad": "Bileşenlerini önce çarpıp sonra toplamak istediğiniz en az 2 en fazla 255 dizidir. Tüm diziler aynı boyutlara sahip olmalıdır"
	},
	"SUMSQ": {
		"a": "(sayı1; [sayı2]; ...)",
		"d": "Bağımsız değişkenlerin karelerinin toplamını verir. Bağımsız değişkenler sayı, ad, dizi, ya da sayı içeren hücre başvuruları olabilir",
		"ad": "kareler toplamını bulmak istediğiniz en az 1 en fazla 255 sayı, ad, dizi ya da dizi başvurusudur"
	},
	"SUMX2MY2": {
		"a": "(dizi_x; dizi_y)",
		"d": "Birbirine karşılık gelen iki aralık ya da dizideki sayıların kareleri arasındaki farkı hesaplar ve sonra da bu farkların toplamını verir",
		"ad": "ilk sayı dizisi ya da aralığıdır ve sayı, ad, dizi, ya da sayı içeren başvurular olabilir!ikinci sayı aralığı veya dizisidir ve sayı, ad, dizi, ya da sayı içeren başvuru olabilir"
	},
	"SUMX2PY2": {
		"a": "(dizi_x; dizi_y)",
		"d": "Birbirine karşılık gelen iki aralık ya da dizideki sayıların karelerinin toplamlarını hesaplar ve sonra da bu toplamların toplamını verir",
		"ad": "ilk sayı dizisi ya da aralığıdır ve sayı, ad, dizi, ya da sayı içeren başvurular olabilir!ikinci sayı aralığı veya dizisidir ve sayı, ad, dizi, ya da sayı içeren başvuru olabilir"
	},
	"SUMXMY2": {
		"a": "(dizi_x; dizi_y)",
		"d": "Birbirine karşılık gelen iki aralık ya da dizideki değerlerin farklarını hesaplar ve sonra da bu farkların kareleri toplamını verir",
		"ad": "ilk değerler aralığı ya da dizisidir ve sayı, ad, dizi, ya da sayı içeren başvuru olabilir!ikinci değerler aralığı ya da dizisidir ve sayı, ad, dizi, ya da sayı içeren başvuru olabilir"
	},
	"TAN": {
		"a": "(sayı)",
		"d": "Bir sayının tanjantını verir",
		"ad": "tanjantını almak istediğiniz radyan cinsinden olan açı. * PI()/180 derece = radyan"
	},
	"TANH": {
		"a": "(sayı)",
		"d": "Bir sayının hiperbolik tanjantını verir",
		"ad": "herhangi bir gerçek sayı"
	},
	"TRUNC": {
		"a": "(sayı; [sayı_rakamlar])",
		"d": "Bir sayıyı ondalık ya da kesir kısmını kaldırarak bir tamsayıya yuvarlar",
		"ad": "yuvarlamak istediğiniz sayı!yuvarlamanın duyarlılığını belirten sayı, atlanırsa 0 (sıfır) kullanılır"
	},
	"ADDRESS": {
		"a": "(satır_num; sütun_num; [mutlak_num]; [a1]; [sayfa_metni])",
		"d": "Bir hücre başvurusunu, belirtilen satır ve sütun numaraları verilmiş halde metin olarak oluşturur",
		"ad": "hücre başvurusunda kullanılacak satır numarası: satır 1 için, Satır_num = 1 !hücre başvurusunda kullanılacak sütun numarası. Örneğin, D sütunu için Sütun_num = 4!başvuru türünü belirtir: mutlak = 1; mutlak satır/göreceli sütun = 2; göreceli satır/mutlak sütun = 3; göreceli = 4!başvuru stilini belirten mantıksal değer: A1 stili = 1 ya da DOĞRU; R1C1 stili = 0 ya da YANLIŞ!dış başvuru olarak kullanılacak çalışma sayfasının adını belirten metin"
	},
	"CHOOSE": {
		"a": "(dizin_sayısı; değer1; [değer2]; ...)",
		"d": "Bir dizin numarasını temel alan bir değerler listesinden gerçekleştirmek üzere bir değer ya da eylem seçer",
		"ad": "hangi değer bağımsız değişkeninin seçildiğini belirtir. Dizin_num 1 ile 254 arasında, bir formül ya da 1 ile 254 arasındaki bir sayıya başvuru olmalıdır!ELEMAN ile seçilen en az 1 en çok 254 sayı, hücre başvurusu, tanımlanmış ad, formül, işlev ya da metin biçiminde bağımsız değer olabilir"
	},
	"COLUMN": {
		"a": "([başvuru])",
		"d": "Başvurunun sütun sayısını verir",
		"ad": "sütun sayısını öğrenmek istediğiniz hücre veya bitişik hücreler aralığı. Atlanırsa, SÜTUN işlevini içeren hücre kullanılır"
	},
	"COLUMNS": {
		"a": "(dizi)",
		"d": "Bir dizideki ya da başvurudaki sütun sayısını verir",
		"ad": "sütun sayısını öğrenmek için kullanılan dizi, dizi formülü ya da bir hücre aralığı başvurusu"
	},
	"FORMULATEXT": {
		"a": "(başvuru)",
		"d": "Formülü bir dize olarak verir",
		"ad": "bir formül başvurusu"
	},
	"HLOOKUP": {
		"a": "(aranan_değer; tablo_dizisi; satır_indis_sayısı; [aralık_bak])",
		"d": "Tablonun üst satırındaki değeri ya da değerler dizisini arar ve aynı sütunda belirtilen satırdan değeri verir",
		"ad": "tablonun ilk satırında bulunması gereken değerdir ve bir değer, başvuru veya metin olabilir!verinin arandığı metin tablosu, sayılar ya da mantıksal değerlerdir. Tablo_dizisi bir aralığa ya da bir aralık adına yapılan bir başvuru olabilir!eşleşen değerin geleceği tablo_dizisi'nde bulunan satır sayısı. Tablodaki ilk veri satırı satır 1'dir!mantıksal değer: üst satırdaki (artan sırada sıralanmış) en yakın eşleşmeyi bulmak için = DOĞRU ya da atlanmış; tam eşleşmeyi bulmak için = YANLIŞ"
	},
	"HYPERLINK": {
		"a": "(bağ_konumu; [yakın_ad])",
		"d": "Sabit sürücü, sunucu ağı ya da İnternet'te depolanmış olan bir belgeyi açmak için kısayol ya da atlama oluşturur",
		"ad": "açılması istenen belgeye giden yolu ve dosya adını veren metindir, bir sabit sürücü konumu, UNC adresi, ya da URL yolu!hücrede görüntülenen metin ya da sayıdır. Atlandığında, hücre bağ_konumu metnini görüntüler"
	},
	"INDEX": {
		"a": "(dizi; satır_sayısı; [sütun_sayısı]!başv; satır_sayısı; [sütun_sayısı]; [alan_sayısı])",
		"d": "Bir tablo ya da aralıktan bir değer ya da değere yapılan başvuruyu verir",
		"ad": "bir hücreler aralığı ya da dizi sabiti.!dizi ya da Başvuru'da, almak istediğiniz değeri veren satırı seçer. Atlanırsa, Süt_num gerekir!dizi ya da Başvuru'da, almak istediğiniz değeri veren sütunu seçer. Atlanırsa, Sat_num gerekir!bir veya daha fazla hücre aralığı başvurusu!dizi ya da Başvuru'da, almak istediğiniz değeri veren satırı seçer. Atlanırsa, Süt_num gerekir!dizi ya da Başvuru'da, almak istediğiniz değeri veren sütunu seçer. Atlanırsa, Sat_num gerekir!başvuru'da almak istediğiniz değeri veren aralığı seçer. Seçilen ya da girilen ilk alan alan 1, ikincisi alan 2, ve bu şekilde devam eder"
	},
	"INDIRECT": {
		"a": "(başv_metni; [a1])",
		"d": "Bir metin dizesiyle belirtilmiş başvuruyu verir",
		"ad": "A1 ya da R1C1-stili başvurusu içeren hücre başvurusu, başvuru olarak tanımlanmış bir ad ya da metin dizesi halindeki bir hücre başvurusu!Başv_metni'nde geçen başvuru türünü belirten mantıksal değer: R1C1-stili = YANLIŞ; A1-stili = DOĞRU ya da atlanmış"
	},
	"LOOKUP": {
		"a": "(aranan_değer; aranan_vektör; [sonuç_vektör]!aranan_değer; dizi)",
		"d": "Tek-satırlı ya da tek-sütunlu bir aralıktan ya da bir diziden bir değer verir. Geriye dönük uyumluluk için sağlanmıştır",
		"ad": "ARA'nın ara_vektörü içerisinde arayacağı değerdir ve bir sayı, metin, mantıksal değer, ya da bir değer adı veya bir değer başvurusu olabilir!sadece bir satır veya sütundan oluşan ve artan sıraya yerleştirilmiş olan metin, sayı ya da mantıksal değerler içeren aralık!sadece bir satır veya sütun içeren aralıktır, Ara_vektörü ile aynı boyuttadır!ARA'nın bir Dizi içerisinde arayacağı değerdir ve bir sayı, metin, mantıksal değer, ya da bir değer adı veya bir değer başvurusu olabilir!Aranan_değer'le karşılaştırmak istediğiniz metin,sayı veya mantıksal değer içeren hücreler aralığı"
	},
	"MATCH": {
		"a": "(aranan_değer; aranan_dizi; [eşleştir_tür])",
		"d": "Belirli bir sırada belirtilen değerle eşleşen bir öğenin bir dizi içerisindeki göreceli konumunu verir",
		"ad": "dizi içerisinde aradığınız değeri bulmak için kullandığınız değer, sayı, metin, mantıksal değer ya da bunlardan birine yapılan başvuru!aranan değerleri içeren ardışık hücreler aralığı, değerler dizisi ya da dizi başvurusu!gelen değeri işaret eden 1, 0 ya da -1 sayısı."
	},
	"OFFSET": {
		"a": "(başv; satırlar; sütunlar; [yükseklik]; [genişlik])",
		"d": "Bir hücre ya da hücreler aralığında belirtilen satır ve sütun sayısına karşılık gelen bir aralığa yapılan başvuruyu verir",
		"ad": "göreceli konuma temel oluşturmak istediğiniz başvuru, bir hücreye ya da bitişik hücreler aralığına yapılan başvuru!sonucun sol üst hücresinin gösterdiği satır sayısı, aşağı veya yukarı!sonucun sol-üst hücresinin gösterdiği sütun sayısı, sola veya sağa!sonucun sahip olmasını istediğiniz yüksekliği (satır sayısı olarak), atlanırsa Başvurunun yüksekliğiyle aynı kabul edilir!sonucun sahip olmasını istediğiniz genişliği (sütun sayısı olarak), atlanırsa Başvurunun genişliğiyle aynı kabul edilir"
	},
	"ROW": {
		"a": "([başvuru])",
		"d": "Bir başvurunun satır numarasını verir",
		"ad": "satır numarasını öğrenmek istediğiniz hücre veya tek bir hücreler aralığı; atlanırsa, SATIR işlevini içeren hücreyi verir"
	},
	"ROWS": {
		"a": "(dizi)",
		"d": "Bir başvuru ya da dizideki satır sayısını verir",
		"ad": "satır sayısını öğrenmek istediğiniz hücreler için bir başvuru, dizi veya dizi formülü"
	},
	"TRANSPOSE": {
		"a": "(dizi)",
		"d": "Düşey bir hücreler aralığını yatay bir aralık olarak verir, ya da tam tersi",
		"ad": "devriğini almak istediğiniz çalışma sayfasında bulunan bir hücreler aralığı ya da değerler dizisi"
	},
	"UNIQUE": {
		"a": "(dizi; [by_col]; [exactly_once])",
		"d": " Bir Aralık veya dizideki benzersiz değerleri döndürür.",
		"ad": " benzersiz satır veya sütun döndürmek için kullanılacak aralık veya dizi! mantıksal değer: satırları birbiriyle karşılaştırın ve benzersiz satırları döndürün = YANLIŞ ya da atlanmış; sütunları birbiriyle karşılaştırın ve benzersiz sütunları döndürün = TRUE! mantıksal değer: dizi = TRUE olduğunda tam olarak bir kez oluşan satırları veya sütunları döndürün; dizideki tüm belirgin satır veya sütunları döndürün = YANLIŞ ya da atlanmış"
	},
	"VLOOKUP": {
		"a": "(aranan_değer; tablo_dizisi; sütun_indis_sayısı; [aralık_bak])",
		"d": "Bir tablonun en sol sütunundaki bir değeri arar ve daha sonra aynı satırda belirttiğiniz sütundan bir değer verir. Varsayılan olarak tablo artan sırada sıralanmalıdır",
		"ad": "tablonun ilk sütununda bulunacak değerdir ve bir değer, bir başvuru ya da bir metin dizesi olabilir!verinin alınacağı bir metin, sayılar ya da mantıksal değerler tablosu. Tablo_dizisi bir aralığa ya da aralık adına yapılan başvuru olabilir!uyuşan değerin verileceği tablo_dizisi'ndeki sütun sayısı. Tablodaki ilk değer sütunu sütun1'dir!mantıksal değer: ilk sütundaki (artan sırada sıralanmış) en yakın eşleştirmeyi bulmak için = DOĞRU ya da atlanmış; tam bir eşleştirme bulmak için = YANLIŞ"
	},
	"XLOOKUP": {
		"a": "(arama_değeri; arama_dizisi; döndürülen_dizi; [bulunamıyorsa]; [eşleştirme_modu]; [arama_modu])",
		"d": "Eşleştirme bulmak için bir aralıkta veya dizide arama yapar ve ilgili öğeyi ikinci bir aralıkta ya da dizide döndürür. Varsayılan olarak tam eşleşme kullanılır",
		"ad": "aranacak değer!arama yapılacak dizi veya aralık!döndürülecek dizi veya aralık!eşleşme bulunamıyorsa döndürülür!arama_değeri'ni, arama_dizisi'ndeki değerlerle eşleştirme biçimini belirtin!kullanılacak arama modunu belirtin. Varsayılan olarak baştan sona doğru arama kullanılır"
	},
	"CELL": {
		"a": "(bilgi_türü; [başvuru])",
		"d": "Hücrenin biçimlendirmesi, konumu ve içeriği hakkındaki bilgileri verir",
        "ad": "hangi türde hücre bilgisi vermek istediğinizi belirten metin değeri!hakkında bilgi almak istediğiniz hücre"
	},
	"ERROR.TYPE": {
		"a": "(hata_değer)",
		"d": "Bir hata değerine karşılık gelen bir sayı verir.",
		"ad": "tanımlayıcı numarasını bulmak istediğiniz hata değeridir ve gerçek bir hata değeri ya da bir hata değeri içeren bir hücreye yapılan başvuru olabilir"
	},
	"ISBLANK": {
		"a": "(değer)",
		"d": "Değer boş bir hücreye başvuruda bulunuyorsa DOĞRU verir",
		"ad": "sınamak istediğiniz hücre, ya da hücreye başvuran ad"
	},
	"ISERR": {
		"a": "(değer)",
		"d": "Değerin #YOK dışında bir hata olup olmadığını denetler ve DOĞRU ya da YANLIŞ döndürür",
		"ad": "sınamak istediğiniz değer. Bu değer, bir hücreye, bir formüle ya da br hücre, formül veya değere başvuran bir ada başvuruda bulunabilir"
	},
	"ISERROR": {
		"a": "(değer)",
		"d": "Değerin bir hata olup olmadığını denetler ve DOĞRU ya da YANLIŞ döndürür",
		"ad": "sınamak istediğiniz değer. Bu değer, bir hücreye, bir formüle ya da bir hücre, formül veya değere başvuran bir ada başvuruda bulunabilir"
	},
	"ISEVEN": {
		"a": "(sayı)",
		"d": "Sayı bir çift sayı ise DOĞRU döndürür",
		"ad": "sınanacak sayı"
	},
	"ISFORMULA": {
		"a": "(başvuru)",
		"d": "Başvurunun formül içeren bir hücreye yapılıp yapılmadığını denetler ve DOĞRU ya da YANLIŞ değerini döndürür",
		"ad": "sınamak istediğiniz hücreye yapılan başvuru.  Başvuru bir hücre başvurusu, bir formül ya da hücreye başvuran bir ad olabilir"
	},
	"ISLOGICAL": {
		"a": "(değer)",
		"d": "Bir değerin mantıksal bir değer (DOĞRU veya YANLIŞ) olup olmadığını denetler ve DOĞRU veya YANLIŞ değerini döndürür",
		"ad": "sınamak istediğiniz değer. Bu değer, bir hücreye, bir formüle ya bunlara veya bir değere başvuran bir ada başvuruda bulunabilir"
	},
	"ISNA": {
		"a": "(değer)",
		"d": "Değerin #YOK olup olmadığını denetler ve DOĞRU ya da YANLIŞ verir",
		"ad": "sınamak istediğiniz değer. Bu değer, bir hücreye, bir formüle ya bunlara veya bir değere başvuran bir ada başvuruda bulunabilir"
	},
	"ISNONTEXT": {
		"a": "(değer)",
		"d": "Bir değerin metin olup olmadığını denetler (boş hücreler metin değildir) ve metin değilse DOĞRU, metinse YANLIŞ döndürür",
		"ad": "sınamak istediğiniz değer: bir hücre; bir formül; ya da bir hücreye, formüle veya değere başvuran bir ad"
	},
	"ISNUMBER": {
		"a": "(değer)",
		"d": "Bir değerin sayı olup olmadığını denetler ve sayıysa DOĞRU, değilse YANLIŞ döndürür",
		"ad": "sınamak istediğiniz değer. Bu değer, bir hücreye, bir formüle ya da bunlara veya bir değere başvuran bir ada başvuruda bulunabilir"
	},
	"ISODD": {
		"a": "(sayı)",
		"d": "Sayı bir tek sayı ise DOĞRU döndürür",
		"ad": "sınanacak sayı"
	},
	"ISREF": {
		"a": "(değer)",
		"d": "Bir değerin başvuru olup olmadığını denetler ve başvuruysa DOĞRU, değilse YANLIŞ döndürür",
		"ad": "sınamak istediğiniz değer. Bu değer, bir hücreye, bir formüle ya da bunlara veya bir değere başvuran bir ada başvuruda bulunabilir"
	},
	"ISTEXT": {
		"a": "(değer)",
		"d": "Bir değerin metin olup olmadığını denetler ve metinse DOĞRU, metin değilse YANLIŞ döndürür",
		"ad": "sınamak istediğiniz değer. Bu değer, bir hücreye, bir formüle ya da bunlara veya bir değere başvuran bir ada başvuruda bulunabilir"
	},
	"N": {
		"a": "(değer)",
		"d": "Bir sayıya dönüştürülmüş değeri verir. Sayılar sayılara, tarihler seri numaralarına, DOĞRU 1'e, bunların dışındaki şeyler de 0 (sıfır)'a dönüştürülür",
		"ad": "dönüştürmek istediğiniz değer"
	},
	"NA": {
		"a": "()",
		"d": "#YOK hata değerini verir (kullanılabilir değer yok)",
		"ad": ""
	},
	"SHEET": {
		"a": "([değer])",
		"d": "Başvurulan sayfanın sayfa numarasını döndürür",
		"ad": "sayfa numarasını bulmak istediğiniz bir sayfanın veya başvurunun adı.  Atlanırsa, fonksiyonu içeren sayfa numarası döndürülür"
	},
	"SHEETS": {
		"a": "([başvuru])",
		"d": "Bir başvurudaki sayfa sayısını döndürür",
		"ad": "içerdiği sayfa sayısını bilmek istediğiniz başvuru.  Atlanırsa, fonksiyonu içeren çalışma kitabındaki sayfa sayısı döndürülür"
	},
	"TYPE": {
		"a": "(değer)",
		"d": "Değerin veri türünü gösteren sayıyı verir: sayı = 1; metin = 2; mantıksal değer = 4; hata değeri = 16; dizi = 64; birleşik veri = 128",
		"ad": "herhangi bir değer olabilir"
	},
	"AND": {
		"a": "(mantıksal1; [mantıksal2]; ...)",
		"d": "Tüm bağımsız değişkenlerin DOĞRU olup olmadığını denetler, tümü DOĞRU ise DOĞRU döndürür",
		"ad": "DOĞRU veya YANLIŞ olduğunu sınamak istediğiniz en az 1 en fazla 255 koşuldur ve her biri mantıksal değer, dizi ya da başvuru olabilir"
	},
	"FALSE": {
		"a": "()",
		"d": "YANLIŞ mantıksal değerini verir",
		"ad": ""
	},
	"IF": {
		"a": "(mantıksal_sınama; [eğer_doğruysa_değer]; [eğer_yanlışsa_değer])",
		"d": "Belirttiğiniz koşul DOĞRU olarak hesaplanıyorsa bir değer, YANLIŞ olarak hesaplanıyorsa başka bir değer verir",
		"ad": "DOĞRU veya YANLIŞ olarak hesaplanabilecek bir değer veya ifade!mantıksal_sınama DOĞRU olduğunda gelen değer. Atlanırsa, DOĞRU gelir. En çok yedi eğer fonksiyonunu iç içe geçirebilirsiniz!mantıksal_sınama YANLIŞ olduğunda gelen değer. Atlanırsa, YANLIŞ gelir"
	},
	"IFS": {
		"a": "(mantıksal_test; doğruysa_değer; ...)",
		"d": "Bir veya birden fazla koşulun karşılanıp karşılanmadığını denetler ve ilk DOĞRU koşula karşılık gelen bir değer döndürür",
		"ad": "DOĞRU veya YANLIŞ olarak hesaplanabilecek bir değer veya ifadedir!mantıksal_test DOĞRU ise döndürülen değerdir"
	},
	"IFERROR": {
		"a": "(değer; eğer_hatalıysa_değer)",
		"d": "İfade hatalı olursa eğer_hatalıysa_değer, hatalı olmazsa ifadenin kendi değerini döndürür",
		"ad": "herhangi bir değer veya ifade veya başvuru!herhangi bir değer veya ifade veya başvuru"
	},
	"IFNA": {
		"a": "(değer; değer_eğer_yok)",
		"d": "İfade #YOK olarak çözümlenirse belirttiğiniz değeri döndürür, aksi durumda ifadenin sonucunu döndürür",
		"ad": "herhangi bir değer, ifade veya başvuru!herhangi bir değer, ifade veya başvuru"
	},
	"NOT": {
		"a": "(mantıksal)",
		"d": "Bağımsız değişkenin mantığını tersine çevirir: DOĞRU bir bağımsız değişken için YANLIŞ, YANLIŞ bir bağımsız değişken için DOĞRU verir",
		"ad": "DOĞRU veya YANLIŞ olarak hesaplanabilecek değer veya ifade"
	},
	"OR": {
		"a": "(mantıksal1; [mantıksal2]; ...)",
		"d": "Bağımsız değişkenlerin DOĞRU olup olmadığını denetler ve DOĞRU veya YANLIŞ döndürür. Yalnızca bağımsız değişkenlerin tümü YANLIŞ ise YANLIŞ döndürür",
		"ad": "sınamak istediğiniz en az 1 en fazla 255 koşuldur, her biri DOĞRU veya YANLIŞ olabilir"
	},
	"SWITCH": {
		"a": "(ifade; değer1; sonuç1; [varsayılan_veya_değer2]; [sonuç2]; ...)",
		"d": "İfadeyi bir değer listesine göre hesaplayarak ilk eşleşen değere karşılık gelen sonucu döndürür. Eşleşme yoksa isteğe bağlı varsayılan bir değer döndürülür",
		"ad": "hesaplanacak ifade!ifadeyle karşılaştırılacak değer!karşılık gelen değer ifadeyle eşleştiğinde dönüdürülecek sonuç"
	},
	"TRUE": {
		"a": "()",
		"d": "Mantıksal DOĞRU'yu verir",
		"ad": ""
	},
	"XOR": {
		"a": "(mantıksal1; [mantıksal2]; ...)",
		"d": "Tüm bağımsız değişkenlere mantıksal 'Dışlayıcı Veya' işlecini uygular ve sonucu döndürür",
		"ad": "DOĞRU veya YANLIŞ olduğunu sınamak istediğiniz en az 1 en fazla 254 koşuldur ve her biri mantıksal değer, dizi ya da başvuru olabilir"
	},
	"TEXTBEFORE": {
		"a": "(metin, sınırlayıcı, [örnek_sayısı], [eşleştirme_modu], [eşleştirme_sonu], [bulunamıyorsa])",
		"d": "Karakterleri sınırlandırmadan önceki metni döndürür.",
		"ad": "Sınırlayıcıyı aramak istediğiniz metin.!Sınırlayıcı olarak kullanılacak karakter veya dize.!Sınırlayıcının istenen oluşumu. Varsayılan değer 1'dir. Negatif bir sayı sondan itibaren arar.!Metinde sınırlayıcı eşleşmesi arar. Varsayılan olarak, büyük/küçük harfe duyarlı bir eşleştirme yapılır.! Sınırlayıcının metnin sonuna göre eşleştirilip eşleştirilmeyeceği. Varsayılan olarak eşleşmezler.!Eşleşme bulunamazsa döndürülür. Varsayılan olarak, #YOK döndürülür."
	},
	"TEXTAFTER": {
		"a": "(metin, sınırlayıcı, [örnek_sayısı], [eşleştirme_modu], [eşleştirme_sonu], [bulunamıyorsa])",
		"d": "Karakterleri sınırlandırmadan sonraki metni döndürür.",
		"ad": "Sınırlayıcıyı aramak istediğiniz metin.!Sınırlayıcı olarak kullanılacak karakter veya dize.!Sınırlayıcının istenen oluşumu. Varsayılan değer 1'dir. Negatif bir sayı sondan itibaren arar.!Metinde sınırlayıcı eşleşmesi arar. Varsayılan olarak, büyük/küçük harfe duyarlı bir eşleşme yapılır.!Sınırlayıcının metnin sonuna göre eşleşip eşleşmeyeceği. Varsayılan olarak eşleşmezler.!Eşleşme bulunamazsa döndürülür. Varsayılan olarak #YOK döndürülür."
	},
	"TEXTSPLIT": {
		"a": "(metin, sütun_sınırlayıcı, [satır_sınırlayıcı], [boşları_yoksay], [eşleştirme_modu], [şununla_doldur])",
		"d": "Sınırlayıcıları kullanarak metni satırlara veya sütunlara böler.",
		"ad": "Bölünecek metin!Sütunları bölmek için karakter veya dize.!Satırları bölmek için karakter veya dize.!Boş hücrelerin göz ardı edilip edilmeyeceği. Varsayılan olarak YANLIŞ.!Metinde bir sınırlayıcı eşleşmesi arar. Varsayılan olarak büyük/küçük harfe duyarlı bir eşleşme yapılır.!Doldurma için kullanılacak değer. Varsayılan olarak #YOK kullanılır."
	},
	"WRAPROWS": {
		"a": "(vektör, sarma_sayısı, [şununla_doldur])",
		"d": "Belirtilen sayıda değerden sonra bir satır veya sütun vektörünü sarar.",
		"ad": "Sarılacak vektör veya başvuru.!Satır başına maksimum değer sayısı.!Doldurulacak değer. Varsayılan değer #YOK'tur."
	},
	"VSTACK": {
		"a": "(dizi1, [dizi2], ...)",
		"d": "Dizileri tek bir dizide dikey olarak yığınlar.",
		"ad": "Yığınlanacak bir dizi veya başvuru."
	},
	"HSTACK": {
		"a": "(dizi1, [dizi2], ...)",
		"d": "Dizileri tek bir dizide yatay olarak yığınlar.",
		"ad": "Yığınlanacak bir dizi veya başvuru."
	},
	"CHOOSEROWS": {
		"a": "(dizi, row_num1, [row_num2], ...)",
		"d": "Bir diziden veya başvurudan satırları döndürür.",
		"ad": "Döndürülecek satırları içeren dizi veya başvuru.!Döndürülecek satırın numarası."
	},
	"CHOOSECOLS": {
		"a": "(dizi, col_num1, [col_num2], ...)",
		"d": "Bir diziden veya başvurudan sütunları döndürür.",
		"ad": "Döndürülecek sütunları içeren dizi veya başvuru.!Döndürülecek sütunun numarası."
	},
	"TOCOL": {
		"a": "(dizi, [yoksay], [scan_by_column])",
		"d": "Diziyi bir sütun olarak döndürür.",
		"ad": "Sütun olarak döndürülecek dizi veya başvuru.!Belirli değer türlerinin yok sayılma veya yok sayılmama durumu. Varsayılan olarak, hiçbir değer göz ardı edilmez.!Diziyi sütuna göre tarayın. Varsayılan olarak, dizi satıra göre taranır."
	},
	"TOROW": {
		"a": "(dizi, [yoksay], [scan_by_column])",
		"d": "Diziyi bir satır olarak döndürür.",
		"ad": "Satır olarak döndürülecek dizi veya başvuru.!Belirli değer türlerinin yok sayılma veya yok sayılmama durumu. Varsayılan olarak, hiçbir değer göz ardı edilmez.!Diziyi sütuna göre tarayın. Varsayılan olarak, dizi satıra göre taranır."
	},
	"WRAPCOLS": {
		"a": "(vektör, sarma_sayısı, [şununla_doldur])",
		"d": "Belirtilen sayıda değerden sonra bir satır veya sütun vektörünü sarar.",
		"ad": "Sarılacak vektör veya başvuru.!Sütun başına maksimum değer sayısı.!Doldurulacak değer. Varsayılan değer #YOK'tur."
	},
	"TAKE": {
		"a": "(dizi, satırlar, [sütunlar])",
		"d": "Dizinin başlangıcından veya sonundan satırları veya sütunları döndürür.",
		"ad": "Satır veya sütunların alınacağı dizi.!Alınacak satır sayısı. Dizinin sonundan negatif bir değer alır.!Alınacak sütun sayısı. Dizinin sonundan negatif bir değer alır."
	},
	"DROP": {
		"a": "(dizi, satırlar, [sütunlar])",
		"d": "Dizinin başlangıcından veya sonundan satırları veya sütunları bırakır.",
		"ad": "Satırların veya sütunların bırakılacağı dizi.!Bırakılacak satır sayısı. Dizinin sonundan negatif bir değer düşer.!Bırakılacak sütun sayısı. Dizinin sonundan negatif bir değer düşer."
	},
	"SEQUENCE": {
		"a": "(satırlar, [sütunlar], [başlangıç], [artış])",
		"d": "Bir sayı dizisi döndürür",
		"ad": "döndürülecek satır sayısı!döndürülecek sütun sayısı!dizideki ilk sayı!dizide bir sonraki değerde yapılacak artış miktarı"
	},
	"EXPAND": {
		"a": "(dizi, satırlar, [sütunlar], [pad_with])",
		"d": "Bir diziyi belirtilen boyutlara genişletir.",
		"ad": "Genişletilecek dizi.!Genişletilmiş dizideki satır sayısı.Eksikse, satırlar genişletilmez.!Genişletilmiş dizideki sütun sayısı.Eksikse, sütunlar genişletilmez.!Doldurulacak değer. Varsayılan değer #N/A'dır."
	},
	"XMATCH": {
		"a": "(arama_değeri, arama_dizisi, [eşleştirme_modu], [arama_modu])",
		"d": "Bir dizideki öğenin göreli konumunu döndürür. Varsayılan olarak tam eşleşme gereklidir",
		"ad": "aranacak değer!arama yapılacak dizi veya aralık!arama_değerini, arama_dizisindeki değerlerle eşleştirme biçimini belirtin!kullanılacak arama modunu belirtin. Varsayılan olarak baştan sona doğru arama kullanılır"
	},
	"FILTER": {
		"a": "(dizi, ekle, [boşsa])",
		"d": "Bir aralığı veya diziyi filtreler",
		"ad": "filtrelenecek aralık veya dizi!korunacak satır veya sütunun DOĞRU değeriyle gösterildiği boole değerleri dizisi!korunan öğe yoksa döndürülür"
	},
	"ARRAYTOTEXT": {
		"a": "(dizi, [biçim])",
		"d": "Dizinin metin olarak temsilini döndürür",
		"ad": "metin olarak temsil edilecek dizi!metnin biçimi"
	},
	"SORT": {
		"a": "(dizi, [sıralama_dizini], [sıralama_düzeni], [sütuna_göre])",
		"d": "Aralığı veya diziyi sıralar",
		"ad": "sıralanacak aralık veya dizi!sıralama ölçütü olan satırı veya sütunu belirten sayı!istenen sıralama düzenini belirten sayı; artan düzen (varsayılan) için 1, azalan düzen için -1!istenen sıralama yönünü belirten mantıksal değer: satıra göre (varsayılan) sıralamak için YANLIŞ, sütuna göre sıralamak için DOĞRU"
	},
	"SORTBY": {
		"a": "(dizi, diziye_göre, [sıralama_düzeni], ...)",
		"d": "Bir aralığı veya diziyi, karşılık gelen aralık veya dizideki değerlere göre sıralar",
		"ad": "sıralanacak aralık veya dizi!sıralama yaparken temel alınacak aralık veya dizi!istenen sıralama düzenini belirten sayı; artan düzen (varsayılan) için 1, azalan düzen için -1"
	},
	"GETPIVOTDATA": {
		"a": "(veri_alanı; pivot_table; [alan]; [öğe]; ...)",
		"d": "PivotTable'da depolanmış verileri verir",
		"ad": "verinin alınacağı veri alanının adıdır!almak istediğiniz verileri içeren PivotTable'daki bir hücreye veya hücreler aralığına yapılan başvurudur!başvuruda bulunulan alan!başvuruda bulunulan alan öğesi"
	},
	"IMPORTRANGE": {
		"a": "(e-tablo_url'si; aralık_dizesi)",
		"d": "Belirtilen bir e-tablodan bir hücre aralığını içe aktarır.",
		"ad": "Verilerin içe aktarılacağı e-tablonun URL'si!aktarılacak aralığı belirten bir dize"
	}
}